<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:DarkUI.WPF.CustomControls"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<Style TargetType="{x:Type controls:ColorPickerButton}">
		<!--  Control properties  -->
		<Setter Property="Focusable" Value="True" />

		<!--  Layout  -->
		<Setter Property="Height" Value="{x:Static local:Defaults.InputControl_Height}" />
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.InputControl_DefaultPadding}" />

		<!--  Template  -->
		<Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColorPickerButton}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush_Border_Focused}" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsPressed" Value="False" />
							</MultiTrigger.Conditions>

							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush_FocusHighlight}" />
						</MultiTrigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
