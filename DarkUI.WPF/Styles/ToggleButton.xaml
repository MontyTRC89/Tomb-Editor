<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<Style TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource InputControl_Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource InputControl_Border}" />
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.Thickness_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="{x:Static local:Defaults.InputControlWidth}" />
		<Setter Property="Height" Value="{x:Static local:Defaults.InputControlHeight}" />

		<Setter Property="Padding">
			<Setter.Value>
				<Thickness
					Bottom="{x:Static local:Defaults.ThicknessWidth_InputControl_DefaultPadding}"
					Left="{x:Static local:Defaults.ThicknessWidth_InputControl_LargePadding}"
					Right="{x:Static local:Defaults.ThicknessWidth_InputControl_LargePadding}"
					Top="{x:Static local:Defaults.ThicknessWidth_InputControl_DefaultPadding}" />
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Border
							x:Name="PART_Border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter
								x:Name="PART_ContentPresenter"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Focusable="False"
								RecognizesAccessKey="True" />
						</Border>
						<Border
							x:Name="PART_HoverIndicatorBorder"
							Margin="{TemplateBinding BorderBrush}"
							Background="{DynamicResource InputControl_HoverHighlight}"
							Opacity="{DynamicResource InputControl_HoverHighlight_Opacity}"
							Visibility="Hidden" />
					</Grid>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsPressed" Value="False" />
							</MultiTrigger.Conditions>

							<Setter TargetName="PART_HoverIndicatorBorder" Property="Visibility" Value="Visible" />
						</MultiTrigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource InputControl_Background_Pressed}" />
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InputControl_Border_Pressed}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource InputControl_Background_Checked}" />
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InputControl_Border_Checked}" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource InputControl_Background_Disabled}" />
							<Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="{DynamicResource DisabledContent_Opacity}" />
						</Trigger>

						<Trigger Property="Button.IsDefault" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource InputControl_Background_Defaulted}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InputControl_Border_Pressed}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="IconOnlyToggleButton"
		BasedOn="{StaticResource {x:Type ToggleButton}}"
		TargetType="{x:Type ToggleButton}">
		<Setter Property="Padding" Value="{x:Static local:Defaults.Padding_InputControl}" />
		<Setter Property="Width" Value="Auto" />
	</Style>
</ResourceDictionary>
