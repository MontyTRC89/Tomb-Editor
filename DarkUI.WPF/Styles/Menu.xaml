<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border
						Background="{DynamicResource GreyBackground}"
						BorderBrush="{DynamicResource LightBorder}"
						BorderThickness="0,0,0,1"
						SnapsToDevicePixels="True"
						UseLayoutRounding="True">
						<StackPanel
							ClipToBounds="True"
							IsItemsHost="True"
							Orientation="Horizontal" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{DynamicResource LightBorder}" BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="MenuScrollButton"
		BasedOn="{x:Null}"
		TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover" />
		<Setter Property="MinWidth" Value="10" />
		<Setter Property="MinHeight" Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border
						x:Name="PART_Border"
						Background="{DynamicResource LightBackground}"
						BorderBrush="{DynamicResource LightBorder}"
						BorderThickness="{DynamicResource Default_BorderThickness}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							x:Name="ContentContainer"
							Margin="2"
							HorizontalAlignment="Center"
							VerticalAlignment="Bottom" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource DarkBackground}" />
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource BlueHighlight}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ScrollViewer for a MenuItem  -->
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Style
		x:Key="MenuScrollViewer"
		BasedOn="{x:Null}"
		TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="1" Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}" />
						</Border>
						<RepeatButton
							Grid.Row="0"
							Grid.Column="0"
							Command="{x:Static ScrollBar.LineUpCommand}"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Focusable="False"
							Style="{StaticResource MenuScrollButton}">
							<RepeatButton.Visibility>
								<MultiBinding
									Converter="{StaticResource MenuScrollingVisibilityConverter}"
									ConverterParameter="0"
									FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Data="{DynamicResource WideArrowUp}" Fill="{DynamicResource LightText}" />
						</RepeatButton>
						<RepeatButton
							Grid.Row="2"
							Grid.Column="0"
							Command="{x:Static ScrollBar.LineDownCommand}"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Focusable="False"
							Style="{StaticResource MenuScrollButton}">
							<RepeatButton.Visibility>
								<MultiBinding
									Converter="{StaticResource MenuScrollingVisibilityConverter}"
									ConverterParameter="100"
									FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Data="{DynamicResource WideArrowDown}" Fill="{DynamicResource LightText}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  TopLevelHeader  -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border">
			<Grid>
				<ContentPresenter
					Margin="10,6,10,6"
					ContentSource="Header"
					RecognizesAccessKey="True" />
				<Popup
					x:Name="Popup"
					AllowsTransparency="True"
					Focusable="False"
					IsOpen="{TemplateBinding IsSubmenuOpen}"
					Placement="Bottom"
					PopupAnimation="Fade">
					<Border
						x:Name="SubmenuBorder"
						Margin="0,0,6,6"
						Background="{DynamicResource GreyBackground}"
						BorderBrush="{DynamicResource LightBorder}"
						BorderThickness="{DynamicResource Default_BorderThickness}"
						SnapsToDevicePixels="True">
						<Border.Effect>
							<DropShadowEffect Opacity="0.3" ShadowDepth="3" />
						</Border.Effect>
						<ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource GreySelection}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  TopLevelItem  -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border">
			<Grid>
				<ContentPresenter
					Margin="6,3,6,3"
					ContentSource="Header"
					RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource GreySelection}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  SubmenuItem  -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="Border"
			Height="24"
			BorderThickness="1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="24" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="Icon"
					Margin="4,0,0,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					ContentSource="Icon" />
				<Border
					x:Name="Check"
					Width="20"
					Height="20"
					Margin="1"
					HorizontalAlignment="Left"
					BorderThickness="{DynamicResource Default_BorderThickness}"
					Visibility="Collapsed">
					<Path
						x:Name="CheckMark"
						Width="10"
						Height="10"
						Data="{DynamicResource CheckMark}"
						SnapsToDevicePixels="False"
						Stroke="{DynamicResource LightText}"
						StrokeThickness="1"
						Visibility="Hidden" />
				</Border>
				<ContentPresenter
					x:Name="HeaderHost"
					Grid.Column="1"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True" />
				<TextBlock
					x:Name="InputGestureText"
					Grid.Column="2"
					Margin="16,2,0,2"
					VerticalAlignment="Center"
					DockPanel.Dock="Right"
					Text="{TemplateBinding InputGestureText}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="Check" Property="Background" Value="{DynamicResource BlueBackground}" />
				<Setter TargetName="Check" Property="BorderBrush" Value="{DynamicResource BlueHighlight}" />
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsCheckable" Value="True">
				<Setter TargetName="Check" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource GreyHighlight}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="Border"
			Height="24"
			BorderThickness="1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="24" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="Icon"
					Margin="4,0,0,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					ContentSource="Icon" />
				<ContentPresenter
					x:Name="HeaderHost"
					Grid.Column="1"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True" />
				<TextBlock
					x:Name="InputGestureText"
					Grid.Column="2"
					Margin="16,2,0,2"
					VerticalAlignment="Center"
					DockPanel.Dock="Right"
					Text="{TemplateBinding InputGestureText}" />
				<Path
					Grid.Column="3"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="M 0 0 L 0 7 L 4 3.5 Z"
					Fill="{DynamicResource LightText}" />
				<Popup
					x:Name="Popup"
					AllowsTransparency="True"
					Focusable="False"
					HorizontalOffset="-4"
					IsOpen="{TemplateBinding IsSubmenuOpen}"
					Placement="Right"
					PopupAnimation="Fade">
					<Border
						x:Name="SubmenuBorder"
						Margin="0,0,6,6"
						Background="{DynamicResource GreyBackground}"
						BorderBrush="{DynamicResource LightBorder}"
						BorderThickness="{DynamicResource Default_BorderThickness}"
						SnapsToDevicePixels="True">
						<Border.Effect>
							<DropShadowEffect Opacity="0.3" ShadowDepth="3" />
						</Border.Effect>
						<ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource GreyHighlight}" />
			</Trigger>
			<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  MenuItem Style  -->
	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
				<Setter Property="Grid.IsSharedSizeScope" Value="True" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
