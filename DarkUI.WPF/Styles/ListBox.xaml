<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<Style TargetType="{x:Type ListBox}">
		<!--  Control properties  -->
		<Setter Property="AlternationCount" Value="2" />

		<!--  Layout  -->
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource Default_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.Thickness_Border}" />

		<!--  ScrollViewer  -->
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ScrollViewer Padding="{TemplateBinding Padding}">
							<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
						</ScrollViewer>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource InputControl_Background_Disabled}" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="True" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
							</MultiTrigger.Conditions>

							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListBoxItem}">
		<!--  Layout  -->
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="Transparent" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.Padding_ListViewItem}" />

		<!--  Template  -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border
						x:Name="border"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ContentPresenter
							x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource DisabledContent_Opacity}" />
						</Trigger>

						<Trigger Property="ItemsControl.AlternationIndex" Value="1">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource ItemControl_Item_Background_Alternation}" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>

							<Setter TargetName="border" Property="Background" Value="{DynamicResource ItemControl_Item_Background_Selected}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>

							<Setter TargetName="border" Property="Background" Value="{DynamicResource ItemControl_Item_Background_Selected_LostFocus}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
