<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:DarkUI.WPF.Controls"
	xmlns:local="clr-namespace:DarkUI.WPF">
	<Style TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource Default_Border}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="AlternationCount" Value="2" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border
						x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<!--  CanContentScroll must be false, otherwise scrolling breaks  -->
						<ScrollViewer
							x:Name="_tv_scrollviewer_"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							CanContentScroll="false"
							Focusable="false"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource InputControl_Background_Disabled}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource InputControl_Border_Disabled}" />
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<PathGeometry x:Key="TreeArrow" Figures="M 0 0 L0 5 L5 0 z" />

	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Background" Value="{DynamicResource Default_Text}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Default_Text}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						Width="16"
						Height="16"
						Padding="2,4"
						Background="Transparent"
						UseLayoutRounding="True">
						<Path
							x:Name="ExpandPath"
							Data="{StaticResource TreeArrow}"
							Fill="Transparent"
							Stroke="{DynamicResource Default_Text}">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterX="3" CenterY="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="ExpandPath" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" CenterX="4" CenterY="3" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource Default_Text}" />
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource Default_Text}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource Default_Text}" />
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource Default_Text}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource Default_Text}" />
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource Default_Text}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type controls:TreeViewItemEx}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="0,2" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="AlternationCount" Value="2" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TreeViewItemEx}">
					<StackPanel>
						<Border
							x:Name="Bd"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							UseLayoutRounding="True">
							<Grid>
								<Grid.Style>
									<Style TargetType="{x:Type Grid}">
										<Setter Property="Margin">
											<Setter.Value>
												<MultiBinding Converter="{x:Static local:Constants.LengthConverter}">
													<Binding RelativeSource="{RelativeSource TemplatedParent}" />
													<Binding Path="IndentSize" RelativeSource="{RelativeSource AncestorType={x:Type TreeView}}" />
												</MultiBinding>
											</Setter.Value>
										</Setter>
									</Style>
								</Grid.Style>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>

								<ToggleButton
									x:Name="Expander"
									ClickMode="Press"
									IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									Style="{StaticResource ExpandCollapseToggleStyle}" />
								<ContentPresenter
									x:Name="PART_Header"
									Grid.Column="1"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									ContentSource="Header"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</Border>

						<ItemsPresenter x:Name="ItemsHost" />
					</StackPanel>

					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemControl_Item_Background_Selected}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ItemControl_Item_Background_Selected}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemControl_Item_Background_Selected_LostFocus}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ItemControl_Item_Background_Selected_LostFocus}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource Default_Text_Disabled}" />
						</Trigger>
						<Trigger Property="ItemsControl.AlternationIndex" Value="0">
							<Setter Property="Background" Value="{DynamicResource HeaderBackground}" />
						</Trigger>
						<Trigger Property="ItemsControl.AlternationIndex" Value="1">
							<Setter Property="Background" Value="{DynamicResource GreyBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
