<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:DarkUI.WPF.CustomControls"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<Style TargetType="{x:Type controls:SearchableComboBox}">
		<Setter Property="Background" Value="{DynamicResource InputControl_Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource InputControl_Border}" />
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.Thickness_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.Padding_Default}" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />
		<Setter Property="Height" Value="{x:Static local:Defaults.InputControlHeight}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SearchableComboBox}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
						</Grid.ColumnDefinitions>

						<Popup
							Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
							MaxHeight="360"
							AllowsTransparency="True"
							IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<Border
								Padding="{x:Static local:Defaults.Padding_Default}"
								Background="{DynamicResource Default_Backdrop}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>

									<AdornerDecorator>
										<TextBox
											x:Name="PART_SearchTextBox"
											Width="Auto"
											Text="{Binding SearchText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
											<TextBox.BorderThickness>
												<Thickness
													Bottom="{x:Static local:Defaults.ThicknessWidth_Border}"
													Left="{x:Static local:Defaults.ThicknessWidth_Border}"
													Top="{x:Static local:Defaults.ThicknessWidth_Border}" />
											</TextBox.BorderThickness>

											<local:WatermarkService.Watermark>
												<TextBlock Foreground="{DynamicResource Default_Text}" Text="Search..." />
											</local:WatermarkService.Watermark>
										</TextBox>
									</AdornerDecorator>

									<Button
										x:Name="PART_SearchButton"
										Grid.Column="1"
										Width="Auto"
										Padding="{x:Static local:Defaults.Padding_ButtonWithIconOnly}">
										<Image
											Width="{x:Static local:Defaults.IconWidth}"
											Height="{x:Static local:Defaults.IconHeight}"
											Source="/DarkUI.WPF;component/Resources/search-16.png" />
									</Button>

									<Border
										x:Name="PART_ItemsPresenterBorder"
										Grid.Row="1"
										Grid.ColumnSpan="2"
										Margin="0,4,0,0"
										Background="{DynamicResource Default_Background}"
										BorderBrush="{DynamicResource Default_Border}"
										BorderThickness="{x:Static local:Defaults.Thickness_Border}">
										<Grid>
											<ScrollViewer>
												<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
											</ScrollViewer>
											<TextBlock
												Margin="6,0,0,0"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												IsHitTestVisible="False"
												Opacity="{DynamicResource DisabledContent_Opacity}"
												Text="No items found.">
												<TextBlock.Style>
													<Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
														<Setter Property="Visibility" Value="Collapsed" />
														<Style.Triggers>
															<DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
																<Setter Property="Visibility" Value="Visible" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
											</TextBlock>
										</Grid>
									</Border>
								</Grid>
							</Border>
						</Popup>

						<ToggleButton
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Style="{DynamicResource ComboBoxToggleButton}" />
						<ContentPresenter
							x:Name="PART_ContentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding SelectionBoxItem}"
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							IsHitTestVisible="False" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="PART_ItemsPresenterBorder" Property="Height" Value="60" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="{DynamicResource DisabledContent_Opacity}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
