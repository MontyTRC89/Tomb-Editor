<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit.NET5"
	xmlns:local="clr-namespace:DarkUI.WPF"
	xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit.NET5">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Xceed.Wpf.Toolkit.NET5;component/Themes/Generic/Glyphs.xaml" />
		<ResourceDictionary Source="/DarkUI.WPF;component/Styles/Icon.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<conv:InverseBoolConverter x:Key="InverseBoolConverter" />

	<BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />

	<Style TargetType="{x:Type Separator}">
		<!--  Layout  -->
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />

		<!--  Thicknesses  -->
		<Setter Property="Margin" Value="{x:Static local:Defaults.TinyThickness}" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{TemplateBinding BorderBrush}">
						<Border.BorderThickness>
							<Thickness Left="{x:Static local:Defaults.BorderThicknessWidth}" Top="{x:Static local:Defaults.BorderThicknessWidth}" />
						</Border.BorderThickness>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Static ToolBar.SeparatorStyleKey}"
		BasedOn="{StaticResource {x:Type Separator}}"
		TargetType="{x:Type Separator}" />

	<Style TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="{DynamicResource Brush_Background}" />
		<Setter Property="Margin" Value="{x:Static local:Defaults.TinyThickness}" />
	</Style>

	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />

		<Setter Property="Padding" Value="{x:Static local:Defaults.SmallThickness}" />

		<Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border
							x:Name="border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid SnapsToDevicePixels="False" UseLayoutRounding="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>

								<Grid Grid.Column="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>

									<Path
										Data="{DynamicResource NarrowArrowRight}"
										Fill="{DynamicResource Brush_Text}"
										Stretch="Uniform" />
									<Path
										Grid.Column="1"
										Data="{DynamicResource NarrowArrowRight}"
										Fill="{DynamicResource Brush_Text}"
										Stretch="Uniform" />
								</Grid>
							</Grid>
						</Border>

						<Rectangle
							x:Name="hoverRect"
							Margin="{TemplateBinding BorderThickness}"
							Fill="{DynamicResource Brush_HoverHighlight}"
							Opacity="{DynamicResource Opacity_HoveredHighlight}"
							Visibility="Hidden" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="hoverRect" Property="Visibility" Value="Visible" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="hoverRect" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Width" Value="{x:Static local:Defaults.ToolBar_OverflowButtonSize}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Bottom" />

		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />

		<Setter Property="Padding" Value="{x:Static local:Defaults.InputControl_DefaultPadding}" />

		<Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border
							x:Name="border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid SnapsToDevicePixels="False" UseLayoutRounding="False">
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>

									<Path
										Data="{DynamicResource NarrowArrowDown}"
										Fill="{DynamicResource Brush_Text}"
										Stretch="Uniform" />
									<Path
										Grid.Row="1"
										Data="{DynamicResource NarrowArrowDown}"
										Fill="{DynamicResource Brush_Text}"
										Stretch="Uniform" />
								</Grid>
							</Grid>
						</Border>

						<Rectangle
							x:Name="hoverRect"
							Margin="{TemplateBinding BorderThickness}"
							Fill="{DynamicResource Brush_HoverHighlight}"
							Opacity="{DynamicResource Opacity_HoveredHighlight}"
							Visibility="Hidden" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="hoverRect" Property="Visibility" Value="Visible" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="hoverRect" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Margin" Value="{x:Static local:Defaults.ToolBar_GripperMargin}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush
									TileMode="Tile"
									Viewbox="{x:Static local:Defaults.ToolBar_GripperPatternViewbox}"
									ViewboxUnits="Absolute"
									Viewport="{x:Static local:Defaults.ToolBar_GripperPatternViewport}"
									ViewportUnits="Absolute">
									<DrawingBrush.Drawing>
										<GeometryDrawing Brush="{DynamicResource Brush_Border_High}" Geometry="{DynamicResource GripperPattern}" />
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" Value="SizeAll" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="Transparent" />

		<!--
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.BorderThickness}" />
		-->

		<Setter Property="Foreground" Value="{DynamicResource Brush_Text}" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.BorderThickness}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Border
						x:Name="panelBorder"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="panelGrid">
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<Thumb
									x:Name="thumb"
									Width="{x:Static local:Defaults.ToolBar_GripperSize}"
									Style="{StaticResource ToolBarThumbStyle}" />
								<ContentPresenter
									x:Name="header"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									ContentSource="Header">
									<ContentPresenter.Margin>
										<Thickness Left="{x:Static local:Defaults.SmallThicknessWidth}" Right="{x:Static local:Defaults.SmallThicknessWidth}" />
									</ContentPresenter.Margin>
								</ContentPresenter>
								<ToolBarPanel
									x:Name="PART_ToolBarPanel"
									IsItemsHost="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</DockPanel>
							<Grid x:Name="overflowGrid" Grid.Column="1">
								<ToggleButton
									x:Name="overflowButton"
									ClickMode="Press"
									IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									IsEnabled="{TemplateBinding HasOverflowItems}"
									Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
									Visibility="{TemplateBinding HasOverflowItems,
									                             Converter={StaticResource VisibleIfTrueConverter}}" />
								<Popup
									x:Name="overflowPopup"
									AllowsTransparency="True"
									IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
									Placement="Bottom"
									PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
									StaysOpen="False">
									<Border
										Margin="{x:Static local:Defaults.Thickness_ShadowMargin}"
										Padding="{x:Static local:Defaults.TinyThickness}"
										Background="{DynamicResource Brush_Background}"
										BorderBrush="{DynamicResource Brush_Border}"
										BorderThickness="{x:Static local:Defaults.BorderThickness}">
										<Border.Effect>
											<DropShadowEffect Opacity="{x:Static local:Defaults.DropShadow_Opacity}" ShadowDepth="{x:Static local:Defaults.DropShadow_Depth}" />
										</Border.Effect>

										<StackPanel>
											<ToolBarOverflowPanel
												x:Name="PART_ToolBarOverflowPanel"
												Margin="{x:Static local:Defaults.TinyThickness}"
												HorizontalAlignment="Left"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												KeyboardNavigation.TabNavigation="Cycle"
												WrapWidth="{x:Static local:Defaults.ToolBar_MaxOverflowPopupWidth}" />
											<Separator />
											<MenuItem Header="Add or remove buttons..." />
										</StackPanel>
									</Border>
								</Popup>
							</Grid>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="panelGrid" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>

						<Trigger Property="IsOverflowOpen" Value="True">
							<Setter TargetName="thumb" Property="IsEnabled" Value="False" />
						</Trigger>

						<Trigger Property="Header" Value="{x:Null}">
							<Setter TargetName="header" Property="Visibility" Value="Collapsed" />
						</Trigger>

						<Trigger Property="ToolBarTray.IsLocked" Value="True">
							<Setter TargetName="thumb" Property="Visibility" Value="Collapsed" />
						</Trigger>

						<Trigger Property="Orientation" Value="Vertical">
							<Setter TargetName="header" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="header" Property="Margin">
								<Setter.Value>
									<Thickness Bottom="{x:Static local:Defaults.SmallThicknessWidth}" Top="{x:Static local:Defaults.SmallThicknessWidth}" />
								</Setter.Value>
							</Setter>

							<Setter TargetName="overflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
							<Setter TargetName="overflowGrid" Property="Grid.Column" Value="0" />
							<Setter TargetName="overflowGrid" Property="Grid.Row" Value="1" />
							<Setter TargetName="overflowPopup" Property="Placement" Value="Right" />

							<Setter TargetName="thumb" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="thumb" Property="Width" Value="Auto" />
							<Setter TargetName="thumb" Property="Height" Value="{x:Static local:Defaults.ToolBar_GripperSize}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xceed:DropDownButton}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.InputControl_DefaultPadding}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xceed:DropDownButton}">
					<Grid>
						<ToggleButton
							x:Name="PART_DropDownButton"
							Grid.Column="1"
							Padding="{TemplateBinding Padding}"
							IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
							Style="{DynamicResource {x:Static ToolBar.ToggleButtonStyleKey}}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<ContentPresenter
									x:Name="contentPresenter"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Content="{TemplateBinding Content}"
									ContentStringFormat="{TemplateBinding ContentStringFormat}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									RecognizesAccessKey="True" />
								<Path
									Grid.Column="1"
									Width="{x:Static local:Defaults.ToolBar_DropDownButtonArrowWidth}"
									Margin="{x:Static local:Defaults.TinyThickness}"
									Data="{DynamicResource NarrowArrowDown}"
									Fill="{DynamicResource Brush_Text}"
									Stretch="Uniform" />
							</Grid>
						</ToggleButton>
						<Popup
							x:Name="PART_Popup"
							AllowsTransparency="True"
							IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
							Placement="{TemplateBinding DropDownPosition}"
							StaysOpen="False">
							<Border
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Margin="{x:Static local:Defaults.Thickness_ShadowMargin}"
								Padding="{x:Static local:Defaults.TinyThickness}"
								Background="{DynamicResource Brush_Background}"
								BorderBrush="{DynamicResource Brush_Border}"
								BorderThickness="{x:Static local:Defaults.BorderThickness}">
								<Border.Effect>
									<DropShadowEffect Opacity="{x:Static local:Defaults.DropShadow_Opacity}" ShadowDepth="{x:Static local:Defaults.DropShadow_Depth}" />
								</Border.Effect>

								<ScrollViewer VerticalScrollBarVisibility="Auto">
									<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource Opacity_DisabledContent}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Resources>
			<Style BasedOn="{StaticResource SmallImageIcon}" TargetType="{x:Type Image}" />
			<Style BasedOn="{StaticResource SmallPathIcon}" TargetType="{x:Type Path}" />
		</Style.Resources>
	</Style>
</ResourceDictionary>
