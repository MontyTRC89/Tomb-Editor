<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit.NET5"
	xmlns:prim="clr-namespace:Xceed.Wpf.Toolkit.Primitives;assembly=Xceed.Wpf.Toolkit.NET5"
	xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit.NET5"
	xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit.NET5">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Xceed.Wpf.Toolkit.NET5;component/Themes/Generic/Glyphs.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<conv:InverseBoolConverter x:Key="InverseBoolConverter" />
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<DataTemplate x:Key="DefaultWatermarkTemplate">
		<ContentControl
			Margin="0,0,3,0"
			Content="{Binding}"
			Focusable="False"
			Foreground="Gray" />
	</DataTemplate>

	<Style TargetType="{x:Type xceed:ButtonSpinner}">
		<Setter Property="Background" Value="{DynamicResource LightBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="BorderBrush" Value="{DynamicResource GreySelection}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SpinnerUpContentTemplate" Value="{StaticResource IncreaseGlyphNormalKey}" />
		<Setter Property="SpinnerDownContentTemplate" Value="{StaticResource DecreaseGlyphNormalKey}" />
		<Setter Property="SpinnerUpDisabledContentTemplate" Value="{StaticResource IncreaseGlyphDisabledKey}" />
		<Setter Property="SpinnerDownDisabledContentTemplate" Value="{StaticResource DecreaseGlyphDisabledKey}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xceed:ButtonSpinner}">
					<Border
						x:Name="Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="firstContentColumn" Width="*" />
								<ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter
								x:Name="contentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Focusable="False"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

							<Grid
								x:Name="gridContent"
								Grid.Column="1"
								Width="{TemplateBinding SpinnerWidth}"
								Height="{TemplateBinding SpinnerHeight}">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<RepeatButton
									x:Name="PART_IncreaseButton"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1,1,0,1"
									Foreground="{TemplateBinding Foreground}"
									IsTabStop="{TemplateBinding IsTabStop}">
									<Path
										x:Name="ArrowUp"
										Margin="1"
										Data="{DynamicResource NarrowArrowUp}"
										Fill="{DynamicResource LightText}"
										Stretch="Uniform" />
								</RepeatButton>

								<RepeatButton
									x:Name="PART_DecreaseButton"
									Grid.Row="1"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1,1,0,1"
									Foreground="{TemplateBinding Foreground}"
									IsTabStop="{TemplateBinding IsTabStop}">
									<Path
										x:Name="ArrowDown"
										Margin="1"
										Data="{DynamicResource NarrowArrowDown}"
										Fill="{DynamicResource LightText}"
										Stretch="Uniform" />
								</RepeatButton>

							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ShowButtonSpinner" Value="False">
							<Setter TargetName="gridContent" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="ShowSpinner" Value="False">
							<Setter TargetName="gridContent" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}" />
						</Trigger>
						<Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_IncreaseButton" Property="ContentTemplate" Value="{Binding SpinnerUpDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_DecreaseButton" Property="ContentTemplate" Value="{Binding SpinnerDownDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger Property="SpinnerLocation" Value="Left">
							<Setter TargetName="firstContentColumn" Property="Width" Value="Auto" />
							<Setter TargetName="secondContentColumn" Property="Width" Value="*" />
							<Setter TargetName="contentPresenter" Property="Grid.Column" Value="1" />
							<Setter TargetName="gridContent" Property="Grid.Column" Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NumericUpDown" TargetType="{x:Type prim:InputBase}">
		<Setter Property="Background" Value="{DynamicResource LightBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource GreySelection}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Control">
					<xceed:ButtonSpinner
						x:Name="PART_Spinner"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Stretch"
						AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						IsTabStop="False"
						ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
						ShowSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
						SpinnerDownContentTemplate="{Binding ButtonSpinnerDownContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DecreaseGlyphNormalKey}}"
						SpinnerDownDisabledContentTemplate="{Binding ButtonSpinnerDownDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DecreaseGlyphDisabledKey}}"
						SpinnerHeight="{Binding ButtonSpinnerHeight, RelativeSource={RelativeSource TemplatedParent}}"
						SpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
						SpinnerUpContentTemplate="{Binding ButtonSpinnerUpContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource IncreaseGlyphNormalKey}}"
						SpinnerUpDisabledContentTemplate="{Binding ButtonSpinnerUpDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource IncreaseGlyphDisabledKey}}"
						SpinnerWidth="{Binding ButtonSpinnerWidth, RelativeSource={RelativeSource TemplatedParent}}">
						<xceed:WatermarkTextBox
							x:Name="PART_TextBox"
							MinWidth="20"
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AcceptsReturn="False"
							AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
							AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
							Background="Transparent"
							BorderThickness="0"
							CaretBrush="{TemplateBinding Foreground}"
							ContextMenu="{TemplateBinding ContextMenu}"
							FontFamily="{TemplateBinding FontFamily}"
							FontSize="{TemplateBinding FontSize}"
							FontStretch="{TemplateBinding FontStretch}"
							FontStyle="{TemplateBinding FontStyle}"
							FontWeight="{TemplateBinding FontWeight}"
							Foreground="{TemplateBinding Foreground}"
							IsTabStop="True"
							IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
							MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}"
							TabIndex="{TemplateBinding TabIndex}"
							TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
							TextWrapping="NoWrap"
							Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
							WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
					</xceed:ButtonSpinner>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
								<Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
						</MultiDataTrigger>
						<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
						</DataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ===============================================================================  -->
	<!--  DecimalUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:DecimalUpDown}" />

	<!--  ===============================================================================  -->
	<!--  DoubleUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:DoubleUpDown}" />

	<!--  ===============================================================================  -->
	<!--  IntegerUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:IntegerUpDown}" />

	<!--  ===============================================================================  -->
	<!--  ShortUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:ShortUpDown}" />

	<!--  ===============================================================================  -->
	<!--  LongUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:LongUpDown}" />

	<!--  ===============================================================================  -->
	<!--  ByteUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:ByteUpDown}" />

	<!--  ===============================================================================  -->
	<!--  SingleUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:SingleUpDown}" />

	<!--  ===============================================================================  -->
	<!--  Style for all internal derived types of NumericUpDown will be done in code-behind  -->
	<!--  for external themes to redefine the default style. The reason is that the  -->
	<!--  toolkit.dll uses the InternalsVisibleTo attribute which makes internal data only  -->
	<!--  available in code-behind (not xaml).  -->
	<!--  (ex. Office2007 theme)  -->
	<!--  ===============================================================================  -->

	<!--  ===============================================================================  -->
	<!--  SByteUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:SByteUpDown}" />

	<!--  ===============================================================================  -->
	<!--  UIntegerUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:UIntegerUpDown}" />

	<!--  ===============================================================================  -->
	<!--  ULongUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:ULongUpDown}" />

	<!--  ===============================================================================  -->
	<!--  UShortUpDown  -->
	<!--  ===============================================================================  -->
	<Style BasedOn="{StaticResource NumericUpDown}" TargetType="{x:Type xceed:UShortUpDown}" />
</ResourceDictionary>
