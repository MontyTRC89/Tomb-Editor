<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<Style TargetType="{x:Type CheckBox}">
		<!--  Layout  -->
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource Default_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="Padding">
			<Setter.Value>
				<Thickness Left="{x:Static local:Defaults.ThicknessWidth_Default}" />
			</Setter.Value>
		</Setter>

		<!--  Template  -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<Border
							x:Name="boxBorder"
							Width="{x:Static local:Defaults.CheckBoxWidth}"
							Height="{x:Static local:Defaults.CheckBoxHeight}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Background="{TemplateBinding Background}"
							BorderBrush="{DynamicResource InputControl_Glyph}"
							BorderThickness="{x:Static local:Defaults.Thickness_Border}">
							<Grid>
								<Path
									x:Name="checkMark"
									Data="{DynamicResource CheckMark}"
									Stretch="Uniform"
									Stroke="{DynamicResource InputControl_Glyph}"
									StrokeThickness="{x:Static local:Defaults.CheckMarkStrokeWidth}"
									Visibility="Hidden" />
								<Rectangle
									x:Name="indeterminateMark"
									Margin="{x:Static local:Defaults.Margin_CheckMark}"
									Fill="{DynamicResource InputControl_Glyph}"
									Stretch="Uniform"
									Visibility="Hidden" />
							</Grid>
						</Border>
						<Border Grid.Column="1" Background="{TemplateBinding Background}">
							<ContentPresenter
								x:Name="contentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}" />
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="boxBorder" Property="BorderBrush" Value="{DynamicResource InputControl_Glyph_Disabled}" />
							<Setter TargetName="checkMark" Property="Stroke" Value="{DynamicResource InputControl_Border}" />
							<Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource DisabledContent_Opacity}" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource InputControl_Border}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="boxBorder" Property="BorderBrush" Value="{DynamicResource InputControl_Glyph_Hovered}" />
							<Setter TargetName="checkMark" Property="Stroke" Value="{DynamicResource InputControl_Glyph_Hovered}" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource InputControl_Glyph_Hovered}" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="boxBorder" Property="BorderBrush" Value="{DynamicResource InputControl_Glyph_Hovered}" />
							<Setter TargetName="checkMark" Property="Stroke" Value="{DynamicResource InputControl_Glyph_Hovered}" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource InputControl_Glyph_Hovered}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="boxBorder" Property="BorderBrush" Value="{DynamicResource InputControl_Glyph_Pressed}" />
							<Setter TargetName="checkMark" Property="Stroke" Value="{DynamicResource InputControl_Border}" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource InputControl_Glyph_Pressed}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
						</Trigger>

						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="indeterminateMark" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
