<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="2"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource GreyBackground}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{DynamicResource GreyBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource LightBorder}" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border
						x:Name="Bd"
						Padding="0"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource GreyBackground}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource LightBorder}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<ScrollContentPresenter
							Name="PART_ScrollContentPresenter"
							CanContentScroll="True"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							KeyboardNavigation.DirectionalNavigation="Local" />
						<ScrollBar
							Name="PART_HorizontalScrollBar"
							Grid.Row="1"
							Maximum="{TemplateBinding ScrollableWidth}"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{TemplateBinding HorizontalOffset}" />
						<ScrollBar
							Name="PART_VerticalScrollBar"
							Grid.Column="1"
							Maximum="{TemplateBinding ScrollableHeight}"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{TemplateBinding VerticalOffset}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
		<Setter Property="Width" Value="18" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle
							Width="1"
							HorizontalAlignment="Center"
							Fill="{DynamicResource GreyBackground}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border
							x:Name="HeaderBorder"
							Padding="2,0,2,0"
							Background="{DynamicResource GreyBackground}"
							BorderBrush="{DynamicResource LightBorder}"
							BorderThickness="0,0,0,1">
							<ContentPresenter
								x:Name="HeaderContent"
								Margin="0,0,0,1"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Thumb
							x:Name="PART_HeaderGripper"
							Margin="0,0,-9,0"
							HorizontalAlignment="Right"
							Style="{StaticResource GridViewColumnHeaderGripper}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource GreyBackground}" />
							<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource LightBorder}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource GreyBackground}" />
							<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource LightBorder}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource GreyBackground}" />
							<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource LightBorder}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.7" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle
									Width="{TemplateBinding ActualWidth}"
									Height="{TemplateBinding ActualHeight}"
									Fill="#60000000" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border
								Name="HeaderBorder"
								Background="{DynamicResource GreyBackground}"
								BorderBrush="{DynamicResource LightBorder}"
								BorderThickness="0,0,0,1" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="4,1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border
						x:Name="Bd"
						Padding="2"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource GreyBackground}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource GreyBackground}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource BlueSelection}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource BlueSelection}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource BlueSelection}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource BlueSelection}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource DisabledText}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
