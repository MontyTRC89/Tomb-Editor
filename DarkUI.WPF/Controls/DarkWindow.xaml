<ResourceDictionary
	x:Class="DarkUI.WPF.Controls.DarkWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="Background" Value="{DynamicResource GreyBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BlueBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ResizeMode" Value="CanResizeWithGrip" />
		<Setter Property="WindowStyle" Value="SingleBorderWindow" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CaptionHeight="26"
					CornerRadius="0"
					GlassFrameThickness="1"
					NonClientFrameEdges="None"
					ResizeBorderThickness="6"
					UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Grid>
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<AdornerDecorator Margin="0,30,0,0">
									<ContentPresenter />
								</AdornerDecorator>
								<Grid
									x:Name="titlebar"
									Height="30"
									Margin="0"
									VerticalAlignment="Top"
									Background="{TemplateBinding BorderBrush}">
									<DockPanel Margin="0,0,130,0">
										<Image
											Height="64"
											Margin="0,-12,-4,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top"
											Opacity="0.5"
											Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
										<TextBlock
											Grid.Column="1"
											Width="Auto"
											Margin="5,3"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Center"
											FontSize="14"
											Foreground="{TemplateBinding Foreground}"
											Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
											TextAlignment="Left"
											TextWrapping="NoWrap" />
									</DockPanel>
									<StackPanel
										Grid.Column="0"
										HorizontalAlignment="Right"
										Orientation="Horizontal">
										<Button
											x:Name="btnMinimize"
											Width="40"
											VerticalAlignment="Stretch"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="Minimize_Event"
											WindowChrome.IsHitTestVisibleInChrome="True">
											<Rectangle
												Width="12"
												Margin="0"
												VerticalAlignment="Center"
												Stroke="{DynamicResource LightText}"
												StrokeThickness="2" />
										</Button>

										<Button
											x:Name="btnRestore"
											Width="40"
											VerticalAlignment="Stretch"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="AutoMinimize_Event"
											WindowChrome.IsHitTestVisibleInChrome="True">
											<Grid Width="12" Height="12">
												<Rectangle
													Margin="0"
													Stroke="{DynamicResource LightText}"
													StrokeThickness="2" />
											</Grid>
										</Button>
										<Button
											x:Name="btnClose"
											Width="40"
											VerticalAlignment="Stretch"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="CloseWindow_Event"
											Template="{DynamicResource CloseWindowButton}"
											WindowChrome.IsHitTestVisibleInChrome="True">
											<Grid Margin="0,1,0,0">
												<Line
													Stroke="{DynamicResource LightText}"
													StrokeThickness="2"
													X1="0"
													X2="11"
													Y1="0"
													Y2="11" />
												<Line
													Stroke="{DynamicResource LightText}"
													StrokeThickness="2"
													X1="0"
													X2="11"
													Y1="11"
													Y2="0" />
											</Grid>
										</Button>
									</StackPanel>
								</Grid>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="btnRestore" Property="Content">
								<Setter.Value>
									<Grid Width="14" Height="14">
										<Rectangle
											Margin="3,0,0,3"
											Stroke="{DynamicResource LightText}"
											StrokeThickness="2" />
										<Rectangle
											Margin="0,4,4,0"
											Fill="{DynamicResource BlueBackground}"
											Stroke="{DynamicResource LightText}"
											StrokeThickness="2" />
									</Grid>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="WindowState" Value="Normal">
							<Setter TargetName="btnRestore" Property="Content">
								<Setter.Value>
									<Grid Width="12" Height="12">
										<Rectangle
											Margin="0"
											Stroke="{DynamicResource LightText}"
											StrokeThickness="2" />
									</Grid>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="WindowState" Value="Maximized">
				<Setter Property="BorderThickness" Value="8" />
			</Trigger>
			<Trigger Property="WindowState" Value="Normal">
				<Setter Property="BorderThickness" Value="1" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="CloseWindowButton" TargetType="{x:Type Button}">
		<Border
			x:Name="border"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="true">
			<ContentPresenter
				x:Name="contentPresenter"
				Margin="{TemplateBinding Padding}"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Focusable="False"
				RecognizesAccessKey="True"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsDefaulted" Value="true">
				<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LighterBackground}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="border" Property="Background" Value="#FFF01428" />
				<Setter TargetName="border" Property="BorderBrush" Value="#FFF01428" />
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
				<Setter TargetName="border" Property="Background" Value="#FF940A14" />
				<Setter TargetName="border" Property="BorderBrush" Value="#FF940A14" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="border" Property="Background" Value="{DynamicResource GreyBackground}" />
				<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightBorder}" />
				<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource DisabledText}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>