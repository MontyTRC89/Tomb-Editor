<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!--  Style and template for the button in the upper left corner of the DataGrid.  -->
	<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle
							x:Name="Border"
							Fill="{DynamicResource ControlDefaultBackgroundBrush}"
							SnapsToDevicePixels="True"
							Stroke="{DynamicResource ControlBrightBorderBrush}" />
						<Polygon
							x:Name="Arrow"
							Margin="8,8,3,3"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							Fill="{DynamicResource ControlGlythBrush}"
							Opacity="0.15"
							Points="0,10 10,10 10,0"
							Stretch="Uniform" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ControlMouseOverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ControlSelectedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the DataGrid.  -->
	<Style TargetType="{x:Type DataGrid}">
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border
						x:Name="border"
						Padding="{TemplateBinding Padding}"
						Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<ScrollViewer
							x:Name="DG_ScrollViewer"
							Background="Transparent"
							Focusable="false">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<Button
											Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
											Command="{x:Static DataGrid.SelectAllCommand}"
											Focusable="false"
											Style="{StaticResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
											                                             TypeInTargetAssembly={x:Type DataGrid}}}"
											Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

										<DataGridColumnHeadersPresenter
											x:Name="PART_ColumnHeadersPresenter"
											Grid.Column="1"
											Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

										<ScrollContentPresenter
											x:Name="PART_ScrollContentPresenter"
											Grid.Row="1"
											Grid.ColumnSpan="2"
											CanContentScroll="{TemplateBinding CanContentScroll}" />

										<ScrollBar
											x:Name="PART_VerticalScrollBar"
											Grid.Row="1"
											Grid.Column="2"
											Maximum="{TemplateBinding ScrollableHeight}"
											Orientation="Vertical"
											ViewportSize="{TemplateBinding ViewportHeight}"
											Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
											Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

										<Grid Grid.Row="2" Grid.Column="1">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<ScrollBar
												x:Name="PART_HorizontalScrollBar"
												Grid.Column="1"
												Maximum="{TemplateBinding ScrollableWidth}"
												Orientation="Horizontal"
												ViewportSize="{TemplateBinding ViewportWidth}"
												Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
												Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  Style and template for the DataGridCell.  -->
	<Style TargetType="{x:Type DataGridCell}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border
						x:Name="border"
						Background="Transparent"
						BorderBrush="Transparent"
						BorderThickness="1"
						SnapsToDevicePixels="True">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular" />
								<VisualState x:Name="Current">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource GreySelection}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the DataGridRow.  -->
	<Style TargetType="{x:Type DataGridRow}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock
						Margin="2,0,0,0"
						VerticalAlignment="Center"
						Foreground="Red"
						Text="!" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border
						x:Name="DGR_Border"
						Background="{DynamicResource LightBackground}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter
								Grid.Column="1"
								ItemsPanel="{TemplateBinding ItemsPanel}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<DataGridDetailsPresenter
								Grid.Row="1"
								Grid.Column="1"
								SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
								Visibility="{TemplateBinding DetailsVisibility}" />
							<DataGridRowHeader
								Grid.RowSpan="2"
								SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
								Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
						</SelectiveScrollingGrid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<!--  Provide a different appearance for every other row.  -->
								<VisualState x:Name="Normal_AlternatingRow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LighterBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<!--
									In this example, a row in Editing or selected mode has an
									identical appearances. In other words, the states
									Normal_Selected, Unfocused_Selected, Normal_Editing,
									MouseOver_Editing, MouseOver_Unfocused_Editing,
									and Unfocused_Editing are identical.
								-->
								<VisualState x:Name="Normal_Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Unfocused_Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Normal_Editing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MouseOver_Editing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MouseOver_Unfocused_Editing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Unfocused_Editing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<!--
									In this example, the appearance of a selected row
									that has the mouse over it is the same regardless of
									whether the row is selected.  In other words, the states
									MouseOver_Editing and MouseOver_Unfocused_Editing are identical.
								-->
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MouseOver_Unfocused_Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource LightBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the resize control on the DataGridRowHeader.  -->
	<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the DataGridRowHeader.  -->
	<Style TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Grid>
						<Border
							x:Name="rowHeaderBorder"
							Width="10"
							Background="{DynamicResource LightBackground}"
							BorderBrush="{DynamicResource GreySelection}"
							BorderThickness="1">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Control
									SnapsToDevicePixels="false"
									Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
									Visibility="Hidden" />
							</StackPanel>
						</Border>

						<Thumb
							x:Name="PART_TopHeaderGripper"
							VerticalAlignment="Top"
							Style="{StaticResource RowHeaderGripperStyle}" />
						<Thumb
							x:Name="PART_BottomHeaderGripper"
							VerticalAlignment="Bottom"
							Style="{StaticResource RowHeaderGripperStyle}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the resize control on the DataGridColumnHeader.  -->
	<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the DataGridColumnHeader.  -->
	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{DynamicResource LighterBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource GreySelection}" />
		<Setter Property="Foreground" Value="{DynamicResource LightText}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Border
							x:Name="BackgroundBorder"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1,1,1,1" />
						<ContentPresenter
							Grid.Column="0"
							Margin="6,3,6,3"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Path
							x:Name="SortArrow"
							Grid.Column="1"
							Width="8"
							Height="6"
							Margin="2,0,5,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Data="M0,0 L1,0 0.5,1 z"
							Fill="{DynamicResource GreyHighlight}"
							Opacity="0.5"
							RenderTransformOrigin="0.5,0.4"
							Stretch="Fill"
							Visibility="Collapsed" />
						<Thumb
							x:Name="PART_LeftHeaderGripper"
							HorizontalAlignment="Left"
							Style="{StaticResource ColumnHeaderGripperStyle}" />
						<Thumb
							x:Name="PART_RightHeaderGripper"
							HorizontalAlignment="Right"
							Style="{StaticResource ColumnHeaderGripperStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Setter TargetName="SortArrow" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource LighterBackground}" />
							<Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource GreySelection}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Style and template for the DataGridColumnHeadersPresenter.  -->
	<Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<Grid>
						<DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
						<ItemsPresenter />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
