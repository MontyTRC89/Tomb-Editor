<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	<Style TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="{DynamicResource ToolBarTrayBackground}" />
	</Style>

	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource ToolBarToggleButtonVerticalBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToolBarToggleButtonVerticalBorder}" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						x:Name="Bd"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="0,0,3,3"
						SnapsToDevicePixels="true">
						<Canvas
							Width="7"
							Height="6"
							Margin="2,7,2,2"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							SnapsToDevicePixels="true">
							<Path Data="M 1.5 1 L 1.5 6" Stroke="{DynamicResource ToolBarDropDownBackgroundVert}" />
							<Path Data="M 0.5 0 L 0.5 5" Stroke="{DynamicResource ToolBarDropDownVert}" />
							<Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="{DynamicResource ToolBarDropDownBackgroundVert}" />
							<Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{DynamicResource ToolBarDropDownVert}" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonHover}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonHover}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource ToolBarGripper}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource ToolBarToggleButtonHorizontalBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToolBarToggleButtonHorizontalBorder}" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						x:Name="Bd"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="0,3,3,0"
						SnapsToDevicePixels="true">
						<Canvas
							Width="6"
							Height="7"
							Margin="7,2,2,2"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							SnapsToDevicePixels="true">
							<Path Data="M 1 1.5 L 6 1.5" Stroke="{DynamicResource ToolBarDropDownBackground}" />
							<Path Data="M 0 0.5 L 5 0.5" Stroke="{DynamicResource ToolBarDropDown}" />
							<Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="{DynamicResource ToolBarDropDownBackground}" />
							<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{DynamicResource ToolBarDropDown}" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonHover}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonHover}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource ToolBarGripper}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border
						Padding="{TemplateBinding Padding}"
						Background="Transparent"
						SnapsToDevicePixels="True">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush
									TileMode="Tile"
									Viewbox="0,0,4,4"
									ViewboxUnits="Absolute"
									Viewport="0,0,4,4"
									ViewportUnits="Absolute">
									<DrawingBrush.Drawing>
										<DrawingGroup>
											<GeometryDrawing Brush="{DynamicResource ToolBarGripperBackground}" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
											<GeometryDrawing Brush="{DynamicResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
										</DrawingGroup>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="0,0,11,0" />
		<Setter Property="CornerRadius" Value="3,3,3,3" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="CornerRadius" Value="0,0,0,0" />
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource Button.MouseOver.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Pressed.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Disabled.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}" />
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="{x:Static ToolBar.ButtonStyleKey}"
		BasedOn="{StaticResource {x:Type Button}}"
		TargetType="{x:Type Button}" />
	<Style
		x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
		BasedOn="{StaticResource {x:Type ToggleButton}}"
		TargetType="{x:Type ToggleButton}" />
	<Style
		x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
		BasedOn="{StaticResource {x:Type CheckBox}}"
		TargetType="{x:Type CheckBox}" />
	<Style
		x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
		BasedOn="{StaticResource {x:Type RadioButton}}"
		TargetType="{x:Type RadioButton}" />
	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="{DynamicResource ToolBarHorizontalBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToolBarHorizontalBorder}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Static}" />
		<Setter Property="Padding" Value="2,1,1,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid
						x:Name="Grid"
						Margin="{TemplateBinding Padding}"
						SnapsToDevicePixels="true">
						<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
							<ToggleButton
								x:Name="OverflowButton"
								ClickMode="Press"
								FocusVisualStyle="{x:Null}"
								IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								IsEnabled="{TemplateBinding HasOverflowItems}"
								Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
							<Popup
								x:Name="OverflowPopup"
								AllowsTransparency="true"
								Focusable="false"
								IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
								Placement="Bottom"
								PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
								StaysOpen="false">
								<aero:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border
										x:Name="ToolBarSubMenuBorder"
										Background="{DynamicResource ToolBarSubMenuBackground}"
										BorderBrush="{DynamicResource ToolBarMenuBorder}"
										BorderThickness="1"
										RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel
											x:Name="PART_ToolBarOverflowPanel"
											Margin="2"
											FocusVisualStyle="{x:Null}"
											Focusable="true"
											KeyboardNavigation.DirectionalNavigation="Cycle"
											KeyboardNavigation.TabNavigation="Cycle"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											WrapWidth="200" />
									</Border>
								</aero:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border
							x:Name="MainPanelBorder"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Style="{StaticResource ToolBarMainPanelBorderStyle}">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<Thumb
									x:Name="ToolBarThumb"
									Width="10"
									Margin="-3,-1,0,0"
									Padding="6,5,1,6"
									Style="{StaticResource ToolBarThumbStyle}" />
								<ContentPresenter
									x:Name="ToolBarHeader"
									Margin="4,0,4,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									ContentSource="Header"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToolBarPanel
									x:Name="PART_ToolBarPanel"
									Margin="0,1,2,2"
									IsItemsHost="true"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="true">
							<Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true">
							<Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
							<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
							<Setter TargetName="Shdw" Property="Color" Value="#71000000" />
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
							<Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
							<Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
							<Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
							<Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
							<Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
							<Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
							<Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
							<Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
							<Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
							<Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
							<Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
							<Setter Property="Background" Value="{DynamicResource ToolBarVerticalBackground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Disabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
