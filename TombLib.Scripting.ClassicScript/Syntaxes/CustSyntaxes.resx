<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CUST_ADD_DEATH_ANIMATION" xml:space="preserve">
    <value>[Level] Customize= CUST_ADD_DEATH_ANIMATION, {Creature slot}, {Animation number}</value>
  </data>
  <data name="CUST_AMMO" xml:space="preserve">
    <value>[Level] Customize= CUST_AMMO, {Ammo slot}, {Ammo flags (AMMO_...)}, {Damage}, {Shots in box}, {Shots with weapon}, {Extra}, {ID of TriggerGroup when hit enemy}, {Damage for explosion}, {Speed}, {Gravity}, {ID of AddEffect to ammo}, {ID of TriggerGroup at end}</value>
  </data>
  <data name="CUST_BACKGROUND" xml:space="preserve">
    <value>[Level] Customize= CUST_BACKGROUND, {Background type (BKGDT_...)}, {Flags (BKGDF_...)}, {Parameter}, {Image ID}</value>
  </data>
  <data name="CUST_BAR" xml:space="preserve">
    <value>[Level] Customize= CUST_BAR, {Bar type (BAR_...)}, {Flags (FBAR_...)}, {X origin}, {Y origin}, {X size}, {Y size}, {Color1 ID}, {Color2 ID}, {Extra}</value>
  </data>
  <data name="CUST_BIKE_VS_ENEMIES" xml:space="preserve">
    <value>[Level] Customize= CUST_BIKE_VS_ENEMIES, {Slot + (HIT_...) flags (*Array*)}</value>
  </data>
  <data name="CUST_BINOCULARS" xml:space="preserve">
    <value>[Level] Customize= CUST_BINOCULARS, {Flags (BINF_...)}, {Parameter}, {Compass image}, {Compass rect and flags}, {Sextant image}, {Sextant rect and flags}, {Lightness rect and flags}, {Zoom rect and flags}, {LightSwitch rect and flags}, {Font ID}</value>
  </data>
  <data name="CUST_CAMERA" xml:space="preserve">
    <value>[Level] Customize= CUST_CAMERA, {Flags (FCAM_...)}, {Distance from ChaseCam}, {V orient of ChaseCam}, {H orient of ChaseCam}, {Distance from CombatCam}, {V orient of CombatCam}, {Distance from LookCam}, {Height of LookCam}, {Camera speed}</value>
  </data>
  <data name="CUST_CD_SINGLE_PLAYBACK" xml:space="preserve">
    <value>[Level] Customize= CUST_CD_SINGLE_PLAYBACK, {CDMode value (CDM_...)}</value>
  </data>
  <data name="CUST_DARTS" xml:space="preserve">
    <value>[Level] Customize= CUST_DARTS, {CustDarts ID}, {Dart flags (DRT_...)}, {AddEffect ID}, {Speed}, {Emitting timer}, {Primary color RGB ID}, {Secondary color RGB ID}, {TriggerGroup ID}</value>
  </data>
  <data name="CUST_DISABLE_FORCING_ANIM_96" xml:space="preserve">
    <value>[Level] Customize= CUST_DISABLE_FORCING_ANIM_96</value>
  </data>
  <data name="CUST_DISABLE_MISSING_SOUNDS" xml:space="preserve">
    <value>; Syntax for this command was not specified by its creator</value>
  </data>
  <data name="CUST_DISABLE_PUSH_AWAY_ANIMATION" xml:space="preserve">
    <value>[Level] Customize= CUST_DISABLE_MISSING_SOUNDS</value>
  </data>
  <data name="CUST_DISABLE_SCREAMING_HEAD" xml:space="preserve">
    <value>[Level] Customize= CUST_DISABLE_SCREAMING_HEAD</value>
  </data>
  <data name="CUST_ESCAPE_FLY_CAMERA" xml:space="preserve">
    <value>[Level] Customize= CUST_ESCAPE_FLY_CAMERA, ENABLED / DISABLED, {Keyboard Scancode}</value>
  </data>
  <data name="CUST_FIX_BUGS" xml:space="preserve">
    <value>[Level] Customize= CUST_FIX_BUGS, {BugsToFix flags (BUGF_...)}</value>
  </data>
  <data name="CUST_FIX_WATER_FOG_BUG" xml:space="preserve">
    <value>[Level] Customize= CUST_FIX_WATER_FOG_BUG, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_FLARE" xml:space="preserve">
    <value>[Level] Customize= CUST_FLARE, {Flags for flare (FFL_...)}, {Life time in seconds}, {Red}, {Green}, {Blue}, {Intensity}</value>
  </data>
  <data name="CUST_FMV_CUTSCENE" xml:space="preserve">
    <value>[Level] Customize= CUST_FMV_CUTSCENE, {Flags (FMV_...)}</value>
  </data>
  <data name="CUST_HAIR_TYPE" xml:space="preserve">
    <value>[Level] Customize= CUST_HAIR_TYPE, {Hair type (HAIR_...)}</value>
  </data>
  <data name="CUST_HARPOON" xml:space="preserve">
    <value>[Level] Customize= CUST_HARPOON, {Harpoon flags (HRP_...)}, {Top border}, {Distance from cam}, {X orient}, {Y orient}, {Z orient}, {Harpoon speed}, {Harpoon gravity}</value>
  </data>
  <data name="CUST_INNER_SCREENSHOT" xml:space="preserve">
    <value>[Level] Customize= CUST_INNER_SCREENSHOT, {Quality of screenshot flags (QSF_...)}</value>
  </data>
  <data name="CUST_KEEP_DEAD_ENEMIES" xml:space="preserve">
    <value>[Level] Customize= CUST_KEEP_DEAD_ENEMIES, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_KEEP_LARA_HP" xml:space="preserve">
    <value>[Level] Customize= CUST_KEEP_LARA_HP, {Target level}</value>
  </data>
  <data name="CUST_LIGHT_OBJECT" xml:space="preserve">
    <value>[Level] Customize= CUST_LIGHT_OBJECT 34, {Light slot}, {Red}, {Green}, {Blue}, {Intensity}, {Time} ; Not sure what the author meant with that 34... Probably useless?</value>
  </data>
  <data name="CUST_LOOK_TRASPARENT" xml:space="preserve">
    <value>[Level] Customize= CUST_LOOK_TRASPARENT, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_NEW_SOUND_ENGINE" xml:space="preserve">
    <value>[Level] Customize= CUST_NEW_SOUND_ENGINE, {New sound engine flags (NSE_...)}, {Sound extension (SEXT_...)}, {Long fade-out}, {Short fade-out}</value>
  </data>
  <data name="CUST_NO_TIME_IN_SAVELIST" xml:space="preserve">
    <value>[Level] Customize= CUST_NO_TIME_IN_SAVELIST, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_PARALLEL_BARS" xml:space="preserve">
    <value>[Level] Customize= CUST_PARALLEL_BARS, {Parallel bar flags (PB_...)}, {Speed for slide}, {Max turns}</value>
  </data>
  <data name="CUST_PAUSE_FLY_CAMERA" xml:space="preserve">
    <value>[Level] Customize= CUST_PAUSE_FLY_CAMERA, ENABLED / DISABLED, {Keyboard Scancode}</value>
  </data>
  <data name="CUST_RAIN" xml:space="preserve">
    <value>[Level] Customize= CUST_RAIN, {Rain flags (FR_...)}, {Drop size}, {Sprinkler amount}, {Max rain}, {Min rain}, {Float1}, {Float4}, {Float8}, {Float16}, {Extra}</value>
  </data>
  <data name="CUST_ROLLINGBALL_PUSHING" xml:space="preserve">
    <value>[Level] Customize= CUST_ROLLINGBALL_PUSHING, {Distance}, {Push animation}, {Failed animation}, {Movement frame}, {Activation frame}, {Invulnerability frame}, {Speed}</value>
  </data>
  <data name="CUST_ROLLING_BOAT" xml:space="preserve">
    <value>[Level] Customize= CUST_ROLLING_BOAT, {Boat slot}, {Rolling boat flags (FRB_...)}, {Swinging speed}, {Pitching speed}, {Rolling SFX}</value>
  </data>
  <data name="CUST_SAVE_LOCUST" xml:space="preserve">
    <value>[Level] Customize= CUST_SAVE_LOCUST, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_SCREENSHOT_CAPTURE" xml:space="preserve">
    <value>[Level] Customize= CUST_SCREENSHOT_CAPTURE, {Duration in seconds}, {Frame gap}, {Quality of screenshot flags (QSF_...)}</value>
  </data>
  <data name="CUST_SET_CREDITS_LEVEL" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_CREDITS_LEVEL, {Final level number}</value>
  </data>
  <data name="CUST_SET_INV_ITEM" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_INV_ITEM, {Item slot}</value>
  </data>
  <data name="CUST_SET_JEEP_KEY_SLOT" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_JEEP_KEY_SLOT, {Jeep key slot}</value>
  </data>
  <data name="CUST_SET_OLD_CD_TRIGGER" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_OLD_CD_TRIGGER, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_SET_SECRET_NUMBER" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_SECRET_NUMBER, {Number of secrets}</value>
  </data>
  <data name="CUST_SET_STATIC_DAMAGE" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_STATIC_DAMAGE, {Damage}, {Poison intensity}</value>
  </data>
  <data name="CUST_SET_STILL_COLLISION" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_STILL_COLLISION, {Collision flags (COLL_...)}, {Lower height}, {Moveable (*Array*)}</value>
  </data>
  <data name="CUST_SET_TEXT_COLOR" xml:space="preserve">
    <value>[Level] Customize= CUST_SET_TEXT_COLOR, {Text type (TT_...)}, {Text color (CL_...)}</value>
  </data>
  <data name="CUST_SFX" xml:space="preserve">
    <value>[Level] Customize= CUST_SFX, {Sound type (TS_...)}, {Sound effect number}</value>
  </data>
  <data name="CUST_SHATTER_RANGE" xml:space="preserve">
    <value>[Level] Customize= CUST_SHATTER_RANGE, {First static as shatter}, {Last static as shatter}</value>
  </data>
  <data name="CUST_SHATTER_SPECIFIC" xml:space="preserve">
    <value>[Level] Customize= CUST_SHATTER_SPECIFIC, {Slot1}, {Slot2}, {Slot3}, {SlotN (*Array*)}</value>
  </data>
  <data name="CUST_SHOW_AMMO_COUNTER" xml:space="preserve">
    <value>[Level] Customize= CUST_SHOW_AMMO_COUNTER, {Color}, {Format flags (FT_...)}, {Blink time}, {Character size (SC_...)}, {Show counter flags (SHOWC_...)}</value>
  </data>
  <data name="CUST_SLOT_FLAGS" xml:space="preserve">
    <value>[Level] Customize= CUST_SLOT_FLAGS, {Slot}, {Slot flags (FFS_...)}</value>
  </data>
  <data name="CUST_SPEED_MOVING" xml:space="preserve">
    <value>[Level] Customize= CUST_SPEED_MOVING, {Speed}</value>
  </data>
  <data name="CUST_STATIC_TRANSPARENCY" xml:space="preserve">
    <value>[Level] Customize= CUST_STATIC_TRANSPARENCY, {Glass opacity}, {Ice opacity}</value>
  </data>
  <data name="CUST_TEXT_ON_FLY_SCREEN" xml:space="preserve">
    <value>[Level] Customize= CUST_TEXT_ON_FLY_SCREEN, ENABLED / DISABLED</value>
  </data>
  <data name="CUST_TITLE_FMV" xml:space="preserve">
    <value>[Level] Customize= CUST_TITLE_FMV, {FMV number}, {Test Multi-Play}</value>
  </data>
  <data name="CUST_TR5_UNDERWATER_COLLISIONS" xml:space="preserve">
    <value>[Level] Customize= CUST_TR5_UNDERWATER_COLLISIONS</value>
  </data>
  <data name="CUST_WATERFALL_SPEED" xml:space="preserve">
    <value>[Level] Customize= CUST_WATERFALL_SPEED, {Pixel scroll}</value>
  </data>
  <data name="CUST_WEAPON" xml:space="preserve">
    <value>[Level] Customize= CUST_WEAPON, {Weapon slot}, {Weapon flags (WEAP_...)}, {Shot sound}, {Recharge frame}, {Flash duration}, {Extra}, {Max distance for aiming}, {TakeWeapon frame}, {LetWeapon frame}, {Random}, {V position of weapon}, {Unknown}, {Counter frame}, {MinRange frame}, {MaxRange frame}, {X origin}, {Y origin}, {Z origin}, {Origin orient}</value>
  </data>
</root>