Syntax: PuzzleCombo= NumberOfPuzzle, NumberOfPart,NameInInventory,	TopBorder,DistanceFromCam,Orient_X, Orient_Y, Orient_Z, RotationFlag

To use in [Level] section

Set data for puzzle combo object you'll use in current level.
Note: combo is a Combined Object, it's format from two or more parts.
Before using it (putting it in hole item) the different parts will have been pasted togheter.

Arguments:

1 - Index  of Object ("1")
This number is the same of "puzzle done" object name in wad file. 
For example if current combo puzzle owns to puzzle item 4, in this field there will be the number "4"
Also for other command (pickup, key ect) values same rule, for example:
Puzzle Item 3 will have "3" in this field.
Key 5 will have "5" in this field. ect.

2 - Index of part of the object  ("1")
For example if this combo item has 3 parts, there will in script.txt three PuzzleCombo statement. 
In first PuzzleCombo the index of part will be "1", in second "2" and in third "3"

3 - Name of object  ("Sun Disk")
This name will be showed in inventory when player picked up this item
If you change the name in script.txt file you must perform the SAME change in english.txt.
About other language.txt file is not necessary have same name, but script.txt and english.txt names must have always the same names.

Following six numbers are hexadecimal values to set view of object in inventory
$0000,$0180,$0000,$0000,$0000,$0002
To explain better we'll name them:
A Number, B Number, C Number, D Number, E Number and F Number

4 - A Number ($0000)
Position (in pixel) from top border of screen. 
Remark: not always the origin of object is its top-left visible point. The origin depends by position of object in 3d structure. For this reason, it's useful sometimes to  increase or decrease this A number to have the object at same height of other inventory objects.
You can insert also negative numbers, but you must type it in hexadecimal format. For example to set -10 (10 pixels over the top border) you should  type the number $FFF6

5 - B Number ($0180)
Distance from (virtual) cam
This argument  is  useful to increase or reduce the size of object in inventory.
If you increase the distance the object will become more little
If you decrease the distance the object will become more big.
This value is in game units (1 square = 512 units)
For example if you set the value $0200 (512 in decimal) you'll have the view of object like if you watch it in game while it is at one square of distance.
If you set $0000 in this field the object will be huge because it will be in front of cam and it will cover the whole screen.
Usually you'll use value enclosed in range: $0200 - $0500

6 - C Number ("$0000")
This argument set the orientation of cam on X axis.
It's complicated to explain but if you try to change this value you'll understand what I mean.
The values for this argument could be go from $0000 to $FFFF but usually will be used only four values:

$0000 = North (top view)
$4000 = East (right view)
$8000 = South (bottom view)
$C000 = West (left view)

7 - D Number ("$0000")
Same meaning of C Number but it regards the Y axis.

8 - E Number ("$0000")
Same meaning  of C and D numbers but this regards Z Axis.

9 - F Number ("$0002")
Bit mask to enabled/disable special functions.

$0002 = Enable the rotation of object
$0008 = I'm not sure, pherpas it forces rotation center of object at center of its bounding box.






