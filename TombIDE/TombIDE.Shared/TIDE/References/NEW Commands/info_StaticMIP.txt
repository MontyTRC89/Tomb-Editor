Syntax: StaticMIP= MainStaticSlot, BStaticLimit, BStaticSlot, CStaticLimit, CStaticSlot
Scope: to use in [Level] or [Title] section

The target of this command is to get a faster view and better fps (frame per second) in game, when there are wide scenes with many static items.
Using StaticMip command and creating reduced low quality of your most used static items, to draw when they are very far from source view, you'll get huge improvement in speed.

With this command you can require to trng engine, to show statics with different quality respect the given Main Static, in according with current distance between the static and current source cam (usually in Lara's position).
This skill is very alike than AnimatingMIP command, of course, anyway in this case you can set two different limits for a total of three different static kinds to draw in game.

MainStaticSlot field
---------------------
In this field you type the slot number of main static.
You find the static slots in "STATIC indices list" of NG_Center's reference panel.
The main static is the static object you placed in the level map and it should be that with highest quality, of course.

BStaticLimit field
------------------
In this field you type the min distance, in sectors (1024 game units), between source view and the static, to draw the BStaticSlot replacing the MainStaticSlot.
Pratically, when the distance will be even or greater than BStaticLimit (but less than CStaticLimit), it will be drawn the static with BStaticSlot instead of that of MainStaticSlot
You should create in BStaticSlot and raw copy of MainStaticSlot, with same size and (about) look but using less meshes and less (or no) transparent textures.
Rememember that the transparent textures create a big usage of cpu (or GPU) time.

BStaticSlot field
-----------------
This is the static slot to draw when the distance, between source view and the static item, is greater than BStaticLimit and less than CStaticLimit.
Please, try to understand than, this change of static to draw, doesn't affect the slot item set in the level or the static OCB or its light. Only the mesh of BStaticSlot it will be used but all other features it will by yet that MainStaticSlot.
If you type IGNORE in this field, it means that you wish the drawing of MainStaticSlot was skipped when the distance is greater than BStaticLimit

CStaticLimit field
------------------
This field work alike the BStaticLimit but in this case it will affect the drawing of following CStaticSlot.
The CStaticLimit should be always greater than BStaticLimit, of course.
If you type IGNORE in this field, this means that you don't want supply another raw copy of MainStaticSlot.
When you type 	IGNORE as CStaticLimit the next CStaticSlot will be ignored.

CStaticSlot field
------------------
The slot of static you type in this field it will be drawn only when the distance is bigger or even than CStaticLimit distance.
The copy of MainStaticSlot you set in CStaticSlot, should be very very poor, like a simple shadow, and you should a very far distance in CStaticLimit field.
If you type IGNORE in this field this means you wish skipping the drawing of MainStaticSlot when the distance is bigger or even than CStaticLimit field.


