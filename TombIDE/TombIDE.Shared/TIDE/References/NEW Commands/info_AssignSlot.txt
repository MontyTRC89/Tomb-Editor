Syntax: AssignSlot=MyUsedSlot , OBJ_Type

Scope: To use in [Level] section
Number of instances for level section: 100

Remark: from 1.2.2.2 version the AssignSlot has new features, read carefully the following updated description.

MyUsedSlot field
----------------
Number or constant name to identifiy a slot position of standard tomb4 wads (example: "ENEMY_JEEP" or 34)
This slot identify where you placed your object 
in slot list.



OBJ_Type field
--------------
In this field you type:

- An OBJ_ constant, to describe the type of new object you mean store in previous MyUsedSlot field
- Another existing slot from where getting the features to assing to your object.

With plugins, all new objects will require an AssignSlot and right OBJ_ constant.

While usign AssignSlot to reassing feature of some object to another you can type as SlotType any slot and all features of this slot will be forced to object you placed in MyUsedSlot slot.

For example if you place a restyled crocodile in Animating1 slot and you wish give to him the features of a real crocodile just you type in [Level] section the row:

AssignSlot= ANIMATING1, CROCODILE

You can use AssignSlot to have different enemies with same features but different looks, like two or more type of crocodile, or different baddy1 enemies but with different layouts, ect.

Remarks: 

* It's probably that not all slots will accept a reassignment. The doors, waterfalls, switches and something-emitters probably will have troubles in a reassigned slot. You should use this command only to work with enemies.

* When you reassign a slot it's necessary that the both slots were really present in the wad.
For example in the command:

AssignSlot=	ANIMATING1, CROCODILE

It's necessary you have at least one real crocodile in the CROCODILE slot.

* Some enemies like Baddy1, Baddy2, Von Croy and the Guide require an alternate skin slot.
By default the alternate skin are present in following slots:

Alternate skin of Baddy1 in MESHSWAP3 
Alternate skin of Baddy2 in MESHSWAP2

Alternate skin of Von Croy in MESHSWAP1
Alternate skin of the Guide in MESHSWAP2

When you reassign some of above enemies you have to supply also a new alternate skin but you cann't place it in meshswap slots, of course.

For this reason, you have to place its alternate skin in the slot immediatly following that you used.

For example if you use this script command:

AssignSlot= ANIMATING4, BADDY_1

The engine looks for the alternate skin for baddy 1 in the ANIMATING4_MIP slot, since this is the slot that follows the ANIMATING4 slot with the main object (reassigned) baddy 1.

* You can assing to a new reassigned enemies a new HP (vitality) different than other HP of the original object.

For example in above example:

AssignSlot= ANIMATING4, BADDY_1

You can force for the baddy_1 in animating4 slot a new HP different than other BADDY_1 slots, using the ENEMY= command:

Enemy= ANIMATING4, 1400, IGNORE, IGNORE, IGNORE, IGNORE, IGNORE

But you cann't set a different damage to Lara for animating4, in fact, if you type a value in an emeny command for damage it will be ignored.
The damage of reassigned enemy it will be the same of source assigned slot, in above example it will be the same damage for all others BADDY_1 objects.
For above reason, if you wish change the damage affected by a reassigned enemy you'll have to use the Enemy script command to modify the damage of original object from where you got the reassigment.

* The reassigned enemies doesn't support a MIP version

* The reassigned enemies cann't have animations different than those of original enemy. In the reality the animations of reassigned slot will be neither used in any way.

Trick: the only way to pass over above limitation is to insert in some animation of original enemy an exported flipeffect used to call a TriggerGroup in script.dat
If you type in this triggergroup also a starting condition about the slot ID of current item (see TRNG Variables demo) you could perform some animcommand only when that animation will be performed by reassigned enemy and in this animcommand you could place also the performing of another different animation. Anyway this new animation should be added always to original enemy and never to the reassigned enemy slot.

