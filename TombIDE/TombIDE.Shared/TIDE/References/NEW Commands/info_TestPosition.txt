Syntax: TestPosition= IdTestPosition, Flags (TPOS_...), Slot Moveable, XDistanceMin, XDistanceMax, YDistanceMin, YDistanceMax, ZDistanceMin, ZDistanceMax,  HOrientDiffMin, HOrientDiffMax, VOrientDiffMin, VOrientDiffMax, ROrientDiffMin, ROrientDiffMax

Scope: To use in [Level] section
Max number of instances for level section: 99

With TestPosition you can set all data necessary to verify if lara has a correct position with respect to other item (all moveables with the given Slot)
Then you'll have to type the IdTestPosition also in Extra field of Animation= or MultEnvConditon= script commands to transform it in an effective condition.

The TestPosition= is a bit complicated command, for this reason I create a zip file containing some stuff to understand better how to use TestPosition.
The zip file is "AnimationTestPosition.zip" and it contains some images necessary to understand following explanations.
Remark: in above zip file there is also a project + script to test the env codition with TestPosition command.

Descriptions of TestPosition fields:

IdTestPosition field
--------------------
In this field you type a Identificative number to call this TestPosition command from other commands like Animation= or MultEnvConditions= (typing this id in Extra field)

If you type many TestPosition commands in same [Level] section, each of them should have a different (progressive) Id number.
Valid range for IDs: 1 / 999

Flags (TPOS_...) field
----------------------
You can type one or more TPOS_ constant values in this field to set some special features.
If you don't wish use any TPOS_ flag type IGNORE in this field.

See descriptions of TPOS_ values in Reference panel of NG_Center in MNEMONIC CONSTANTS list.

Slot Moveable field
-------------------
In this field you type the slot (the number or the name) of items you mean check.
Remark: if you add in Flags field the value TPOS_TEST_ITEM_INDEX, in the "Slot Moveable" field  you have to type directly the index of item to check. 
See descrition of TPOS_TEST_ITEM_INDEX flag for more infos.

XDistanceMin and XDistanceMax
 fields
------------------------------------
In these two field you have to type the min and max valid distance from X origin of lara and X origin of item to test.
To understand what is the X axis watch the image "ExTestPosition_Axis.jpg" you find in 
"AnimationTestPosition.zip" zip file.
In light blue color you see the X axis and its orientation.
The effective difference you compare with these two field is given by X_Lara_origin - X_Item_Origin.
For this reason, normally, the range you type are always a negative value for XDistanceMin and a positive value for XDistanceMax

For exaple if you choose:
XDistanceMin = -256
XDistanceMax = +256

this means you accept a tollerance of one click (a sector is 1024 units, so a click is 256 units) of difference between lara and item on X axis.
Other example, if you set 0 for min and max X distance this means you require that lara is nose vs nose with other item (for example a ninja) and neither a pixel of difference should exist.
Anyway, choosing  0 and 0 should be very stupid, of course, because you'll have always need of some tollerance.
Last example for X difference range:
If the item to test is a coffe cup, and the cup in game give a difference on X axis of +100 , this means that the cup should be about closed to left hand of lara. While if the difference was -100 the cup should be near to right hand of Lara.

When you compute the valid range for X axis (or others) you should keep in mind the concept of "Relative axis" (see next paragraph) used in TestPosition comparation.

RELATIVE AXIS description

A complication, to understand the comparations of testpostion, is that the axis are relative to current orientation of lara, while usually, in 3d world we think to have fixed x,y,z coordinates.
When you compute the difference for x relative axis for example the engine fixes the origin of 3d world to origin of lara, and it will (ideally) rotate the 3d world to have facing of lara (where she is looking) in same direction of wished axis

For above reason, if you set as Z difference (Z axis, see the ExTestPosition_Axis.jpg picture) as 256 units and the condition is true, this means that, in front of lara, the other item will be to 1 click of distance in front, indifferently if in 3d world lara is at the left or the right (watching the game screen) of other item, because the position will be changed before performing the comparation to have lara at 0,0,0 and looking in exact axis direction, i.e. whre lara is looing it will become the new Z axis direction.
The speech is complicated but using the examples of AnimationTestPosition.zip file you can understand it, and you'll discover that it works very fine.
Note: this method has been created by Eidos programmers and not by me. I'm using the specific procedure used by default tomb to test the position of items with them lara should interact.

YDistanceMin and YDistanceMax fields
-------------------------------------
This couple of values set the range for distance on Y axis.
See the image "ExTestPosition_Axis.jpg", the y axis has white color.

Many description I given to explain the X difference range are good also for Y range, anyway in this case there is further complication because while the X and Z origin of lara is always the same, at half of her body, the Y origin of lara changes in according with current animation.
I suggest to use the diagnostic to understand what is the Y origin of lara in animation from what you mean start to launch your custom animation.
Pratically you should type in [Options] section of script.txt the command:

Diagnostic= ENABLED

So in game you'll see many value about lara.
Look the "Cy=..." value.
To understand better what it means, you should build a sample project where the floor is to 0 clicks, then you should extrude some sector to have 4 clicks of height, and also some hole in the floor of 4 clicks.
The targert of these test will be to see what is the Cy of lara when she is on floor. The cy should be "0" if also the floor of room is 0 click.
When lara move up a sector hight 4 click the Cy should be Cy = -1024 because upward the y axis in negative.
Differently, if lara go down in the hole deep 4 click the Cy should become +1024 because there are 4 clicks of difference than flat floor.
These experiment are enough stupid because we already know the results, anyway I made this example to explain how discover the reference of Y origin of lara for all animations.
For example if lara hangs to edge of elevated 4 click block, we have another animation (that of hanging) and we could discover that in this animation the Y origin is no more to lara's feet but now is where lara has her knees(!)
Creating a sample project (always with floor to 0 clicks) and creating also a pool room (a room with water), we could discover other Y origins for particular standard animations for example when lara is floating on water surface the Y origin of lara is the same of Y coordinate of water surface. Also while lara is floating up and down for the waves the Cy value reamins the same. So in this case the Y origin is about on the neck of lara.

So, when you create your TestPosition command you should verify as first thing what is the point of lara where there is the Y origin in animation from what you mean launch your custom animation, and build your Y range on this reference.



Now we could perform some examples using stand-up position of lara, when the Y origin is on her feet.

If the item is a little ball, and it is in front of lara, when the ball will be heigh like the head of lara, the difference will (about) + 600 while if the difference is negative, for example - 1024 this means the ball is an hole below lara than one sector.

Differently than example for X Range, when we set a range for Y distance, it's not sure we'll use same value with - and + signs, bacause when the Y pivot (origin of lara on Y axis) is in her feet, we could require different abs values for min and max.

For example, if we want that above little ball (big like head of lara and with its Y origin in the center of sphere) was (about) in front of lara's head, we should set as Y ranges somewhat like:



YDistanceMin = 550
YDistanceMax = 650

As you see, there is no negative value in above values.
This happen because lara is height about 3 clicks, so 256*3 = 768 units (exactly 800 units).
We wish that the ball was in front of head of lara, so the ball cann't be lower than neck of lara, and the neck is about to 512 units from feet (y origin) for this reason we set as min Y distance 550, because if it was less of 550 it means the ball is very closed to feet of lara. 
By other hand, we neither wish to have the ball so much over the head of lara, and since the top of lara's head is 768 the max distance should less than 768 (we used 650)

Remember that we work on relative axis (see above paragrah) so it's no important if Y origin of lara or item are positive or negative, the difference will work always in correct way.
When the Y difference (in example of the ball) is 0 this means the ball is in front of feet of lara, and hence in wrong position.

SIZE OF LARA

To understand better the size and mesh position of Lara in stand up position see the "ExTestPosition_LaraMesh.jpg" image.

In spite of some distortion 
for perspective view, we could suppose following sizes for lara:

Height in stand-up position (picture A or C) = 800

Width stand-up, from hand to hand  (picture A) = 320

Depth of lara by profile (picture C) = 130

Height in all fours position (picture D) = 320

Height in climb position (picture B) = 600

ZDistanceMin and ZDistanceMax fields
-------------------------------------
With these two fields you set the distance range on Z axis.
The z axis is always the direction where lara is looking.
When the Z difference (Lara.Z - Item.Z) is negative this means that item is in front of lara, while if difference is positive lara has passed over the item and now it is at her back.

HOrientDiffMin and HOrientDiffMax fields
----------------------------------------
These two fields set the acceptable range for the relation (difference) between horizontal orientation (facing) of Lara and Item.
The horizontal orientation is given by Lara.HorizonalOrient - Item.HorizontalOrient.
To understand what I mean for "Horizontal" facing you could look the picture "ExTestPosition_H_Orienting.jpg" that you find in usual test position sample.
The default H facing of items (lara or others) is 0 and this is the position you see in NGLE when you have just placed an item in the level map.
To understand how the difference between H orientation changes you should see the project in AnimationTestPosition
.zip file.

If you set correct distance ranges (see previous fields) but you wrong the horizontal orientation difference you can get to have lara closed to item (correctly) but the item is not showing the correct side to lara.
For example if you create an object like a cabinet, and you wish create an animation where lara forces the lock to open it, it's necessary that, not only lara is closed to cabinet object, but also that lara has in front of her the lock, because if lara has in front the back of cabinet or some side, the distance could be correct but the animation should have no sense.

You should as first step find the ideal difference between H orientation and then create a range where there is at least a little tollerance.
For example with the cabinet the diffrence could be $8000 (
32768) (face to face) and the range should have a Min a few less for example $7f00  while the max bigger than same tollerance ( +/- $100 ) i.e. $8100.

VOrientDiffMin and VOrientDiffMax
 fields
----------------------------------------
These two values set the range for difference of Vertical orientation.
See the image "ExTestPosition_vOrienting.jpg" to understand how V orientation works.

This range is not very important because 99 times on 100 both items (lara and other item) will have VOrientation = 0

You could set a range as  Min= -
200 and Max = +200
The very seldom case where lara has a different VOrient is the run with rash, when she swimm underwater or she is diving.
Anyway you can use the sample project in AnimationTestPosition
.zip file to verify this situation.

ROrientDiffMin and ROrientDiffMax fields
-----------------------------------------
These two fields set the valid range for difference of Rotating Orientation between Lara and item.
Pheraps "Rotating" is not the correct term to describe this kind of facing anyway you can see how it works watching the image: "ExTestPosition_RotOrient.jpg"

It's very seldom the value changes, it should be always 0, so also the difference between lara and item should be zero.
Anyway, this value changes a bit when lara is running with rush and she is turning at left or right.
You can type as range -200  +200 but probably you can also type 0 and 0 in most situations.


