Syntax: SavegamePanel=SavegamePanelFlags (SPF_...), BackGroundImageId, NumberOfSave, NumberOfVisibleSave, SavegamePanelLayout (SPL_...), InfoFormatString, IdListWindowsFont, IdInfoWindowsFont, InTitleWindowsFont
Scope: To use in [Level] section

SavegamePanel command allows to customize a new savegame panel to load or save the game.
If you type this command in a [Level] section the old load/save screen will be replaced by this new savegame panel.
The most advantage to use this new savegame panel is to be able to view the inner image of each savegame to get more easy to player the choice of the correct savegame to load (or to avoid to overwrite some important savegame in saving operation).

For above reason it's strongly suggested to use this new savegame panel togheter with the customize to enable the saving of image inside of screenshot. You can realize this target adding following row:

Customize=CUST_INNER_SCREENSHOT, 
QSF_SIZE_320x240+QSF_TRUE_COLOR

Remark: the QSF_ flags could be also different, of course, the only important fact is to add a Customize=CUST_INNER_SCREENSHOT command in your level section to enable the creation of screenshot image in each savegame of your adventure.

Another news in savegame panel is to be able to customize the number of savegames to handle (in old tomb this number was 15 savegames) and to choose the infos to show when a savegame has been selected.

I suggest to test and study the Savegame_panel.zip demo to understand the correct usage of this new trng feature. You can find the demo sample on http://www.trlevelmanager.eu/ng.htm or on skribblerz website.

SavegamePanelFlags (SPF_...) field
----------------------------------
In this field you can add two or more SPF_ flags to customize some feature of SavegamePanel.
If you don't wish any flags you can type IGNORE in this field.

See the Reference Panel of NG_Center to have more infos about description of SPF_ flags.

BackGroundImageId field
------------------------
It's necessary supply always a background image for savegame panel.
In this field you type the number of image that will be present in PIX subfolder.
For example if you want use as background image the file "Image8.bmp" you'll have to type in this field the value 8.


NumberOfSave field
------------------
In this field you type the number of savegames that savegame panel will be able to handle.
For example in old tomb4 this number was 15 (from savegame.0 to savegame.14).
The max number you can set is 100 and in this case in trle folder could there be upto 100 savegames from savegame.0 to savegame.99
Truly I suggest to don't select a too big number of savegames because the search for players could become difficultous with so much savegames.
Other above reason, you could create troubles to users of old level manager (but trlm2009 should be able to manage any number of savegames)
A reasonable value could be 30 but you can also let the standard number of savegames, in this case just you type IGNORE in this field.

NumberOfVisibleSave field
-------------------------
This field could seem difficultous to understand.
The number of visible savegames is different than the previous field "NumberOfSave". 
When you set a big number of savegames in "NumberOfSave" field, it's possible (very probable) that it was not possible show in same moment all this long list of savegame on screen. To solve this problem trng is able to show only a short number of savegame on screen and then, to allow the scrolling of the list, to show another "page" of savegames.

The NumberOfVisibleSave field is pratically the number os savegames showed for each visible page on screen.

For example we know that in old savegame panel was showed only 15 savegames. Now if we want handle (for example) 50 savegame is obviuos that is not possible store all these 50 savegame rows in same screen, so you have to select a number of visible savegames, for example 15, and then trng will show at start first 15 savegames, then, when player hit DOWN key, trng will show next group of 15 savegame (from savegame.15 to savegame.29) and go on.

Remark: in the reality trng will scroll in this way only if you set a specific SPF_ flag, otherwise it will scroll slowly the list a row at once.

Note: If you type IGNORE in this field trng will consider that all "NumberOfSave" will be showed on screen in same moment, i.e. the "NumberOfVisibleSave" and "NumberOfSave" fields will have same value.

The general rule to follow is this: first you set fonts, image, and layout for SavegamePanel and try in game the result to see how much savegame could be showed on screen in same time, then you set this number in "NumberOfVisibleSave" field.

WARNING: If you don't set a correct number in NumberOfVisibleSave field you get only a big mess, because trng will not verify if really all required savegames will be fit on screen.

SavegamePanelLayout (SPL_...) field
-----------------------------------
You can type a single SPL_ value to set the position of different frame on the screen.
You should read the description of single SPL_ flags you find in Reference panel of NG_Center.

Pratically you have to choose where place the image of screenshot (left , right or at center) and the list of savegames.
There is also another (optional) frame: the info frame.
In info frame will be showed more infos about currently selected savegames.
For example you can wish to show the number of secrets, or the weapons availables in that selected savegame.
Seen description of next field about this chance.

InfoFormatString field
----------------------
If you use a SavegamePanelLayout with Info frame, you have to type in InfoFormatString field the string used to format the information to show for the selected savegame.
The info frame is a zone of screen where it will be showed some informations about the savegame currently selected.

I suggest to use the trick of external ng strings to store the format text, i.e. you type the text in a text file, save it in SCRIPT folder, and then link this text in extra ng strings using "@" + "name.txt".
For example if you type the format text in a file named "Info_savegames.txt" you'll add a new Extra NG strings and type in it the text "@Info_savegames.txt"

About what type in this format text you can type exactly what you want see on screen, but remembering to use special place-folder to signal a specific value in savegame.
All placefolders are enclosed in round parentheis "()" and have fixed names that trng will be able to recognize and replace with real values read from savegame.
For example if you type in info format text the following rows:

Found Secrets        (SECRETS)
Large Medipacks      (L-PACKS)
Small Medipacks      (S-PACKS)

then in game, when player will select a savegame from list, on the screen will be showed the effective values in that savegame, so, for example, we could read:

Found Secrets        5
Large Medipacks      3
Small Medipacks      12

Remark: if you want have a good alignment it's advisable select for info text a windows font with fixed width, like "courier" or "new courier" because otherwise with proportional fonts (like "Arial") you could see a bad alignment:

Found Secrets     5
Large Medipacks      3
Small Medipacks    12

The full list of place-folders is the following:

(LEVEL-NAME) The name of the level in the savegame
(SAVE-NUMBER) The progressive inner number of savegame
(SECRETS)  The found secrets
(L-PACKS)  The number of Large Medipacks
(S-PACKS)  The number of Small Medipacks
(FLARES)   The number of flares
(WEAPONS)  Show a list of the weapons present in this savegame. See (1) note in following remark section.
(GAME-TIME) The game time. See (2) note in following remark section
(DATE-TIME) The date about when current savegame has been created or last time it has been changed. The format is DD/MM/YYYY (HH:MM:SS)
(KM-DISTANCE) Number of Km of distance
(METERS-DISTANCE) Number of remaing meters of distance (See (3) 
note)


Remarks:
(1) Since the weapon list could be long, it's better let a whole row to host this value using a format text like this:
----- Example of info format text ----
Available Weapons:
(WEAPONS)
---- end info format text sample -----
In this way the list will have all row of info frame to be hosted

(2) About game-time, usually this value will be showed in savegame list, as in default savegame panel, anyway if you wish you can remove the game time from savegame list with the SPF_NO_TIME_IN_LIST flag, and then add this value in specific description of selected savegame with place folder (GAME-TIME). The advantage of this method is to be able to host the savegame list in a short frame about the width.

(3) The reason to have two different values for KM and meters is to allow you to type the words "km" and "meters" in your language, or in different language one for each language file.
For example you can type in info format text:

Distanza: (KM-DISTANCE) chilometri e (METERS-DISTANCE) metri.

Above example show the description of distance in italian,  using the words "chilometri" and "metri" instead of "kilometres" and "meters".
Then in game we could read:

Distanza: 2 chilometri e 43 metri

IdListWindowsFont field
------------------------
Type the id of WindowsFont=IdNumber command where you set the style of text used for the savegame list

Remark: it's important you place the WindowsFont command first of SavegamePanel command that use it.

IdInfoWindowsFont field
------------------------
Type the id of WindowsFont=IdNumber command where you set the style of text used for the infos showed for selected savegame
Since the infos could be very much you should use a little font to be sure to host all further info texts.

Remark: it's important you place the WindowsFont command first of SavegamePanel command that use it.

InTitleWindowsFont field
------------------------
Type the id of WindowsFont=IdNumber command where you set the style of text used to show the title of panel, i.e. the text "Save Game" or "Load Game" in according with current language.

Remark: it's important you place the WindowsFont command first of SavegamePanel command that use it.

