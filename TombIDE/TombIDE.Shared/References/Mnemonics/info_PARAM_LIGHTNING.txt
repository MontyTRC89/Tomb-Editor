Used to store data to shot a lightning

Syntax: Parameters=PARAM_LIGHTNING, IdParamList, Lightning flags (LGTN_...), SourcePosItem, TargetPosItem, IdColorRGB, Intensity, SoundEffect, Size, ParticleDurate, IntervalTime, Alfa, Beta

IdParamList field
-----------------
You define an univocal id number, different than others Parameters=PARAM_LIGHTNING in same [Level] section.
Then you'll use this id to pass to the trigger to set current parameters.

Lightning flags (LGTN_...) field
---------------------------------
You can type one or more LGTN_ flags to customize the lightning effect.
If you wish you can type IGNORE in this field to se no flag.
See the meaning of LGTN_ flags in the Reference panel of NG_Center program, in the MNEMONIC CONSTANTS section.

SourcePosItem field
-------------------
To set a position you have to supply an item and trng will use the position of that item for the source position.
In this field you can also type IGNORE and in this case trng will use a random position in the sky (above the target position) as source position.

If you wish set a precise source position, you can type in this field:

A moveable index  + the OTYPE_MOVEABLE flag (note: in the reality you can omit it, because missing other OTYPE_ flags, the moveable type will be used)

A null mesh item OCB value (the null mesh items are like the AI_ objects or the LARA_START_POS item) + the OTYPE_AI_DATA flag
REMARK: Read carefully above row: if you wish use a LARA_START_POS, you have to type its OCB value and NOT the index.
This means you should set in that null mesh object an OCB value different than any other in your level.

A static object index + the OTYPE_STATIC flag

TargetPosItem field
-------------------
To set a position you have to supply an item and trng will use that position of that item as the target position.

You can type in this field:

A moveable index  + the OTYPE_MOVEABLE flag (note: in the reality you can omit the flag, because missing other OTYPE_ flags, the moveable type will be used as default)

A null mesh item OCB value (the null mesh items are like the AI_ objects or the LARA_START_POS item) + the OTYPE_AI_DATA flag

REMARK: Read carefully above row: if you wish use a LARA_START_POS, you have to type its OCB value and NOT the index.
This means you should set in that null mesh object an OCB value different than any other in your level.
A trick, to keep different ocb values for whole level, is to compute the ocb value, multiplying the room nummber by 10 and then use this as first ocb value for items in that room.

A static object index + the OTYPE_STATIC flag

You can type also IGNORE in this field and in this case you'll have a random (far) lightning.
You should use IGNORE in TargetPosItem field, when lara is in a wide outside landscape.
With IGNORE as target, in fact, the trng engine will choose a random target placed very far from Lara from 8 to 20 sectors, choosing the side where lara is able to see it.

IdColorRGB field
----------------
You type here the ID of an (previously typed) ColorRBG= command where you stored the color you wish use for the lightning.
If you type IGNORE in this field it will be used the white color.

Intensity field
---------------
You can type values that werea (about) in the range from 30 to 100
The intensity increase the light of the lightning and its durate.
You can type IGNORE in this field and trng will use the most common value for this setting

SoundEffect field
-----------------
Here you type the number of sound effect you wish was played when the lightning it will be performed.
Note: if you wish supply a sound effect you have to add to the Lightning field the LGTN_PLAY_SOUND flag.

Size field
----------
This should be the diameter size of the lightning but it has not a precise reference to the effective size.
I presume it was a magnifying factor about the "lighting" sprite used to create this effect.
Reasonable values for this field will be in the range from 20 to 40
If you type IGNORE in this field, trng will use the most common value for this setting

ParticleDurate field
--------------------
This value is the persistence of particles used to create the lightning.
Reasonable values are in the range from 20 to 40
If you type IGNORE in this field,  trng will use the most common value for this setting

IntervalTime field
------------------
This field is a bit complicated to explain but it's very important when you wish simulate the lightning conductor.
Differently, you should type 0 (or IGNORE) in this field when you wish simulate the sky lightning.
The value in this field will be used to compute a pause between a shooting of a lightning and the next, when you set (in the trigger) a long time.
For long time I mean also only 30 tick frames (one second) or more.
The problem is that a lightning uses a lot of particles and when you set to show a lightning for some time, in the reality it will be shout a big number of lightnings, one for each frame.
If we don't set a pause between a lightning and following, it happens something that I'm not able to describe, but it's something of evil, that you don't want see in your level.
To avoid this collapse of the particle system and lightning skill, it's necessary set a pause that it should be about the time used from the particles used for the previous lightning to let them to vanish in normal way.
The value you type in this field will work in inverse mode with the ParticleDurate field.
In this field you have to type the denominator of a fration where we have "1" as numerator.
This will be the times that the lightning will be shot, while the other times there will be a pause.
For example  1/4  means, it will be shot once every four times.
As further complication you can choose for this field only powers by 2, like 2,4 ,8, 16, 32 ect.

A reasonable value for this field is 4 or 8, but it depends by the value you typed in Intensity field and in ParticleDurate field.
Bigger values you chose for those fields and bigger should be IntervalTime, too.

Note: if you type huge value (anyway the max value is 128), you solve the collapsing problem and you get a long pause between a lightning and the next.
To compute the pause time you can perform the computation: IntervalTime / 30, to get the seconds of pause between a shot and another.
For example typing 32, you get about a lightning every second, in spite that a lightning goes on for about half second so the time with no lightning effect on the screen will be shorter

Alfa field
----------
The generic name "alfa" is because I've not yet discovered the menaning of this argument.
It has always very low values (0,1,3 are the most used). Pheraps they are flags rather than a quantity.
You can do experiments to discover what changes, modifying this argument, or you can type IGNORE in this field and it will be used the most common value

Beta field
----------
Same speech as for the above Alfa field.
Anyway in this case it appears like it was the intensity of some sharping, blurrying effect of the lightning.
Increasing this value, it becomes like smoke, and increasing more it becomes transparent until to disappear by all.
This argument has usually 3 or 5 like values.

You can type IGNORE in this field and it will be used the most common value
