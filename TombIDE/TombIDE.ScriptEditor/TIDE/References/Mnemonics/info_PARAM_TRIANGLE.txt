Used to store the three vertices to define a triangle to use as fragmented trigger.

Syntax: Parameters=PARAM_TRIANGLE, IdParamList, Xa, Ya, Xb, Yb, Xc, Yc

You define a triangle with three 2D vertices.
Each vertex is a point of a game square of 1024x1024 units.
The origin is the top-left corner (north-west corner in planar view in NGLE program)
The X axis moves from 0 (West side of the square) to 1023 (East side of the square)
The Y axis moves from 0 (North side of the square) to 1023 (South side of the square)

IdParamList field
-----------------
You define an univocal id number, different than others Parameters=PARAM_TRIANGLE in same [Level] section.
You'll use this number to use these data with the fragmented trigger for custom triangles

Xa, Ya fields
-------------
Define the A(x,y) vertex

Xb, Yb fields
-------------
Define the B(x,y) vertex

Xc, Yc fields
-------------
Define the C(x,y) vertex

Example:
to define a triangle corresponding to a north-east corner triangle with 512 of size, you should use following command

Parameters=PARAM_TRIANGLE, IdParamList, 512, 0, 1023, 0, 1023, 512

Remarks:
Using the custom triangles, and exporting the condition triggers that use them, in a conditional trigger group, you can cover pratically any shape for your trigger.
If you wish create a detailed shape, you can add different triangles, just you use the TGROUP_OR flag in the TriggerGroup command, to link the different triangle triggers.
If you wish you can mix triangles with other shapes, like circle or grid triggers, linked with the (default) TGROUP_AND, to have like triggerable zone only those points where all fragmented triggers are true in same moment.
