<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:DarkUI.WPF">

	<BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

	<Style TargetType="{x:Type GroupBox}">
		<!--  Layout  -->
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Brush_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="{x:Static local:Defaults.BorderThickness}" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.SmallThickness}" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{x:Static local:Defaults.GroupBox_BorderSpacing}" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition Width="{x:Static local:Defaults.GroupBox_BorderSpacing}" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition />
							<RowDefinition Height="{x:Static local:Defaults.GroupBox_BorderSpacing}" />
						</Grid.RowDefinitions>

						<Border
							Grid.Row="1"
							Grid.RowSpan="3"
							Grid.ColumnSpan="4">
							<Border.OpacityMask>
								<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="{x:Static local:Defaults.GroupBox_BorderSpacingWidth}">
									<Binding ElementName="headerBorder" Path="ActualWidth" />
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
								</MultiBinding>
							</Border.OpacityMask>

							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
						</Border>
						<Border
							x:Name="headerBorder"
							Grid.RowSpan="2"
							Grid.Column="1">
							<Border.Padding>
								<Thickness Left="{x:Static local:Defaults.SmallThicknessWidth}" Right="{x:Static local:Defaults.SmallThicknessWidth}" />
							</Border.Padding>

							<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
						</Border>
						<ContentPresenter
							Grid.Row="2"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SectionGroupBox" TargetType="{x:Type GroupBox}">
		<!--  Layout  -->
		<Setter Property="SnapsToDevicePixels" Value="{x:Static local:Defaults.SnapsToDevicePixels}" />
		<Setter Property="UseLayoutRounding" Value="{x:Static local:Defaults.UseLayoutRounding}" />

		<!--  Brushes  -->
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush_Border}" />
		<Setter Property="Foreground" Value="{DynamicResource Brush_Text}" />

		<!--  Thicknesses  -->
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="{x:Static local:Defaults.SmallThickness}" />

		<!--  Template  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<!--  Outer light border  -->
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<!--  Inner dark border  -->
						<Border BorderBrush="{DynamicResource Brush_Background_Low}" BorderThickness="{x:Static local:Defaults.BorderThickness}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>

								<Grid>
									<!--  Background container with bottom border  -->
									<Border
										x:Name="headerBorder"
										Background="{DynamicResource Brush_Background_Alternative}"
										BorderBrush="{DynamicResource Brush_Border_Low}">
										<Border.BorderThickness>
											<Thickness Bottom="{x:Static local:Defaults.BorderThicknessWidth}" />
										</Border.BorderThickness>
									</Border>

									<!--  Brighter top border  -->
									<Border BorderBrush="{DynamicResource Brush_Background_Disabled}">
										<Border.BorderThickness>
											<Thickness Top="{x:Static local:Defaults.BorderThicknessWidth}" />
										</Border.BorderThickness>
									</Border>

									<!--  Focused highlight  -->
									<Rectangle
										x:Name="checkedRect"
										Fill="{DynamicResource Brush_CheckedHighlight}"
										Opacity="{DynamicResource Opacity_CheckedHighlight}"
										Visibility="Hidden" />

									<!--  Actual content container  -->
									<Border Padding="{x:Static local:Defaults.SmallThickness}">
										<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
									</Border>
								</Grid>

								<ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" />
							</Grid>
						</Border>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter TargetName="checkedRect" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
