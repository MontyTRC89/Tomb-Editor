<?xml version="1.0" encoding="utf-8"?>
<api>
	<functions>
		<function>
			<module>Effects</module>
			<name>EmitLightningArc</name>
			<summary>Emit a lightning arc.</summary>
			<parameters>
				<parameter>
					<name>origin</name>
					<type>Vec3</type>
					<description>Lightning origin (start) position.</description>
				</parameter>
				<parameter>
					<name>target</name>
					<type>Vec3</type>
					<description>Lightning target (end) position.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color.</description>
				</parameter>
				<parameter>
					<name>life</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Lifetime in seconds. Clamped to [0, 4.233] for now because of strange internal maths.</description>
				</parameter>
				<parameter>
					<name>amplitude</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>20</defaultValue>
					<description>Strength of the lightning - the higher the value, the "taller" the arcs. Clamped to [1, 255].</description>
				</parameter>
				<parameter>
					<name>beamWidth</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>2</defaultValue>
					<description>Beam width. Clamped to [1, 127].</description>
				</parameter>
				<parameter>
					<name>detail</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>10</defaultValue>
					<description>Higher numbers equal more segments, but it's not a 1:1 correlation. Clamped to [1, 127].</description>
				</parameter>
				<parameter>
					<name>smooth</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, the arc will have large, smooth curves; if false, it will have small, jagged spikes.</description>
				</parameter>
				<parameter>
					<name>endDrift</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, the end of the arc will be able to gradually drift away from its destination in a random direction.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitParticle</name>
			<summary>Emit a particle.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>vel</name>
					<type>Vec3</type>
					<description>Directional velocity.</description>
				</parameter>
				<parameter>
					<name>spriteID</name>
					<type>int</type>
					<description>Sprite ID in the sprite sequence slot.</description>
				</parameter>
				<parameter>
					<name>gravity</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Effect of gravity. Positive value ascends, negative value descends.</description>
				</parameter>
				<parameter>
					<name>rotVel</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Rotational velocity in degrees.</description>
				</parameter>
				<parameter>
					<name>startColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color at start of life.</description>
				</parameter>
				<parameter>
					<name>endColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color at end of life. This will finish long before the end of the particle's life due to internal math.</description>
				</parameter>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<optional>true</optional>
					<defaultValue>TEN.Effects.BlendID.ALPHA_BLEND</defaultValue>
					<description>Render blend mode.</description>
				</parameter>
				<parameter>
					<name>startSize</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>10</defaultValue>
					<description>Size at start of life.</description>
				</parameter>
				<parameter>
					<name>endSize</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Size at end of life.</description>
				</parameter>
				<parameter>
					<name>life</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>2</defaultValue>
					<description>Lifespan in seconds.</description>
				</parameter>
				<parameter>
					<name>damage</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Harm the player on collision.</description>
				</parameter>
				<parameter>
					<name>poison</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Poison the player on collision.</description>
				</parameter>
				<parameter>
					<name>spriteSeqID</name>
					<type>Objects.ObjID</type>
					<optional>true</optional>
					<defaultValue>Objects.ObjID.DEFAULT_SPRITES</defaultValue>
					<description>Sprite sequence slot ID.</description>
				</parameter>
				<parameter>
					<name>startRot</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>random</defaultValue>
					<description>Rotation at start of life.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitAdvancedParticle</name>
			<summary>Emit a particle with extensive configuration options.</summary>
			<description>Options include sprite sequence animation, lights, sounds, and damage effects.</description>
			<parameters>
				<parameter>
					<name>particleData</name>
					<type>ParticleData</type>
					<description>Table containing particle data.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitShockwave</name>
			<summary>Emit a shockwave, similar to that seen when a harpy projectile hits something.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>innerRadius</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Initial inner radius of the shockwave circle - 128 will be approx a click, 512 approx a block.</description>
				</parameter>
				<parameter>
					<name>outerRadius</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>128</defaultValue>
					<description>Initial outer radius of the shockwave circle.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color.</description>
				</parameter>
				<parameter>
					<name>lifetime</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1.0</defaultValue>
					<description>Lifetime in seconds (max 8.5 because of inner maths weirdness).</description>
				</parameter>
				<parameter>
					<name>speed</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>50</defaultValue>
					<description>Initial speed of the shockwave's expansion (the shockwave will always slow as it goes).</description>
				</parameter>
				<parameter>
					<name>angle</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Angle about the X axis - a value of 90 will cause the shockwave to be entirely vertical.</description>
				</parameter>
				<parameter>
					<name>hurtsLara</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, the shockwave will hurt Lara, with the damage being relative to the shockwave's current speed.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitLight</name>
			<summary>Emit dynamic light that lasts for a single frame.</summary>
			<description>If you want a light that sticks around, you must call this each frame.</description>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position of the light.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>light color.</description>
				</parameter>
				<parameter>
					<name>radius</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>20</defaultValue>
					<description>Measured in "clicks" or 256 world units.</description>
				</parameter>
				<parameter>
					<name>shadows</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Determines whether light should generate dynamic shadows for applicable moveables.</description>
				</parameter>
				<parameter>
					<name>name</name>
					<type>string</type>
					<optional>true</optional>
					<description>If provided, engine will interpolate this light for high framerate mode (be careful not to use same name for different lights).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitSpotLight</name>
			<summary>Emit dynamic directional spotlight that lasts for a single frame.</summary>
			<description>If you want a light that sticks around, you must call this each frame.</description>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position of the light.</description>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>Vec3</type>
					<description>Normal which indicates light direction.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color.</description>
				</parameter>
				<parameter>
					<name>radius</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>10</defaultValue>
					<description>Overall radius at the endpoint of a light cone, measured in "clicks" or 256 world units.</description>
				</parameter>
				<parameter>
					<name>falloff</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>5</defaultValue>
					<description>Radius, at which light starts to fade out, measured in "clicks".</description>
				</parameter>
				<parameter>
					<name>distance</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>20</defaultValue>
					<description>Distance, at which light cone fades out, measured in "clicks".</description>
				</parameter>
				<parameter>
					<name>shadows</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Determines whether light should generate dynamic shadows for applicable moveables.</description>
				</parameter>
				<parameter>
					<name>name</name>
					<type>string</type>
					<optional>true</optional>
					<description>If provided, engine will interpolate this light for high framerate mode (be careful not to use same name for different lights).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitBlood</name>
			<summary>Emit blood.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>count</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Blood sprite count.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitAirBubble</name>
			<summary>Emit an air bubble in a water room.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position where the effect will be spawned. Must be in a water room.</description>
				</parameter>
				<parameter>
					<name>size</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>32</defaultValue>
					<description>Sprite size.</description>
				</parameter>
				<parameter>
					<name>amp</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>32</defaultValue>
					<description>Oscillation amplitude.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitWaterfallMist</name>
			<summary>Emit waterfall mist.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position where the effect will be spawned.</description>
				</parameter>
				<parameter>
					<name>size</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>64</defaultValue>
					<description>Effect size.</description>
				</parameter>
				<parameter>
					<name>width</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>32</defaultValue>
					<description>Width of the effect.</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Rotation of effect in degrees.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255, 255)</defaultValue>
					<description>Color of the effect.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitFire</name>
			<summary>Emit fire for a single frame.</summary>
			<description>Will not hurt player. Call this each frame if you want a continuous fire.</description>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>size</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Fire size.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitStreamer</name>
			<summary>Emit an extending streamer effect.</summary>
			<parameters>
				<parameter>
					<name>mov</name>
					<type>Moveable</type>
					<description>Moveable object with which to associate the effect.</description>
				</parameter>
				<parameter>
					<name>tag</name>
					<type>int</type>
					<description>Numeric tag with which to associate the effect on the moveable.</description>
				</parameter>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>Vec3</type>
					<description>Direction vector of movement velocity.</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Start rotation in degrees.</description>
				</parameter>
				<parameter>
					<name>startColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color at the start of life.</description>
				</parameter>
				<parameter>
					<name>endColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(0, 0, 0)</defaultValue>
					<description>Color at the end of life.</description>
				</parameter>
				<parameter>
					<name>width</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Width in world units.</description>
				</parameter>
				<parameter>
					<name>life</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Lifetime in seconds.</description>
				</parameter>
				<parameter>
					<name>vel</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Movement velocity in world units per second.</description>
				</parameter>
				<parameter>
					<name>expRate</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Width expansion rate in world units per second.</description>
				</parameter>
				<parameter>
					<name>rotRate</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Rotation rate in degrees per second.</description>
				</parameter>
				<parameter>
					<name>edgeFeatherMode</name>
					<type>Effects.StreamerFeatherMode</type>
					<optional>true</optional>
					<defaultValue>Effects.StreamerFeatherMode.NONE</defaultValue>
					<description>Edge feather mode.</description>
				</parameter>
				<parameter>
					<name>lengthFeatherMode</name>
					<type>Effects.StreamerFeatherMode</type>
					<optional>true</optional>
					<defaultValue>Effects.StreamerFeatherMode.LEFT</defaultValue>
					<description>Length feather mode. _Not yet implemented._</description>
				</parameter>
				<parameter>
					<name>blendID</name>
					<type>Effects.BlendID</type>
					<optional>true</optional>
					<defaultValue>Effects.BlendID.ALPHA_BLEND</defaultValue>
					<description>Renderer blend ID.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>EmitFlow</name>
			<summary>Emit a particle flowing effect.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>dir</name>
					<type>Vec3</type>
					<description>Directional velocity of the particles in world units per second.</description>
				</parameter>
				<parameter>
					<name>radius</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>512</defaultValue>
					<description>Radius of emitter. The particles will be emitted inside the circle of provided radius measured from centre of world position.</description>
				</parameter>
				<parameter>
					<name>life</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Lifespan in seconds.</description>
				</parameter>
				<parameter>
					<name>friction</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Friction affecting velocity over time in world units per second.</description>
				</parameter>
				<parameter>
					<name>maxSize</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>25</defaultValue>
					<description>Max size of the particle.</description>
				</parameter>
				<parameter>
					<name>startColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(128, 128, 128)</defaultValue>
					<description>Color at start of life.</description>
				</parameter>
				<parameter>
					<name>endColor</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(0, 0, 0)</defaultValue>
					<description>Color at end of life.</description>
				</parameter>
				<parameter>
					<name>spriteSeqID</name>
					<type>Objects.ObjID</type>
					<optional>true</optional>
					<defaultValue>Objects.ObjID.DEFAULT_SPRITES</defaultValue>
					<description>Sprite sequence slot ID.</description>
				</parameter>
				<parameter>
					<name>spriteID</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>14 (UNDERWATER_DUST)</defaultValue>
					<description>Sprite ID in the sprite sequence slot.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>MakeExplosion</name>
			<summary>Make an explosion.</summary>
			<description>Does not hurt Lara</description>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec3</type>
					<description>World position.</description>
				</parameter>
				<parameter>
					<name>size</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>512</defaultValue>
					<description>Size of the shockwave if enabled.</description>
				</parameter>
				<parameter>
					<name>shockwave</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, creates a very faint shockwave which will not hurt Lara.
 For underwater rooms, it creates a splash if `pos` is near the surface. Shockwave uses `mainColor` if provided.</description>
				</parameter>
				<parameter>
					<name>mainColor</name>
					<type>Color</type>
					<optional>true</optional>
					<description>Main color of the explosion and the shockwave. If not provided, default explosion color will be used. Must be provided for colored explosions.</description>
				</parameter>
				<parameter>
					<name>additionalColor</name>
					<type>Color</type>
					<optional>true</optional>
					<description>Additional color of the explosion. If provided, explosion would randomly use the main or the additional color. If not provided, only main color will be used.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>MakeEarthquake</name>
			<summary>Make an earthquake.</summary>
			<parameters>
				<parameter>
					<name>strength</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>100</defaultValue>
					<description>How strong should the earthquake be? Increasing this value also increases the lifespan of the earthquake.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Effects</module>
			<name>GetWind</name>
			<summary>Get the wind vector for the current game frame.</summary>
			<description>This represents the 3D displacement applied by the engine on things like particles affected by wind.()</description>
			<returns>
				<return>
					<type>Vec3</type>
					<description>Wind vector.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>AddLevel</name>
			<summary>Add a level to the Flow.</summary>
			<parameters>
				<parameter>
					<name>level</name>
					<type>Flow.Level</type>
					<description>A level object.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>SetIntroImagePath</name>
			<summary>Image to show when loading the game.</summary>
			<description>Must be a .jpg or .png image.</description>
			<parameters>
				<parameter>
					<name>path</name>
					<type>string</type>
					<description>The path to the image, relative to the TombEngine executable.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>SetIntroVideoPath</name>
			<summary>Video to show when loading the game.</summary>
			<description>Must be a common video format, such as mp4, mkv, mov or avi.</description>
			<parameters>
				<parameter>
					<name>path</name>
					<type>string</type>
					<description>the path to the video, relative to the TombEngine exe</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>SetTitleScreenImagePath</name>
			<summary>Image to show in the background of the title screen.</summary>
			<description>Must be a .jpg or .png image. _Not yet implemented._</description>
			<parameters>
				<parameter>
					<name>path</name>
					<type>string</type>
					<description>The path to the image, relative to the TombEngine executable.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableLaraInTitle</name>
			<summary>Enable or disable Lara drawing in title flyby.</summary>
			<description>Must be true or false</description>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableLevelSelect</name>
			<summary>Enable or disable level selection in title flyby.</summary>
			<description>Must be true or false</description>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableHomeLevel</name>
			<summary>Enable or disable Home Level entry in the main menu.</summary>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableLoadSave</name>
			<summary>Enable or disable saving and loading of savegames.</summary>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableFlyCheat</name>
			<summary>Enable or disable the fly cheat.</summary>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnablePointFilter</name>
			<summary>Enable or disable point texture filter.</summary>
			<description>Must be true or false</description>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>EnableMassPickup</name>
			<summary>Enable or disable mass pickup.</summary>
			<description>Must be true or false</description>
			<parameters>
				<parameter>
					<name>enabled</name>
					<type>bool</type>
					<description>True or false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetLevel</name>
			<summary>Returns the level by index.</summary>
			<description>Indices depend on the order in which AddLevel was called; the first added will
have an index of 0, the second an index of 1, and so on.</description>
			<parameters>
				<parameter>
					<name>index</name>
					<type>int</type>
					<description>Index of the level.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Flow.Level</type>
					<description>The level indicated by the index.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>GetCurrentLevel</name>
			<summary>Returns the level that the game control is running in that moment.</summary>
			<returns>
				<return>
					<type>Flow.Level</type>
					<description>The current level.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>EndLevel</name>
			<summary>Finishes the current level, with optional level index and start position index provided.</summary>
			<description>If level index is not provided or is zero, jumps to next level. If level index is more than
level count, jumps to title. If LARA\_START\_POS objects are present in level, player will be
teleported to such object with OCB similar to provided second argument.</description>
			<parameters>
				<parameter>
					<name>index</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Level index.</description>
				</parameter>
				<parameter>
					<name>startPos</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Player start position in the next level. Should correspond to OCB of `Objects.ObjID.LARA_START_POS` object in the next level.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetStatistics</name>
			<summary>Get game or level statistics.</summary>
			<description>For reference about statistics class, see @{Flow.Statistics}.</description>
			<parameters>
				<parameter>
					<name>game</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, returns overall game statistics, otherwise returns current level statistics.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Flow.Statistics</type>
					<description>Statistics structure representing game or level statistics.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetStatistics</name>
			<summary>Set game or level statistics.</summary>
			<description>For reference about statistics class, see @{Flow.Statistics}.</description>
			<parameters>
				<parameter>
					<name>statistics</name>
					<type>Flow.Statistics</type>
					<description>Statistic object to set.</description>
				</parameter>
				<parameter>
					<name>game</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, sets overall game statistics, otherwise sets current level statistics.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetGameStatus</name>
			<summary>Get current game status, such as normal game loop, exiting to title, etc.</summary>
			<returns>
				<return>
					<type>Flow.GameStatus</type>
					<description>The current game status.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>GetFreezeMode</name>
			<summary>Get current freeze mode, such as none, full, spectator or player.</summary>
			<returns>
				<return>
					<type>Flow.FreezeMode</type>
					<description>The current freeze mode.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetFreezeMode</name>
			<summary>Set current freeze mode, such as none, full, spectator or player.</summary>
			<description>Freeze mode specifies whether game is in normal mode or paused in a particular way to allow
custom menu creation, photo mode or time freeze.</description>
			<parameters>
				<parameter>
					<name>freezeMode</name>
					<type>Flow.FreezeMode</type>
					<description>New freeze mode to set.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>SaveGame</name>
			<summary>Save the game to a savegame slot.</summary>
			<parameters>
				<parameter>
					<name>slotID</name>
					<type>int</type>
					<description>ID of the savegame slot to save to.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>LoadGame</name>
			<summary>Load the game from a savegame slot.</summary>
			<parameters>
				<parameter>
					<name>slotID</name>
					<type>int</type>
					<description>ID of the savegame slot to load from.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>DeleteSaveGame</name>
			<summary>Delete a savegame.</summary>
			<parameters>
				<parameter>
					<name>slotID</name>
					<type>int</type>
					<description>ID of the savegame slot to clear.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>DoesSaveGameExist</name>
			<summary>Check if a savegame exists.</summary>
			<parameters>
				<parameter>
					<name>slotID</name>
					<type>int</type>
					<description>ID of the savegame slot to check.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if the savegame exists, false if not.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>GetSecretCount</name>
			<summary>Returns the player's current per-game secret count.</summary>
			<returns>
				<return>
					<type>int</type>
					<description>Current game secret count.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetSecretCount</name>
			<summary>Sets the player's current per-game secret count.</summary>
			<parameters>
				<parameter>
					<name>count</name>
					<type>int</type>
					<description>New secret count.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>AddSecret</name>
			<summary>Adds one secret to current level secret count and also plays secret music track.</summary>
			<description>The index argument corresponds to the secret's unique ID, the same that would go in a secret trigger's Param.</description>
			<parameters>
				<parameter>
					<name>index</name>
					<type>int</type>
					<description>An index of current level's secret (must be from 0 to 31).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetTotalSecretCount</name>
			<summary>Get total number of secrets in the game.</summary>
			<returns>
				<return>
					<type>int</type>
					<description>Total number of secrets in the game.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetTotalSecretCount</name>
			<summary>Set total number of secrets in the game.</summary>
			<description>Must be an integer value (0 means no secrets).</description>
			<parameters>
				<parameter>
					<name>count</name>
					<type>int</type>
					<description>Total number of secrets in the game.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>FlipMap</name>
			<summary>Do FlipMap with specific group ID.</summary>
			<parameters>
				<parameter>
					<name>flipmap</name>
					<type>int</type>
					<description>ID of flipmap group to actuvate / deactivate.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetFlipMapStatus</name>
			<summary>Get current FlipMap status for specific group ID.</summary>
			<parameters>
				<parameter>
					<name>index</name>
					<type>int</type>
					<optional>true</optional>
					<description>Flipmap group ID to check. If no group specified or group is -1, function returns overall flipmap status (on or off).</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>int</type>
					<description>Status of the flipmap group (true means on, false means off).</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetSettings</name>
			<summary>Set provided settings table to an engine.</summary>
			<parameters>
				<parameter>
					<name>settings</name>
					<type>Flow.Settings</type>
					<description>A settings table.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetSettings</name>
			<summary>Get settings table from an engine.</summary>
			<returns>
				<return>
					<type>Flow.Settings</type>
					<description>Current settings table.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Flow</module>
			<name>SetStrings</name>
			<summary>Set string variable keys and their translations.</summary>
			<parameters>
				<parameter>
					<name>table</name>
					<type>table</type>
					<description>Array-style table with strings.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>GetString</name>
			<summary>Get translated string.</summary>
			<parameters>
				<parameter>
					<name>key</name>
					<type>string</type>
					<description>Key for translated string.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>IsStringPresent</name>
			<summary>Check if translated string is present.</summary>
			<parameters>
				<parameter>
					<name>key</name>
					<type>string</type>
					<description>Key for translated string.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Flow</module>
			<name>SetLanguageNames</name>
			<summary>Set language names for translations.</summary>
			<description>Specify which translations in the strings table correspond to which languages.</description>
			<parameters>
				<parameter>
					<name>table</name>
					<type>table</type>
					<description>Array-style table with language names.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>GetAnalogKeyValue</name>
			<summary>Get the analog value of an action key.</summary>
			<description>Returns either 0 or 1 for digital key mappings (e.g. keyboard or gamepad buttons),
 but may return arbitrary values in the range 0 to 1 for analog key mappings
 (e.g. gamepad sticks, gamepad triggers, or mouse axes).</description>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to query.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>float</type>
					<description>Analog value in the range [0, 1].</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Input</module>
			<name>GetAnalogAxisValue</name>
			<summary>Get the analog value of an axis.</summary>
			<parameters>
				<parameter>
					<name>axis</name>
					<type>Input.AxisID</type>
					<description>Axis ID to fetch.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Vec2</type>
					<description>Relative analog axis value with components in the range [-1, 1].</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Input</module>
			<name>GetMouseDisplayPosition</name>
			<summary>Get the display position of the cursor in percent.</summary>
			<returns>
				<return>
					<type>Vec2</type>
					<description>Cursor display position in percent.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Input</module>
			<name>IsKeyHit</name>
			<summary>Check if an action key is being hit.</summary>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to check.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>IsKeyHeld</name>
			<summary>Check if an action key is being held.</summary>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to check.</description>
				</parameter>
				<parameter>
					<name>delaySec</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Delay time in seconds before a hold can be registered.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>IsKeyPulsed</name>
			<summary>Check if an action key is being pulsed.</summary>
			<description>Note that to avoid a stutter on the second pulse, `initialDelaySec` must be a multiple of `delaySec`.</description>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to check.</description>
				</parameter>
				<parameter>
					<name>delaySec</name>
					<type>float</type>
					<description>Delay time in seconds between pulses.</description>
				</parameter>
				<parameter>
					<name>initialDelaySec</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0</defaultValue>
					<description>Initial delay time in seconds on the first pulse.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>IsKeyReleased</name>
			<summary>Check if an action key is being released.</summary>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to check.</description>
				</parameter>
				<parameter>
					<name>maxDelaySec</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>infinity</defaultValue>
					<description>Max delay time in seconds between hit and release within which a release can be registered.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>PushKey</name>
			<summary>Simulate an action key push.</summary>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to push.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>ClearKey</name>
			<summary>Clear an action key.</summary>
			<parameters>
				<parameter>
					<name>actionID</name>
					<type>Input.ActionID</type>
					<description>Action ID to clear.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Input</module>
			<name>ClearAllKeys</name>
			<summary>Clear all action keys.</summary>
		</function>
		<function>
			<module>Input</module>
			<name>Vibrate</name>
			<summary>Vibrate the game controller if the function is available and the setting is on.</summary>
			<parameters>
				<parameter>
					<name>strength</name>
					<type>float</type>
					<description>Vibration strength.</description>
				</parameter>
				<parameter>
					<name>time</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>0.3</defaultValue>
					<description>Vibration time in seconds.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Inventory</module>
			<name>GiveItem</name>
			<summary>Add an item to the player's inventory.</summary>
			<parameters>
				<parameter>
					<name>objectID</name>
					<type>Objects.ObjID</type>
					<description>Object ID of the item to add.</description>
				</parameter>
				<parameter>
					<name>count</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>The amount of items to add. Default is the yield from a single pickup, e.g. 1 from a medipack, 12 from a flare pack.</description>
				</parameter>
				<parameter>
					<name>addToPickupSummary</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, display the item in the pickup summary. Default is false.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Inventory</module>
			<name>TakeItem</name>
			<summary>Remove an item from the player's inventory.</summary>
			<parameters>
				<parameter>
					<name>Object</name>
					<type>Objects.ObjID</type>
					<description>ID of the item to remove.</description>
				</parameter>
				<parameter>
					<name>count</name>
					<type>int</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>The amount of items to remove. Default is the yield from a single pickup, e.g. 1 from a medipack, 12 from a flare pack.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Inventory</module>
			<name>GetItemCount</name>
			<summary>Get the amount of an item held in the player's inventory.</summary>
			<parameters>
				<parameter>
					<name>objectID</name>
					<type>Objects.ObjID</type>
					<description>Object ID of the item to check.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>int</type>
					<description>The amount of items. -1 indicates infinity.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Inventory</module>
			<name>SetItemCount</name>
			<summary>Set the amount of an item in the player's inventory.</summary>
			<parameters>
				<parameter>
					<name>objectID</name>
					<type>Objects.ObjID</type>
					<description>Object ID of the item amount to set.</description>
				</parameter>
				<parameter>
					<name>count</name>
					<type>int</type>
					<description>The amount of items to set. -1 indicates infinity.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Inventory</module>
			<name>GetUsedItem</name>
			<summary>Get last item used in the player's inventory.</summary>
			<description>This value will be valid only for a single frame after exiting inventory, after which Lara says "No".
 Therefore, this function must be preferably used either in OnLoop or OnUseItem events.</description>
			<returns>
				<return>
					<type>Objects.ObjID</type>
					<description>Last item used in the inventory.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Inventory</module>
			<name>SetUsedItem</name>
			<summary>Set last item used in the player's inventory.</summary>
			<description>You will be able to specify only objects which already exist in the inventory.
 Will only be valid for the next frame. If not processed by the game, Lara will say "No".</description>
			<parameters>
				<parameter>
					<name>objectID</name>
					<type>Objects.ObjID</type>
					<description>Object ID of the item to select from inventory.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Inventory</module>
			<name>ClearUsedItem</name>
			<summary>Clear last item used in the player's inventory.</summary>
			<description>When this function is used in OnUseItem level function, it allows to override existing item functionality.
 For items without existing functionality, this function is needed to avoid Lara saying "No" after using it.</description>
		</function>
		<function>
			<module>Logic</module>
			<name>AddCallback</name>
			<summary>Register a function as a callback.</summary>
			<parameters>
				<parameter>
					<name>point</name>
					<type>CallbackPoint</type>
					<description>When should the callback be called?</description>
				</parameter>
				<parameter>
					<name>func</name>
					<type>LevelFunc</type>
					<description>The function to be called (must be in the `LevelFuncs` hierarchy). Will receive, as an argument, the time in seconds since the last frame.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Logic</module>
			<name>RemoveCallback</name>
			<summary>Deregister a function as a callback.</summary>
			<description>Will have no effect if the function was not registered as a callback</description>
			<parameters>
				<parameter>
					<name>point</name>
					<type>CallbackPoint</type>
					<description>The callback point the function was registered with. See @{AddCallback}</description>
				</parameter>
				<parameter>
					<name>func</name>
					<type>LevelFunc</type>
					<description>The function to remove; must be in the LevelFuncs hierarchy.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Logic</module>
			<name>HandleEvent</name>
			<summary>Attempt to find an event set and execute a particular event from it.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>Name of the event set to find.</description>
				</parameter>
				<parameter>
					<name>type</name>
					<type>EventType</type>
					<description>Event to execute.</description>
				</parameter>
				<parameter>
					<name>activator</name>
					<type>Objects.Moveable</type>
					<optional>true</optional>
					<defaultValue>Lara</defaultValue>
					<description>Optional activator.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Logic</module>
			<name>EnableEvent</name>
			<summary>Attempt to find an event set and enable specified event in it.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>Name of the event set to find.</description>
				</parameter>
				<parameter>
					<name>type</name>
					<type>EventType</type>
					<description>Event to enable.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Logic</module>
			<name>DisableEvent</name>
			<summary>Attempt to find an event set and disable specified event in it.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>Name of the event set to find.</description>
				</parameter>
				<parameter>
					<name>type</name>
					<type>EventType</type>
					<description>Event to disable.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Objects</module>
			<name>GetMoveableByName</name>
			<summary>Get a Moveable by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the moveable as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Moveable</type>
					<description>A non-owning Moveable referencing the item.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetMoveablesBySlot</name>
			<summary>Get moveables by their slot.</summary>
			<parameters>
				<parameter>
					<name>slot</name>
					<type>Objects.ObjID</type>
					<description>The unique slot of the moveable, e.g. `Objects.ObjID.ANIMATING1`.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>table</type>
					<description>Table of moveables referencing the given slot.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetStaticByName</name>
			<summary>Get a Static by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the static mesh as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Static</type>
					<description>A non-owning Static referencing the static mesh.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetStaticsBySlot</name>
			<summary>Get statics by their slot.</summary>
			<parameters>
				<parameter>
					<name>slot</name>
					<type>int</type>
					<description>The unique numerical slot of the static mesh.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>table</type>
					<description>Table of static meshes referencing the given slot.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetCameraByName</name>
			<summary>Get a Camera by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the camera as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Camera</type>
					<description>A non-owning Camera referencing the camera.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetSinkByName</name>
			<summary>Get a Sink by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the sink as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Sink</type>
					<description>A non-owning Sink referencing the sink.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetSoundSourceByName</name>
			<summary>Get a SoundSource by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the sound source as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.SoundSource</type>
					<description>A non-owning SoundSource referencing the sound source.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetAIObjectByName</name>
			<summary>Get an AIObject by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the AIObject as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.AIObject</type>
					<description>A non-owning AIObject referencing the AI object.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetVolumeByName</name>
			<summary>Get a Volume by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the volume as set in, or generated by, Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Volume</type>
					<description>A non-owning Volume referencing the volume.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetRoomByName</name>
			<summary>Get a Room by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The unique name of the room as set in Tomb Editor.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Room</type>
					<description>A non-owning Room referencing the room.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>GetRoomsByTag</name>
			<summary>Get rooms by tag.</summary>
			<parameters>
				<parameter>
					<name>tag</name>
					<type>string</type>
					<description>Tag to select rooms by.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>table</type>
					<description>Table of rooms containing the given tag.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Objects</module>
			<name>IsNameInUse</name>
			<summary>Check if a given script name is in use by any object type.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The name to check.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>True if name is in use and an object with a given name is present, false if not.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Sound</module>
			<name>PlayAudioTrack</name>
			<summary>Play an audio track.</summary>
			<description>Should be placed in the `Audio` folder. Supported formats are wav, mp3 and ogg.</description>
			<parameters>
				<parameter>
					<name>filename</name>
					<type>string</type>
					<description>Filename of a track (without file extension) to play.</description>
				</parameter>
				<parameter>
					<name>type</name>
					<type>Sound.SoundTrackType</type>
					<description>Type of the audio track to play.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>SetAmbientTrack</name>
			<summary>Set and play an ambient track.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>Name of track (without file extension) to play.</description>
				</parameter>
				<parameter>
					<name>fromStart</name>
					<type>bool</type>
					<description>Specifies whether ambient track should play from the start, or crossfade at a random position.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>StopAudioTracks</name>
			<summary>Stop any audio tracks currently playing.</summary>
		</function>
		<function>
			<module>Sound</module>
			<name>StopAudioTrack</name>
			<summary>Stop audio track that is currently playing.</summary>
			<parameters>
				<parameter>
					<name>type</name>
					<type>Sound.SoundTrackType</type>
					<description>Type of the audio track.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>GetAudioTrackLoudness</name>
			<summary>Get current loudness level for specified track type.</summary>
			<parameters>
				<parameter>
					<name>type</name>
					<type>Sound.SoundTrackType</type>
					<description>Type of the audio track.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>float</type>
					<description>Current loudness of a specified audio track.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Sound</module>
			<name>PlaySound</name>
			<summary>Play sound effect.</summary>
			<parameters>
				<parameter>
					<name>soundID</name>
					<type>int</type>
					<description>Sound ID to play. Corresponds to the value in the sound XML file or Tomb Editor's "Sound Infos" window.</description>
				</parameter>
				<parameter>
					<name>position</name>
					<type>Vec3</type>
					<optional>true</optional>
					<description>The 3D position of the sound, i.e. where the sound "comes from". If not given, the sound will not be positional.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>StopSound</name>
			<summary>Stop sound effect.</summary>
			<parameters>
				<parameter>
					<name>soundID</name>
					<type>int</type>
					<description>Sound ID to play. Corresponds to the value in the sound XML file or Tomb Editor's "Sound Infos" window.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>IsSoundPlaying</name>
			<summary>Check if the sound effect is playing.</summary>
			<parameters>
				<parameter>
					<name>soundID</name>
					<type>int</type>
					<description>Sound ID to check. Corresponds to the value in the sound XML file or Tomb Editor's "Sound Infos" window.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>IsAudioTrackPlaying</name>
			<summary>Check if the audio track is playing.</summary>
			<parameters>
				<parameter>
					<name>track</name>
					<type>string</type>
					<description>Filename to check. Should be without extension and without full directory path.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Sound</module>
			<name>GetCurrentSubtitle</name>
			<summary>Get current subtitle string for a voice track currently playing.</summary>
			<description>Subtitle file must be in .srt format, have same filename as voice track, and be placed in same directory as voice track.
 Returns nil if no voice track is playing or no subtitle present.</description>
			<returns>
				<return>
					<type>string</type>
					<description>Current subtitle string.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Strings</module>
			<name>ShowString</name>
			<summary>Show some text on-screen.</summary>
			<parameters>
				<parameter>
					<name>string</name>
					<type>Strings.DisplayString</type>
					<description>The string object to draw.</description>
				</parameter>
				<parameter>
					<name>time</name>
					<type>float</type>
					<optional>true</optional>
					<description>The time in seconds for which to show the string. If not given, the string will have an "infinite" life, and will show
until @{HideString} is called or until the level is finished.</description>
				</parameter>
				<parameter>
					<name>autoDelete</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>true</defaultValue>
					<description>Should be string automatically deleted after timeout is reached. If not given, the string will remain
allocated even after timeout is reached, and can be shown again without re-initialization.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Strings</module>
			<name>HideString</name>
			<summary>Hide some on-screen text.</summary>
			<parameters>
				<parameter>
					<name>string</name>
					<type>Strings.DisplayString</type>
					<description>The string object to hide. Must previously have been shown with a call to @{ShowString}, or this function will have no effect.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Strings</module>
			<name>IsStringDisplaying</name>
			<summary>Checks if the string is shown</summary>
			<parameters>
				<parameter>
					<name>string</name>
					<type>Strings.DisplayString</type>
					<description>The string object to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if it is shown, false if it is hidden</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>HasLineOfSight</name>
			<summary>Determine if there is a clear line of sight between two positions.</summary>
			<description>Limited to room geometry. Objects are ignored.</description>
			<parameters>
				<parameter>
					<name>roomID</name>
					<type>float</type>
					<description>Room ID of the first position's room.</description>
				</parameter>
				<parameter>
					<name>posA</name>
					<type>Vec3</type>
					<description>First position.</description>
				</parameter>
				<parameter>
					<name>posB</name>
					<type>Vec3</type>
					<description>Second position.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if there is a line of sight, false if not.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>CalculateHorizontalDistance</name>
			<summary>Calculate the horizontal distance between two positions.</summary>
			<parameters>
				<parameter>
					<name>posA</name>
					<type>Vec3</type>
					<description>First position.</description>
				</parameter>
				<parameter>
					<name>posB</name>
					<type>Vec3</type>
					<description>Second position.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>float</type>
					<description>Horizontal distance between the two positions.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>GetDisplayPosition</name>
			<summary>Get the projected display space position of a 3D world position.</summary>
			<description>Returns nil if the world position is behind the camera view.</description>
			<parameters>
				<parameter>
					<name>worldPos</name>
					<type>Vec3</type>
					<description>3D world position.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Vec2</type>
					<description>Projected display space position in percent.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>PercentToScreen</name>
			<summary>Translate a pair display position coordinates to pixel coordinates.</summary>
			<description>To be used with @{Strings.DisplayString:SetPosition} and @{Strings.DisplayString}.</description>
			<parameters>
				<parameter>
					<name>x</name>
					<type>float</type>
					<description>X component of the display position.</description>
				</parameter>
				<parameter>
					<name>y</name>
					<type>float</type>
					<description>Y component of the display position.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>int</type>
					<description>x X coordinate in pixels.</description>
				</return>
				<return>
					<type>int</type>
					<description>y Y coordinate in pixels.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>ScreenToPercent</name>
			<summary>Translate a pair of pixel coordinates to display position coordinates.</summary>
			<description>To be used with @{Strings.DisplayString:GetPosition}.</description>
			<parameters>
				<parameter>
					<name>x</name>
					<type>int</type>
					<description>X pixel coordinate to translate to display position.</description>
				</parameter>
				<parameter>
					<name>y</name>
					<type>int</type>
					<description>Y pixel coordinate to translate to display position.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>float</type>
					<description>x X component of display position.</description>
				</return>
				<return>
					<type>float</type>
					<description>y Y component of display position.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>PickMoveableByDisplayPosition</name>
			<summary>Pick a moveable by the given display position.</summary>
			<parameters>
				<parameter>
					<name>position</name>
					<type>Vec2</type>
					<description>Display space position in percent.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Moveable</type>
					<description>Picked moveable (nil if no moveable was found under the cursor).</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>PickStaticByDisplayPosition</name>
			<summary>Pick a static mesh by the given display position.</summary>
			<parameters>
				<parameter>
					<name>position</name>
					<type>Vec2</type>
					<description>Display space position in percent.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Objects.Static</type>
					<description>Picked static mesh (nil if no static mesh was found under the cursor).</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Util</module>
			<name>PrintLog</name>
			<summary>Write messages within the Log file</summary>
			<parameters>
				<parameter>
					<name>Message</name>
					<type>string</type>
					<description>to be displayed within the log.</description>
				</parameter>
				<parameter>
					<name>logLevel</name>
					<type>Util.LogLevel</type>
					<description>Log level to be displayed.</description>
				</parameter>
				<parameter>
					<name>allowSpam</name>
					<type>bool</type>
					<optional>true</optional>
					<description>If true, allows continuous spamming of the message.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>FadeIn</name>
			<summary>Do a full-screen fade-in from black.</summary>
			<parameters>
				<parameter>
					<name>speed</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Speed in units per second. A value of 1 will make the fade take one second.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>FadeOut</name>
			<summary>Do a full-screen fade-to-black.</summary>
			<description>The screen will remain black until a call to FadeIn.</description>
			<parameters>
				<parameter>
					<name>speed</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Speed in units per second. A value of 1 will make the fade take one second.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>SetCineBars</name>
			<summary>Move black cinematic bars in from the top and bottom of the game window.</summary>
			<parameters>
				<parameter>
					<name>height</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>30</defaultValue>
					<description>Percentage of the screen to be covered.</description>
				</parameter>
				<parameter>
					<name>speed</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>30</defaultValue>
					<description>Coverage percent per second.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>SetFOV</name>
			<summary>Set field of view.</summary>
			<parameters>
				<parameter>
					<name>angle</name>
					<type>float</type>
					<description>Angle in degrees (clamped to [10, 170]).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>GetFOV</name>
			<summary>Get field of view.</summary>
			<returns>
				<return>
					<type>float</type>
					<description>Current FOV angle in degrees.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>GetCameraType</name>
			<summary>Shows the mode of the game camera.</summary>
			<returns>
				<return>
					<type>View.CameraType</type>
					<description>Value used by the game camera.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>GetCameraPosition</name>
			<summary>Gets current camera position.</summary>
			<returns>
				<return>
					<type>Vec3</type>
					<description>Current camera position.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>GetCameraTarget</name>
			<summary>Gets current camera target.</summary>
			<returns>
				<return>
					<type>Vec3</type>
					<description>Current camera target.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>GetCameraRoom</name>
			<summary>Gets current room where camera is positioned.</summary>
			<returns>
				<return>
					<type>Objects.Room</type>
					<description>Current room of the camera.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>SetPostProcessMode</name>
			<summary>Sets the post-process effect mode, like negative or monochrome.</summary>
			<parameters>
				<parameter>
					<name>effect</name>
					<type>View.PostProcessMode</type>
					<description>Effect type to set.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>SetPostProcessStrength</name>
			<summary>Sets the post-process effect strength.</summary>
			<parameters>
				<parameter>
					<name>strength</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>How strong the effect is.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>SetPostProcessTint</name>
			<summary>Sets the post-process tint.</summary>
			<parameters>
				<parameter>
					<name>tint</name>
					<type>Color</type>
					<description>value to use.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>PlayVideo</name>
			<summary>Play a video file.</summary>
			<description>File should be placed in the `FMV` folder.</description>
			<parameters>
				<parameter>
					<name>fileName</name>
					<type>string</type>
					<description>Video file name.  Can be provided without extension, if type is mp4, mkv, mov or avi.</description>
				</parameter>
				<parameter>
					<name>background</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Play video in the background mode.
 In such case, video won't play in fullscreen, but must be shown using special animated texture type in Tomb Editor, or using @{View.DisplaySprite}.</description>
				</parameter>
				<parameter>
					<name>silent</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Play video without sound.</description>
				</parameter>
				<parameter>
					<name>loop</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Play video in a loop.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>StopVideo</name>
			<summary>Stop the currently playing video.</summary>
			<description>Only possible if video is playing in the background mode.</description>
		</function>
		<function>
			<module>View</module>
			<name>GetVideoPosition</name>
			<summary>Gets the currently playing video position.</summary>
			<returns>
				<return>
					<type>Time</type>
					<description>Current video position.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>SetVideoPosition</name>
			<summary>Sets the currently playing video position.</summary>
			<parameters>
				<parameter>
					<name>position</name>
					<type>Time</type>
					<description>New video position.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>GetVideoDominantColor</name>
			<summary>Gets the dominant color for the current video frame.</summary>
			<description>If no video is playing, returns black.</description>
			<returns>
				<return>
					<type>Color</type>
					<description>Dominant video color.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>IsVideoPlaying</name>
			<summary>Checks if video is currently playing.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<optional>true</optional>
					<description>Video file name. If provided, checks if the currently playing video file name is the same as the provided one.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>True if video is currently playing.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>PlayFlyby</name>
			<summary>Play a flyby sequence.</summary>
			<parameters>
				<parameter>
					<name>seqID</name>
					<type>int</type>
					<description>Flyby sequence ID.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>GetFlybyPosition</name>
			<summary>Get a flyby sequence's position at a specified progress point in percent.</summary>
			<parameters>
				<parameter>
					<name>seqID</name>
					<type>int</type>
					<description>Flyby sequence ID.</description>
				</parameter>
				<parameter>
					<name>progress</name>
					<type>float</type>
					<description>Progress point in percent. Clamped to [0, 100].</description>
				</parameter>
				<parameter>
					<name>loop</name>
					<type>bool</type>
					<optional>true</optional>
					<description>Smooth the position near start and end points, as if the sequence is looped.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Vec3</type>
					<description>Position at the given progress point.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>GetFlybyRotation</name>
			<summary>Get a flyby sequence's rotation at a specified progress point in percent.</summary>
			<parameters>
				<parameter>
					<name>seqID</name>
					<type>int</type>
					<description>Flyby sequence ID.</description>
				</parameter>
				<parameter>
					<name>progress</name>
					<type>float</type>
					<description>Progress point in percent. Clamped to [0, 100].</description>
				</parameter>
				<parameter>
					<name>loop</name>
					<type>bool</type>
					<optional>true</optional>
					<description>Smooth the position near start and end points, as if the sequence is looped.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Rotation</type>
					<description>Rotation at the given progress point.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>View</module>
			<name>ResetObjCamera</name>
			<summary>Reset object camera back to Lara and deactivate object camera.</summary>
		</function>
		<function>
			<module>View</module>
			<name>FlashScreen</name>
			<summary>Flash screen.</summary>
			<parameters>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>Color(255, 255, 255)</defaultValue>
					<description>Color.</description>
				</parameter>
				<parameter>
					<name>speed</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1</defaultValue>
					<description>Speed in units per second. Value of 1 will make flash take one second. Clamped to [0.005, 1.0].</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>View</module>
			<name>GetAspectRatio</name>
			<summary>Get the display resolution's aspect ratio.</summary>
			<returns>
				<return>
					<type>float</type>
					<description>Display resolution's aspect ratio.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>Create</name>
			<summary>Creates a custom progress bar with extensive configuration options.</summary>
			<parameters>
				<parameter>
					<name>barData</name>
					<type>table</type>
					<description>The table that contains all the bar data. Refer to table setup for barData.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomBar</type>
					<description>The custombar in its hidden state</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>CreatePlayerBar</name>
			<summary>Creates a bar tied to Players's attributes (Health, Air, Stamina).</summary>
			<parameters>
				<parameter>
					<name>playerBarData</name>
					<type>table</type>
					<description>The table that contains all the player bar data. Refer to table setup for playerBarData.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomBar</type>
					<description>Player attribute bar.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>CreateEnemyHpBar</name>
			<summary>Creates a custom health bar for a specific enemy (like a boss).</summary>
			<description>Ensure this function is called before Lara aims at the enemy if using generic enemy HP bars as well.
 Also be sure to call this function after increasing the HP of the enemy via LUA.</description>
			<parameters>
				<parameter>
					<name>enemyBarData</name>
					<type>table</type>
					<description>The table that contains all the enemy bar data. Refer to table setup for enemyBarData.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomBar</type>
					<description>Enemy health bar.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetEnemiesHpGenericBar</name>
			<summary>Creates health bars for all enemies.</summary>
			<description>A new bar is generated whenever Lara targets an enemy. If the "hide text" option is disabled, the enemy's name (as set in the editor) is displayed. 
 Multiple enemies can share the same name by appending _number to the name in the editor. If adjusting an enemy's max HP, ensure this is done before Lara targets the enemy.
 To create health bars for specific enemies, use CustomBar.CreateEnemyHpBar, ensuring the bar is created prior to targeting.</description>
			<parameters>
				<parameter>
					<name>enemiesBarData</name>
					<type>table</type>
					<description>The table that contains all the enemies bar data. Refer to table setup for enemiesBarData.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomBar</type>
					<description>Enemy health bars.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>Get</name>
			<summary>The function retrieves an existing bar instance by its unique identifier (barName).</summary>
			<description>This function is useful when you need to access or manipulate a bar that has already been created.</description>
			<parameters>
				<parameter>
					<name>barName</name>
					<type>string</type>
					<description>The unique identifier assigned to the bar when it was created using CustomBar.New</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>Delete</name>
			<summary>The function removes a custom bar and its associated data from the system.</summary>
			<description>It ensures that the bar is no longer tracked or accessible in the LevelVars.Engine.CustomBars.bars table.</description>
			<parameters>
				<parameter>
					<name>barName</name>
					<type>string</type>
					<description>The name of the custom bar to be deleted.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarValue</name>
			<summary>The function sets the value of a custom bar over a specified time period.</summary>
			<parameters>
				<parameter>
					<name>value</name>
					<type>number</type>
					<description>The new target to which the bar's current value should transition. (Must be a non-negative number; between 0 and the bar's maxValue.</description>
				</parameter>
				<parameter>
					<name>time</name>
					<type>number</type>
					<description>The time (in seconds) over which the bar's value should transition to the target value.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>ChangeBarValueOverTimespan</name>
			<summary>The function adjusts the bar's value relative to its current or target value over a specified time span.</summary>
			<parameters>
				<parameter>
					<name>value</name>
					<type>number</type>
					<description>The relative value to add (positive or negative) to the current bar value.</description>
				</parameter>
				<parameter>
					<name>time</name>
					<type>number</type>
					<description>The duration (in seconds) over which the change should occur.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetVisibility</name>
			<summary>The function controls the visibility of a custom bar.</summary>
			<parameters>
				<parameter>
					<name>visible</name>
					<type>bool</type>
					<description>`true` makes the bar visible, `false` hides the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>IsVisible</name>
			<summary>The function checks whether a custom bar is currently visible.</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the bar is visible and `false` if it is not.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>GetValue</name>
			<summary>The function retrieves the current value of a custom bar.</summary>
			<returns>
				<return>
					<type>float</type>
					<description>Returns the current value of a custom bar.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomBar</module>
			<name>DeleteAllBars</name>
			<summary>The function deletes all custom bars.</summary>
		</function>
		<function>
			<module>CustomBar</module>
			<name>ShowEnemiesHpGenericBar</name>
			<summary>This function prevents the creation of new health bars for enemies when set to false.</summary>
			<description>However, it does not affect the health bars that have already been created.</description>
			<parameters>
				<parameter>
					<name>value</name>
					<type>bool</type>
					<description>Specifies whether new health bars for enemies should be created.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>DeleteExistingHpGenericBars</name>
			<summary>The function deletes all the enemy health bars excluding those created by CustomBar.CreateEnemyHpBar.</summary>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundPosition</name>
			<summary>Sets the custom bar background sprite position.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the bar's background in screen percent (0-100).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundRotation</name>
			<summary>Sets the custom bar background sprite rotation.</summary>
			<parameters>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the bar's background sprite (0-360).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundScale</name>
			<summary>Sets the custom bar background sprite scale.</summary>
			<parameters>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the bar's background sprite.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundSpriteSlot</name>
			<summary>Sets the custom bar background sprite slot and sprite ID.</summary>
			<parameters>
				<parameter>
					<name>slot</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the bar's background sprite.</description>
				</parameter>
				<parameter>
					<name>id</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the bar's background.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundAlignMode</name>
			<summary>Sets the custom bar background sprite align mode.</summary>
			<parameters>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the bar's background.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundScaleMode</name>
			<summary>Sets the custom bar background sprite scale mode.</summary>
			<parameters>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the bar's background.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBackgroundBlendMode</name>
			<summary>Sets the custom bar background sprite blend mode.</summary>
			<parameters>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the bar's background.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarPosition</name>
			<summary>Sets the custom bar sprite position.</summary>
			<parameters>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the bar in screen percent (0-100).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarRotation</name>
			<summary>Sets the custom bar sprite rotation.</summary>
			<parameters>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the bar's sprite (0-360).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarColor</name>
			<summary>Sets the custom bar sprite color.</summary>
			<parameters>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<description>Color of the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarScale</name>
			<summary>Sets the custom bar sprite scale.</summary>
			<parameters>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the bar's sprite.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarSpriteSlot</name>
			<summary>Sets the custom bar sprite slot and sprite ID.</summary>
			<parameters>
				<parameter>
					<name>slot</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the bar sprite.</description>
				</parameter>
				<parameter>
					<name>id</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarAlignMode</name>
			<summary>Sets the custom bar sprite alignment mode.</summary>
			<parameters>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarScaleMode</name>
			<summary>Sets the custom bar sprite scale mode.</summary>
			<parameters>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomBar</module>
			<name>SetBarBlendMode</name>
			<summary>Sets the custom bar sprite blend mode.</summary>
			<parameters>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the bar.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ImportDiary</name>
			<summary>Imports diary from an external file.</summary>
			<description>There are different types that must be defined. (diary, background, controls, pageNumbers, notification, image, text, narration). Each of the section's arguements are the same as the functions described in this documentation.
 Refer to DiarySetup.lua file for a sample script.</description>
			<parameters>
				<parameter>
					<name>fileName</name>
					<type>string</type>
					<description>Name of file in the script folder without extension to import the diary from.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>Create</name>
			<summary>Creates a diary with extensive configuration options.</summary>
			<description>Parameters:</description>
			<parameters>
				<parameter>
					<name>object</name>
					<type>Objects.ObjID</type>
					<description>The pickup object that will be used to create the diary. The diary can be created using PICKUP_ITEMX (596-611) or DIARY_ITEM (986). Access the diary by selecting the item in the inventory.</description>
				</parameter>
				<parameter>
					<name>objectIdBg</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the diary's sprite.</description>
				</parameter>
				<parameter>
					<name>spriteIdBg</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the diary's sprite.</description>
				</parameter>
				<parameter>
					<name>colorBg</name>
					<type>Color</type>
					<description>Color of diary's sprite.</description>
				</parameter>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the diary background sprite in screen percent (0-100).</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the diary's sprite (0-360).</description>
				</parameter>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the diary background sprite.</description>
				</parameter>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the diary's sprite.</description>
				</parameter>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the diary's sprite.</description>
				</parameter>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the diary's sprite.</description>
				</parameter>
				<parameter>
					<name>alpha</name>
					<type>int</type>
					<description>Alpha value for the diary's sprite (0-255).</description>
				</parameter>
				<parameter>
					<name>pageSound</name>
					<type>Sound</type>
					<description>Sound to play with page turn.</description>
				</parameter>
				<parameter>
					<name>exitSound</name>
					<type>Sound</type>
					<description>Sound to play when existing the diary.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomDiary</type>
					<description></description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>Get</name>
			<summary>The function retrieves a diary by its unique object.</summary>
			<description>This function is useful when you need to access or manipulate a diary that has already been created .</description>
			<parameters>
				<parameter>
					<name>object</name>
					<type>Objects.ObjID</type>
					<description>The pickup object that was used to create the diary (596-611, 986).</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>CustomDiary</type>
					<description>The diary created using the object.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>Delete</name>
			<summary>The function removes a custom diary and its associated data from the system.</summary>
			<description>It ensures that the diary is no longer tracked or accessible in the LevelVars.Engine.Diaries. 
 Please call this once a diary has served its purpose. It helps reduce the savegame size.</description>
			<parameters>
				<parameter>
					<name>object</name>
					<type>Objects.ObjID</type>
					<description>The pickup object that was used to create the diary (596-611, 986).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>Status</name>
			<summary>The function adds the callback to enable diaries in levels.</summary>
			<description>This needs to be added to every level preferably in the LevelFuncs.OnStart.</description>
			<parameters>
				<parameter>
					<name>value</name>
					<type>bool</type>
					<description>True enables the diaries to be activated. False would disable the diaries.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>IsVisible</name>
			<summary>The function checks whether the specified diary is currently visible.</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the diary is visible and `false` if it is not.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ShowDiary</name>
			<summary>The function displays the specified diary.</summary>
			<description>Can be used to call the diary directly using volume or classic triggers.</description>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>The page number at which diary should be opened.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>GetUnlockedPageCount</name>
			<summary>The function returns the number of unlocked pages in the diary.</summary>
			<returns>
				<return>
					<type>int</type>
					<description>Total number of unlocked pages in the diary.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>UnlockPages</name>
			<summary>The function unlocks the specified diary up to the given page number.</summary>
			<description>This value can be overridden to lock or unlock pages as needed.
 A lower number can be set to restrict access to previously unlocked pages.</description>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>The page number up to which the diary should be unlocked.</description>
				</parameter>
				<parameter>
					<name>notification</name>
					<type>bool</type>
					<description>If true, and notification has been defined, a notification icon and sound will be played.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ClearPage</name>
			<summary>The function clears the page for the diary.</summary>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>The page number to be cleared.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>AddTextEntry</name>
			<summary>Adds a text entry to the specified page for the diary.</summary>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>Page number to add the text entry to.</description>
				</parameter>
				<parameter>
					<name>text</name>
					<type>string</type>
					<description>Text entry to be added to the page.</description>
				</parameter>
				<parameter>
					<name>textPos</name>
					<type>Vec2</type>
					<description>X,Y position of the text.</description>
				</parameter>
				<parameter>
					<name>textOptions</name>
					<type>Strings.DisplayStringOption</type>
					<description>Alignment and effects for the text. Note that text is automatically aligned to the left.</description>
				</parameter>
				<parameter>
					<name>textScale</name>
					<type>float</type>
					<description>Scale factor for the text.</description>
				</parameter>
				<parameter>
					<name>textColor</name>
					<type>Color</type>
					<description>Color of the text.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>AddImageEntry</name>
			<summary>Adds an image entry to the specified page for the diary.</summary>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>Page number to add the image entry to.</description>
				</parameter>
				<parameter>
					<name>objectId</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the image entry sprite.</description>
				</parameter>
				<parameter>
					<name>spriteId</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the image entry.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<description>Color of image entry.</description>
				</parameter>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the image entry in screen percent (0-100).</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the image entry (0-360).</description>
				</parameter>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the image entry.</description>
				</parameter>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the image entry.</description>
				</parameter>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the image entry.</description>
				</parameter>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the image entry.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>AddNarration</name>
			<summary>Add a narration track in the voice channel to the page.</summary>
			<description>Track is played with the draw button.</description>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>Page number to add the narration track to.</description>
				</parameter>
				<parameter>
					<name>trackName</name>
					<type>string</type>
					<description>of track (without file extension) to play.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>RemoveNarration</name>
			<summary>Remove the narration track from the page of the specified diary.</summary>
			<parameters>
				<parameter>
					<name>pageIndex</name>
					<type>int</type>
					<description>Page number to remove the narration track from.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>AddBackground</name>
			<summary>Add a background image for the diary.</summary>
			<parameters>
				<parameter>
					<name>objectId</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the diary's background.</description>
				</parameter>
				<parameter>
					<name>spriteId</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the diary's background.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<description>Color of diary's background.</description>
				</parameter>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the diary's background in screen percent (0-100).</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the diary's background sprite (0-360).</description>
				</parameter>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the diary's background.</description>
				</parameter>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the diary's background.</description>
				</parameter>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the diary's background.</description>
				</parameter>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the diary's background.</description>
				</parameter>
				<parameter>
					<name>alpha</name>
					<type>int</type>
					<description>Alpha value for the diary's background (0-255).</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ClearBackground</name>
			<summary>Clears settings for the background for the specified diary.</summary>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>CustomizeNotification</name>
			<summary>Customizes the notification icon and sound for the diary.</summary>
			<parameters>
				<parameter>
					<name>notificationTime</name>
					<type>int</type>
					<description>Time in seconds the notification icon will show on screen.</description>
				</parameter>
				<parameter>
					<name>objectId</name>
					<type>Objects.ObjID</type>
					<description>Object ID for the notification icon.</description>
				</parameter>
				<parameter>
					<name>spriteId</name>
					<type>int</type>
					<description>Sprite ID from the specified object for the notification icon.</description>
				</parameter>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<description>Color of notification icon.</description>
				</parameter>
				<parameter>
					<name>pos</name>
					<type>Vec2</type>
					<description>X,Y position of the notification icon in screen percent (0-100).</description>
				</parameter>
				<parameter>
					<name>rot</name>
					<type>float</type>
					<description>Rotation of the notification icon (0-360).</description>
				</parameter>
				<parameter>
					<name>scale</name>
					<type>Vec2</type>
					<description>X,Y Scaling factor for the notification icon.</description>
				</parameter>
				<parameter>
					<name>alignMode</name>
					<type>View.AlignMode</type>
					<description>Alignment for the notification icon.</description>
				</parameter>
				<parameter>
					<name>scaleMode</name>
					<type>View.ScaleMode</type>
					<description>Scaling for the notification icon.</description>
				</parameter>
				<parameter>
					<name>blendMode</name>
					<type>Effects.BlendID</type>
					<description>Blending modes for the notification icon.</description>
				</parameter>
				<parameter>
					<name>notificationSound</name>
					<type>Sound</type>
					<description>Sound to play with notification icon.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ClearNotification</name>
			<summary>Clears settings for the notification system for the specified diary.</summary>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>CustomizePageNumbers</name>
			<summary>Customizes the page numbers for the diary.</summary>
			<parameters>
				<parameter>
					<name>pageNoType</name>
					<type>int</type>
					<description>Specifies the format for page numbers (1 or 2). 1: Displays only the current page number. 2: Formats the page number as: [Prefix][CurrentPage][Separator][UnlockedPages].</description>
				</parameter>
				<parameter>
					<name>prefix</name>
					<type>string</type>
					<description>Prefix to be added for type 2 of page numbers.</description>
				</parameter>
				<parameter>
					<name>separator</name>
					<type>string</type>
					<description>Separator to be added for type 2 of page numbers.</description>
				</parameter>
				<parameter>
					<name>textPos</name>
					<type>Vec2</type>
					<description>X,Y position of the page numbers.</description>
				</parameter>
				<parameter>
					<name>textOptions</name>
					<type>Strings.DisplayStringOption</type>
					<description>Alignment and effects for the text. Note that text is automatically aligned to the left.</description>
				</parameter>
				<parameter>
					<name>textScale</name>
					<type>float</type>
					<description>Scale factor for the page numbers.</description>
				</parameter>
				<parameter>
					<name>textColor</name>
					<type>Color</type>
					<description>Color of the page numbers.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ClearPageNumbers</name>
			<summary>Clears settings for the page numbers for the specified diary.</summary>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>CustomizeControls</name>
			<summary>Customizes the controls text for the diary.</summary>
			<parameters>
				<parameter>
					<name>textPos</name>
					<type>Vec2</type>
					<description>X,Y position of the controls text.</description>
				</parameter>
				<parameter>
					<name>textOptions</name>
					<type>Strings.DisplayStringOption</type>
					<description>Alignment and effects for the text. Note that text is automatically aligned to the left.</description>
				</parameter>
				<parameter>
					<name>textScale</name>
					<type>float</type>
					<description>Scale factor for the controls.</description>
				</parameter>
				<parameter>
					<name>textColor</name>
					<type>Color</type>
					<description>Color of the page controls.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>CustomizeControlsText</name>
			<summary>Customizes the display text for controls for specified diary.</summary>
			<parameters>
				<parameter>
					<name>string1</name>
					<type>string</type>
					<description>Text for Space key controls text.</description>
				</parameter>
				<parameter>
					<name>string2</name>
					<type>string</type>
					<description>Text for Left key controls text.</description>
				</parameter>
				<parameter>
					<name>string3</name>
					<type>string</type>
					<description>Text for Right key controls text.</description>
				</parameter>
				<parameter>
					<name>string4</name>
					<type>string</type>
					<description>Text for Esc key controls text.</description>
				</parameter>
				<parameter>
					<name>separator</name>
					<type>string</type>
					<description>Text for separator between controls text.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>CustomDiary</module>
			<name>ClearControls</name>
			<summary>Clears settings for the specified diary's controls text.</summary>
		</function>
		<function>
			<module>EventSequence</module>
			<name>Create</name>
			<summary>Create (but do not start) a new event sequence.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>A label to give the sequence; used to retrieve the timer later as well as internally by TEN.</description>
				</parameter>
				<parameter>
					<name>loop</name>
					<type>bool</type>
					<description>If `true`, the sequence will start again from its first timer once its final function has been called.</description>
				</parameter>
				<parameter>
					<name>timerFormat</name>
					<type>?table|bool</type>
					<description>Same as in &lt;a href="Timer.html#timerFormat"&gt;Timer format&lt;/a&gt; for Timer. This is mainly for debugging. __This will not work properly if another sequence or timer is showing a countdown.__</description>
				</parameter>
				<parameter>
					<name>...</name>
					<type>...</type>
					<description>A variable number of pairs of arguments, each pair consisting of:&lt;br&gt;
 - a time in seconds (positive values are accepted and with only 1 tenth of a second [__0.1__]),&lt;br&gt;
 - followed by the function defined in the *LevelFuncs* table to call once the time has elapsed,&lt;br&gt;
 - followed by another duration in seconds, another function name, etc.

 You can specify a function either by its name, or by a *table* __{ }__ with the function name as the first member, followed by its arguments (see example).</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>EventSequence</type>
					<description>The inactive sequence.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>EventSequence</module>
			<name>Get</name>
			<summary>Get an event sequence by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the sequence when it was created.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>EventSequence|nil</type>
					<description>The sequence if it exists, `nil` if it does not exist.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>EventSequence</module>
			<name>IfExists</name>
			<summary>Check if an event sequence exists.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the event sequence when it was created.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the event sequence exists, `false` if it does not exist.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>EventSequence</module>
			<name>Delete</name>
			<summary>Delete an event sequence.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the event sequence when it was created.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>EventSequence</module>
			<caller>EventSequence</caller>
			<name>Start</name>
			<summary>Begin or unpause a sequence.</summary>
			<description>If showing the remaining time on-screen, its color will be set to white.</description>
		</function>
		<function>
			<module>EventSequence</module>
			<caller>EventSequence</caller>
			<name>SetPaused</name>
			<summary>Pause or unpause the sequence.</summary>
			<description>If showing the remaining time on-screen, its color will be set to yellow (paused) or white (unpaused).</description>
			<parameters>
				<parameter>
					<name>p</name>
					<type>bool</type>
					<description>If `true`, the sequence will be paused; if `false`, it will be unpaused.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>EventSequence</module>
			<caller>EventSequence</caller>
			<name>Stop</name>
			<summary>Stop the sequence.</summary>
		</function>
		<function>
			<module>EventSequence</module>
			<caller>EventSequence</caller>
			<name>IsPaused</name>
			<summary>Returns whether the sequence is paused.</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` If the timer is paused, `false` if otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>EventSequence</module>
			<caller>EventSequence</caller>
			<name>IsActive</name>
			<summary>Returns whether the sequence is active.</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` If the sequence is active, `false` if otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<name>Create</name>
			<summary>Create (but do not start) a new timer.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>A label to give this timer; used to retrieve the timer later.&lt;br&gt;__Do not give your timers a name beginning with __TEN, as this is reserved for timers used by other internal libaries__.</description>
				</parameter>
				<parameter>
					<name>totalTime</name>
					<type>float</type>
					<description>Duration of the timer, in seconds.&lt;br&gt;Values with only 1 tenth of a second (0.1) are accepted, example: 1.5 - 6.0 - 9.9 - 123.6. No negative values allowed!</description>
				</parameter>
				<parameter>
					<name>loop</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, the timer will start again immediately after the time has elapsed.</description>
				</parameter>
				<parameter>
					<name>timerFormat</name>
					<type>?table|bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>Sets the remaining time display. See &lt;a href="#timerFormat"&gt;Timer format&lt;/a&gt;.</description>
				</parameter>
				<parameter>
					<name>func</name>
					<type>LevelFunc</type>
					<optional>true</optional>
					<defaultValue>nil</defaultValue>
					<description>The function defined in the *LevelFuncs* table to call when the time is up</description>
				</parameter>
				<parameter>
					<name>...</name>
					<type>...</type>
					<optional>true</optional>
					<description>a variable number of arguments with which the above function will be called</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>Timer</type>
					<description>The timer in its paused state</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<name>Delete</name>
			<summary>Delete a timer.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the timer when it was created</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<name>Get</name>
			<summary>Get a timer by its name.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the timer when it was created</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>?Timer|nil</type>
					<description>The timer or nil if timer does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<name>IfExists</name>
			<summary>Check if a timer exists.</summary>
			<parameters>
				<parameter>
					<name>name</name>
					<type>string</type>
					<description>The label that was given to the timer when it was created</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if the timer exists, false if it does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>Start</name>
			<summary>Begin or unpause a timer.</summary>
			<description>If showing the remaining time on-screen, its default color will be set to white.</description>
			<parameters>
				<parameter>
					<name>reset</name>
					<type>bool</type>
					<optional>true</optional>
					<defaultValue>false</defaultValue>
					<description>If true, the timer will restart from the beginning (total time)</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>Stop</name>
			<summary>Stop the timer.</summary>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetPaused</name>
			<summary>Pause or unpause the timer.</summary>
			<description>If showing the remaining time on-screen, its default color will be set to yellow (paused) or white (unpaused).</description>
			<parameters>
				<parameter>
					<name>p</name>
					<type>bool</type>
					<description>If true, the timer will be paused; if false, it would be unpaused</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetRemainingTime</name>
			<summary>Get the remaining time of a timer in game frames.</summary>
			<returns>
				<return>
					<type>Time</type>
					<description>The remaining time in game frames of timer.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetRemainingTimeInSeconds</name>
			<summary>Get the remaining time of a timer in seconds.</summary>
			<returns>
				<return>
					<type>float</type>
					<description>The remaining time in seconds of timer.&lt;br&gt;Seconds have an accuracy of 0.1 tenths. Example: 1.5 - 6.0 - 9.9 - 123.6</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetRemainingTimeFormatted</name>
			<summary>Get the formatted remaining time of a timer.</summary>
			<parameters>
				<parameter>
					<name>timerFormat</name>
					<type>?table|bool</type>
					<description>Sets the remaining time display. See &lt;a href="#timerFormat"&gt;Timer format&lt;/a&gt;.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>string</type>
					<description>The formatted remaining time.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetRemainingTime</name>
			<summary>Set the remaining time of a timer.</summary>
			<parameters>
				<parameter>
					<name>remainingTime</name>
					<type>float</type>
					<description>The new time remaining for the timer in seconds.&lt;br&gt;
 Values with only 1 tenth of a second (0.1) are accepted, example: 1.5 - 6.0 - 9.9 - 123.6. No negative values allowed!</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>IfRemainingTimeIs</name>
			<summary>Compares the remaining time with a value (in seconds).</summary>
			<description>It's recommended to use the *IfRemainingTimeIs()* method to have error-free comparisons</description>
			<parameters>
				<parameter>
					<name>operator</name>
					<type>int</type>
					<description>The type of comparison.&lt;br&gt;
 0 : If the remaining time is equal to the value&lt;br&gt;
 1 : If the remaining time is different from the value&lt;br&gt;
 2 : If the remaining time is less the value&lt;br&gt;
 3 : If the remaining time is less or equal to the value&lt;br&gt;
 4 : If the remaining time is greater the value&lt;br&gt;
 5 : If the remaining time is greater or equal to the value</description>
				</parameter>
				<parameter>
					<name>seconds</name>
					<type>float</type>
					<description>The value in seconds to compare.&lt;br&gt;
 Values with only 1 tenth of a second (0.1) are accepted, example: 1.5 - 6.0 - 9.9 - 123.6. No negative values allowed!&lt;br&gt;
 Please note: to have continuous control, the remaining time must be controlled within the *OnLoop* event and only when the Timer is active @{Timer.IsActive}.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if comparison is true, false if comparison is false or timer does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetTotalTime</name>
			<summary>Get the total time of a timer in game frames.</summary>
			<description>This is the amount of time the timer will start with, as well as when starting a new loop.</description>
			<returns>
				<return>
					<type>Time</type>
					<description>The timer's total time in game frames.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetTotalTimeInSeconds</name>
			<summary>Get the total time of a timer in seconds.</summary>
			<description>This is the amount of time the timer will start with, as well as when starting a new loop</description>
			<returns>
				<return>
					<type>float</type>
					<description>The timer's total time in seconds.&lt;br&gt;
 Seconds have an accuracy of 0.1 tenths. Example: 1.5 - 6.0 - 9.9 - 123.6</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetTotalTimeFormatted</name>
			<summary>Get the formatted total time of a timer.</summary>
			<description>This is the amount of time the timer will start with, as well as when starting a new loop</description>
			<parameters>
				<parameter>
					<name>timerFormat</name>
					<type>?table|bool</type>
					<description>Sets the remaining time display. See &lt;a href="#timerFormat"&gt;Timer format&lt;/a&gt;.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>string</type>
					<description>The formatted total time.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetTotalTime</name>
			<summary>Set the total time for a timer.</summary>
			<parameters>
				<parameter>
					<name>totalTime</name>
					<type>float</type>
					<description>Timer's new total time in seconds.&lt;br&gt;
 Values with only 1 tenth of a second (0.1) are accepted, example: 1.5 - 6.0 - 9.9 - 123.6. No negative values allowed!</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>IfTotalTimeIs</name>
			<summary>Compares the total time with a value (in seconds).</summary>
			<description>It's recommended to use the IfTotalTimeIs() method to have error-free comparisons</description>
			<parameters>
				<parameter>
					<name>operator</name>
					<type>int</type>
					<description>The type of comparison.&lt;br&gt;
 0 : If the total time is equal to the value&lt;br&gt;
 1 : If the total time is different from the value&lt;br&gt;
 2 : If the total time is less the value&lt;br&gt;
 3 : If the total time is less or equal to the value&lt;br&gt;
 4 : If the total time is greater the value&lt;br&gt;
 5 : If the total time is greater or equal to the value</description>
				</parameter>
				<parameter>
					<name>seconds</name>
					<type>float</type>
					<description>the value in seconds to compare.&lt;br&gt;
 Values with only 1 tenth of a second (0.1) are accepted, example: 1.5 - 6.0 - 9.9 - 123.6. No negative values allowed!</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>true if comparison is true, false if comparison is false or timer does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetLooping</name>
			<summary>Set whether or not the timer loops.</summary>
			<parameters>
				<parameter>
					<name>looping</name>
					<type>bool</type>
					<description>Whether or not the timer loops</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetFunction</name>
			<summary>Assign a new function and its arguments to the timer.</summary>
			<description>It will be called when the time is up.</description>
			<parameters>
				<parameter>
					<name>func</name>
					<type>LevelFunc</type>
					<optional>true</optional>
					<defaultValue>nil</defaultValue>
					<description>The function defined in the *LevelFuncs* table to call when the time is up</description>
				</parameter>
				<parameter>
					<name>...</name>
					<type>...</type>
					<optional>true</optional>
					<description>A variable number of arguments with which the above function will be called</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetPosition</name>
			<summary>Set the on-screen position in percent of the displayed timer when active.</summary>
			<description>The coordinate (0,0) is in the upper left-hand corner.</description>
			<parameters>
				<parameter>
					<name>x</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>50</defaultValue>
					<description>The x-coordinate in percent</description>
				</parameter>
				<parameter>
					<name>y</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>90</defaultValue>
					<description>The y-coordinate in percent</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetPosition</name>
			<summary>Get the on-screen position in percent of the displayed timer when active.</summary>
			<returns>
				<return>
					<type>Vec2</type>
					<description>The position of the timer in percent</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetScale</name>
			<summary>Set the scale of the displayed timer when it is active.</summary>
			<parameters>
				<parameter>
					<name>scale</name>
					<type>float</type>
					<optional>true</optional>
					<defaultValue>1.0</defaultValue>
					<description>The new scale value</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>GetScale</name>
			<summary>Get the scale of the displayed timer when it is active.</summary>
			<returns>
				<return>
					<type>float</type>
					<description>The scale of the timer</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetPausedColor</name>
			<summary>Set the paused color of the displayed timer when it is active.</summary>
			<parameters>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>TEN.Color(255, 255, 0, 255)</defaultValue>
					<description>Timer's new paused color.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetUnpausedColor</name>
			<summary>Set the color of the displayed timer when it is active.</summary>
			<parameters>
				<parameter>
					<name>color</name>
					<type>Color</type>
					<optional>true</optional>
					<defaultValue>TEN.Color(255, 255, 255, 255)</defaultValue>
					<description>Timer's new color.</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>SetTextOption</name>
			<summary>Set text options for a timer.</summary>
			<parameters>
				<parameter>
					<name>optionsTable</name>
					<type>table</type>
					<optional>true</optional>
					<defaultValue>{TEN.Strings.DisplayStringOption.CENTER, TEN.Strings.DisplayStringOption.SHADOW}</defaultValue>
					<description>Table containing timer's new text options. See @{Strings.DisplayStringOption}&lt;br&gt;</description>
				</parameter>
			</parameters>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>IsPaused</name>
			<summary>Get whether or not the timer is paused</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>true if the timer is paused, false if it is not paused or timer does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>IsActive</name>
			<summary>Get whether or not the timer is active</summary>
			<returns>
				<return>
					<type>bool</type>
					<description>true if the timer is active, false if it is not active or timer does not exist</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Timer</module>
			<caller>Timer</caller>
			<name>IsTicking</name>
			<summary>Checks if the timer has ticked (every 0.1 seconds).</summary>
			<description>Returns `true` every 0.1 seconds when the timer is active and not paused.&lt;br&gt;
 TEN's engine runs on a 0.03-second internal tick, while this timer ticks every 0.1 seconds.&lt;br&gt;
 Use `IsTicking()` to ensure consistency and avoid unexpected behavior — for example, inside the `OnLoop` event.</description>
			<returns>
				<return>
					<type>boolean</type>
					<description>`true` if the timer ticked during this frame, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsNumber</name>
			<summary>Check if the variable is a number.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a number, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsString</name>
			<summary>Check if the variable is a string.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a string, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsBoolean</name>
			<summary>Check if the variable is a boolean.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a boolean, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsTable</name>
			<summary>Check if the variable is a table.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a table, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsNull</name>
			<summary>Check if the variable has a null value.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a null, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsFunction</name>
			<summary>Check if the variable is a function.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a function, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsColor</name>
			<summary>Check if the variable is a @{Color}.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a Color, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsRotation</name>
			<summary>Check if the variable is a @{Rotation}.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a Rotation, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsVec2</name>
			<summary>Check if the variable is a @{Vec2}.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a Vec2, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsVec3</name>
			<summary>Check if the variable is a @{Vec3}.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`rue` if the variable is a Vec3, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsTime</name>
			<summary>Check if the variable is a @{Time} object.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a Time object, `false` otherwise.</description>
				</return>
			</returns>
		</function>
		<function>
			<module>Type</module>
			<name>IsLevelFunc</name>
			<summary>Check if the variable is a LevelFunc.</summary>
			<parameters>
				<parameter>
					<name>variable</name>
					<type>variable</type>
					<description>Variable to be checked.</description>
				</parameter>
			</parameters>
			<returns>
				<return>
					<type>bool</type>
					<description>`true` if the variable is a LevelFunc, `false` otherwise.</description>
				</return>
			</returns>
		</function>
	</functions>
	<classes>
		<class>
			<name>Collision.Probe</name>
			<type>tenclass</type>
			<summary>Represents a collision probe in the game world.</summary>
			<description>Provides collision information from a reference world position.</description>
			<members>
				<method>
					<name>Probe</name>
					<summary>Create a Probe at a specified world position in a room.</summary>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>World position.</description>
						</parameter>
						<parameter>
							<name>roomNumber</name>
							<type>int</type>
							<optional>true</optional>
							<description>Room number. Must be used if probing a position in an overlapping room.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Probe</type>
							<description>A new Probe.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe</name>
					<summary>Create a Probe that casts from an origin world position in a room in a given direction for a specified distance.</summary>
					<description>Required to correctly traverse between rooms.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>Origin world position to cast from.</description>
						</parameter>
						<parameter>
							<name>roomNumber</name>
							<type>int</type>
							<description>Origin room number.</description>
						</parameter>
						<parameter>
							<name>dir</name>
							<type>Vec3</type>
							<description>Direction in which to cast.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance to cast.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Probe</type>
							<description>A new Probe.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe</name>
					<summary>Create a Probe that casts from an origin world position in a room in the direction of a given rotation for a specified distance.</summary>
					<description>Required to correctly traverse between rooms.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>Origin world position to cast from.</description>
						</parameter>
						<parameter>
							<name>roomNumber</name>
							<type>int</type>
							<description>Origin room number.</description>
						</parameter>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Rotation defining the direction in which to cast.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance to cast.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Probe</type>
							<description>A new Probe.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe</name>
					<summary>Create a Probe that casts from an origin world position, where a given relative offset is rotated according to a given rotation.</summary>
					<description>Required to correctly traverse between rooms.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>Origin world position to cast from.</description>
						</parameter>
						<parameter>
							<name>roomNumber</name>
							<type>int</type>
							<description>Origin room number.</description>
						</parameter>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Rotation according to which the input relative offset is rotated.</description>
						</parameter>
						<parameter>
							<name>relOffset</name>
							<type>Vec3</type>
							<description>Relative offset to cast.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Probe</type>
							<description>A new Probe.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetPosition</name>
					<summary>Get the world position of this Probe.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>World position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetRoom</name>
					<summary>Get the Room object of this Probe.</summary>
					<returns>
						<return>
							<type>Room</type>
							<description>Room object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetRoomName</name>
					<summary>Get the room name of this Probe.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>Room name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetRoomNumber</name>
					<summary>Get the room number of this Probe.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Room number.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetFloorHeight</name>
					<summary>Get the floor height at this Probe.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Floor height. __nil: no floor exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetCeilingHeight</name>
					<summary>Get the ceiling height at this Probe.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Ceiling height. __nil: no ceiling exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetWaterSurfaceHeight</name>
					<summary>Get the water surface height at this Probe.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Water surface height. __nil: no water surface exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetFloorNormal</name>
					<summary>Get the normal of the floor at this Probe.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Floor normal. __nil: no floor exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetCeilingNormal</name>
					<summary>Get the normal of the ceiling at this Probe.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Ceiling normal. __nil: no ceiling exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetFloorMaterialType</name>
					<summary>Get the material type of the floor at this Probe.</summary>
					<returns>
						<return>
							<type>Collision.MaterialType</type>
							<description>Floor material type. __nil: no floor exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:GetCeilingMaterialType</name>
					<summary>Get the material type of the ceiling at this Probe.</summary>
					<returns>
						<return>
							<type>Collision.MaterialType</type>
							<description>Ceiling material type. __nil: no ceiling exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsSteepFloor</name>
					<summary>Check if the floor at this Probe is steep.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Steep floor status. __true: is a steep floor, false: isn't a steep floor, nil: no floor exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsSteepCeiling</name>
					<summary>Check if the ceiling at this Probe is steep.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Steep ceiling status. __true: is a steep ceiling, false: isn't a steep ceiling, nil: no ceiling exists__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsWall</name>
					<summary>Check if the Probe is inside a wall.</summary>
					<description>Can be used to determine if a wall and ceiling exist.</description>
					<returns>
						<return>
							<type>bool</type>
							<description>Wall status. __true: is a wall, false: isn't a wall__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsInsideSolidGeometry</name>
					<summary>Check if this Probe is inside solid geometry (below a floor, above a ceiling, inside a bridge, or inside a wall).</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Inside geometry status. __true: is inside, false: is outside__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsClimbableWall</name>
					<summary>Check if there is a climbable wall in the given heading angle at this Probe.</summary>
					<parameters>
						<parameter>
							<name>headingAngle</name>
							<type>float</type>
							<description>Heading angle at which to check for a climbable wall.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Climbable wall status. __true: is climbable wall, false: isn't climbable__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsMonkeySwing</name>
					<summary>Check if there is a monkey swing sector at this Probe.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Monkey swing sector status. __true: is a monkey swing, false: isn't a monkey swing__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:IsDeath</name>
					<summary>Check if there is a death sector at this Probe.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Death sector status. __true: is a death sector, false: isn't a death sector__</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Probe:Preview</name>
					<summary>Preview this Probe in the Collision Stats debug page.</summary>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.Fog</name>
			<type>tenprimitive</type>
			<summary>Represesnts distance fog.</summary>
			<description>To be used with @{Flow.Level.fog} property.</description>
			<members>
				<field>
					<name>color</name>
					<summary>(@{Color}) RGB fog color.</summary>
				</field>
				<field>
					<name>minDistance</name>
					<summary>(float) Minimum distance.</summary>
					<description>This is the distance at which the fog starts (in sectors).</description>
				</field>
				<field>
					<name>maxDistance</name>
					<summary>(float) Maximum distance.</summary>
					<description>This is the distance at which the fog reaches the maximum strength (in sectors).</description>
				</field>
				<method>
					<name>Fog</name>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>RGB color</description>
						</parameter>
						<parameter>
							<name>min</name>
							<type>int</type>
							<description>Distance at which fog starts (in sectors).</description>
						</parameter>
						<parameter>
							<name>max</name>
							<type>int</type>
							<description>Distance at which fog reaches the maximum strength (in sectors).</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Fog</type>
							<description>A fog object.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.Horizon</name>
			<type>tenprimitive</type>
			<summary>Represents a horizon.</summary>
			<description>To be used with @{Flow.Level.horizon1} and @{Flow.Level.horizon2} properties.</description>
			<members>
				<field>
					<name>enabled</name>
					<summary>(bool) Horizon enabled state.</summary>
					<description>If set to true, horizon will be visible.</description>
				</field>
				<field>
					<name>objectID</name>
					<summary>(@{Objects.ObjID}) Horizon object ID.</summary>
				</field>
				<field>
					<name>position</name>
					<summary>(@{Vec3}) Horizon position.</summary>
					<description>Specifies an offset from the camera origin.</description>
				</field>
				<field>
					<name>rotation</name>
					<summary>(@{Rotation}) Horizon rotation.</summary>
					<description>Specifies horizon rotation.</description>
				</field>
				<field>
					<name>transparency</name>
					<summary>(float) Horizon transparency.</summary>
					<description>Specifies horizon transparency on a range from 0 to 1.</description>
				</field>
				<method>
					<name>Horizon</name>
					<summary>Create a horizon object.</summary>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>Object ID for the horizon to use.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Horizon</type>
							<description>A new Horizon object.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.InventoryItem</name>
			<type>tenprimitive</type>
			<summary>Represents the properties of an object as it appears in the inventory.</summary>
			<description>To be used in @{Flow.Level.objects} list.</description>
			<members>
				<method>
					<name>InventoryItem</name>
					<summary>Create an InventoryItem.</summary>
					<parameters>
						<parameter>
							<name>nameKey</name>
							<type>string</type>
							<description>key for the item's (localised) name. Corresponds to an entry in strings.lua.</description>
						</parameter>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>object ID of the inventory object to change</description>
						</parameter>
						<parameter>
							<name>yOffset</name>
							<type>float</type>
							<description>y-axis offset (positive values move the item down).&lt;br&gt;
A value of about 100 will cause the item to display directly below its usual position.</description>
						</parameter>
						<parameter>
							<name>scale</name>
							<type>float</type>
							<description>item size (1 being standard size).&lt;br&gt;
A value of 0.5 will cause the item to render at half the size,
and a value of 2 will cause the item to render at twice the size.</description>
						</parameter>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>rotation around x, y, and z axes.</description>
						</parameter>
						<parameter>
							<name>axis</name>
							<type>RotationAxis</type>
							<description>Axis to rotate around when the item is observed at in the inventory.&lt;br&gt;
Note that this is entirely separate from the `rot` field described above.
Must one of the following:
	X
	Y
	Z
e.g. `myItem.rotAxisWhenCurrent = RotationAxis.X`</description>
						</parameter>
						<parameter>
							<name>meshBits</name>
							<type>int</type>
							<description>_Not currently implemented_ (will have no effect regardless of what you set it to).</description>
						</parameter>
						<parameter>
							<name>action</name>
							<type>Flow.ItemAction</type>
							<description>Item action or set of actions to assign. Item actions can be combined, for example: `ItemAction.USE | ItemAction.SAVE`.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>InventoryItem</type>
							<description>an InventoryItem.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.LensFlare</name>
			<type>tenprimitive</type>
			<summary>Represents a global lens flare (not to be confused with the lens flare object).</summary>
			<description>To be used with @{Flow.Level.lensFlare} property.</description>
			<members>
				<field>
					<name>enabled</name>
					<summary>(bool) Lens flare enabled state.</summary>
					<description>If set to true, lens flare will be visible.</description>
				</field>
				<field>
					<name>spriteID</name>
					<summary>(int) Lens flare's sun sprite ID in DEFAULT_SPRITES sequence.</summary>
				</field>
				<field>
					<name>pitch</name>
					<summary>(float) Lens flare's pitch (vertical) angle in degrees.</summary>
				</field>
				<field>
					<name>yaw</name>
					<summary>(float) Lens flare's yaw (horizontal) angle in degrees.</summary>
				</field>
				<field>
					<name>color</name>
					<summary>(@{Color}) Lens flare's color.</summary>
				</field>
				<method>
					<name>LensFlare</name>
					<summary>Create a LensFlare object.</summary>
					<parameters>
						<parameter>
							<name>pitch</name>
							<type>float</type>
							<description>Pitch angle in degrees.</description>
						</parameter>
						<parameter>
							<name>yaw</name>
							<type>float</type>
							<description>Yaw angle in degrees.</description>
						</parameter>
						<parameter>
							<name>color</name>
							<type>@{Color}</type>
							<description>Color of the lensflare.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>LensFlare</type>
							<description>A new LensFlare object.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.Level</name>
			<type>tenclass</type>
			<summary>Stores level metadata.</summary>
			<description>These are things things which aren't present in the compiled level file itself.</description>
			<members>
				<method>
					<name>Level</name>
					<summary>Make a new Level object.</summary>
					<returns>
						<return>
							<type>Level</type>
							<description>a Level object.</description>
						</return>
					</returns>
				</method>
				<field>
					<name>nameKey</name>
					<summary>(string) String key for the level's name.</summary>
					<description>Corresponds to an entry in strings.lua.</description>
				</field>
				<field>
					<name>scriptFile</name>
					<summary>(string) Level-specific Lua script file.</summary>
					<description>Path of the Lua file holding the level's logic script, relative to the location of the Tomb Engine executable.</description>
				</field>
				<field>
					<name>levelFile</name>
					<summary>(string) Compiled file path.</summary>
					<description>This path is relative to the location of the TombEngine executable.</description>
				</field>
				<field>
					<name>loadScreenFile</name>
					<summary>(string) Load screen image.</summary>
					<description>Path of the level's load screen file (.png or .jpg), relative to the location of the Tomb Engine executable.</description>
				</field>
				<field>
					<name>ambientTrack</name>
					<summary>(string) Initial ambient sound track to play.</summary>
					<description>This is the filename of the track __without__ the .wav extension.</description>
				</field>
				<field>
					<name>layer1</name>
					<summary>(@{Flow.SkyLayer}) Primary sky cloud layer.</summary>
				</field>
				<field>
					<name>layer2</name>
					<summary>(@{Flow.SkyLayer}) Secondary sky cloud layer.</summary>
				</field>
				<field>
					<name>horizon1</name>
					<summary>(@{Flow.Horizon}) Primary horizon object.</summary>
				</field>
				<field>
					<name>horizon2</name>
					<summary>(@{Flow.Horizon}) Secondary horizon object.</summary>
				</field>
				<field>
					<name>starfield</name>
					<summary>(@{Flow.Starfield}) Starfield in the sky.</summary>
				</field>
				<field>
					<name>lensFlare</name>
					<summary>(@{Flow.LensFlare}) Global lens flare.</summary>
				</field>
				<field>
					<name>fog</name>
					<summary>(@{Flow.Fog}) Global distance fog, with specified RGB color and distance.</summary>
					<description>If not provided, distance fog will not be visible.</description>
				</field>
				<field>
					<name>storm</name>
					<summary>(bool) Enable flickering lightning in the sky.</summary>
					<description>Equivalent to classic TRLE's lightning setting, as in the TRC Ireland levels or TR4 Cairo levels.</description>
				</field>
				<field>
					<name>weather</name>
					<summary>(WeatherType) Choose weather effect.</summary>
					<description>Must be one of the values `WeatherType.None`, `WeatherType.Rain`, or `WeatherType.Snow`.</description>
				</field>
				<field>
					<name>weatherStrength</name>
					<summary>(float) Choose weather strength.</summary>
					<description>Must be value between `0.1` and `1.0`.</description>
				</field>
				<field>
					<name>weatherClustering</name>
					<summary>(bool) Choose if weather should be clustered or not.</summary>
					<description>You can set it to `false` globally or in specific regions of your level where clusters can slip through paper-thin walls.</description>
				</field>
				<field>
					<name>laraType</name>
					<summary>(LaraType) Appearance of Lara.</summary>
					<description>Must be either `LaraType.Normal` or `LaraType.Young`.
E.g. `myLevel.laraType = LaraType.Young` will make Lara appear as young (with two ponytails rendered).
This setting does not affect ability to use weapons or flares.</description>
				</field>
				<field>
					<name>rumble</name>
					<summary>(bool) Enable occasional screen shake effect.</summary>
					<description>As seen in TRC's Sinking Submarine.</description>
				</field>
				<field>
					<name>farView</name>
					<summary>(int) The maximum draw distance for level.</summary>
					<description>Given in sectors (blocks). Must be at least 4.</description>
				</field>
				<field>
					<name>resetHub</name>
					<summary>(bool) Reset hub data.</summary>
					<description>Resets the state for all previous levels, including items, flipmaps and statistics.</description>
				</field>
				<field>
					<name>objects</name>
					<summary>(@{Flow.InventoryItem}[]) A table of inventory object layout overrides.</summary>
				</field>
				<field>
					<name>secrets</name>
					<summary>(short) Set total secret count for current level.</summary>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.SkyLayer</name>
			<type>tenprimitive</type>
			<summary>Describes a layer of moving clouds.</summary>
			<description>To be used with @{Flow.Level.layer1} and @{Flow.Level.layer2} properties.</description>
			<members>
				<field>
					<name>color</name>
					<summary>(@{Color}) RGB sky color.</summary>
				</field>
				<field>
					<name>speed</name>
					<summary>(int) Cloud speed.</summary>
					<description>Values can be between [-32768, 32767], with positive numbers resulting in a sky that scrolls from
		west to east, and negative numbers resulting in one that travels east to west.

		Please note that speeds outside of the range of about [-1000, 1000] will cause the
		sky to scroll so fast that it will no longer appear as a coherent stream of clouds.
		Less is more. City of The Dead, for example, uses a speed value of 16.</description>
				</field>
				<method>
					<name>SkyLayer</name>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>RGB color.</description>
						</parameter>
						<parameter>
							<name>speed</name>
							<type>int</type>
							<description>Cloud speed.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>SkyLayer</type>
							<description>A SkyLayer object.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.Starfield</name>
			<type>tenprimitive</type>
			<summary>Represents a star field in the sky.</summary>
			<description>To be used with @{Flow.Level.starfield} property.</description>
			<members>
				<field>
					<name>starCount</name>
					<summary>(int) Amount of visible stars.</summary>
				</field>
				<field>
					<name>meteorCount</name>
					<summary>(int) Amount of visible meteors.</summary>
				</field>
				<field>
					<name>meteorSpawnDensity</name>
					<summary>(int) Meteor spawn density.</summary>
				</field>
				<field>
					<name>meteorVelocity</name>
					<summary>(int) Meteor velocity.</summary>
				</field>
				<method>
					<name>Starfield</name>
					<summary>Create a starfield object with only stars.</summary>
					<parameters>
						<parameter>
							<name>starCount</name>
							<type>int</type>
							<description>Star count.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Starfield</type>
							<description>A new Starfield object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Starfield</name>
					<summary>Create a starfield object with stars and meteors.</summary>
					<parameters>
						<parameter>
							<name>starCount</name>
							<type>int</type>
							<description>Star count. __Max: 6000__</description>
						</parameter>
						<parameter>
							<name>meteorCount</name>
							<type>int</type>
							<description>Meteor count. __Max: 100__</description>
						</parameter>
						<parameter>
							<name>meteorSpawnDensity</name>
							<type>int</type>
							<description>Meteor spawn density.</description>
						</parameter>
						<parameter>
							<name>meteorVel</name>
							<type>int</type>
							<description>Meteor velocity.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Starfield</type>
							<description>A new Starfield object.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.Statistics</name>
			<type>tenclass</type>
			<summary>A set of gameplay statistics.</summary>
			<description>Can be accessed using @{Flow.GetStatistics} and @{Flow.SetStatistics} functions.</description>
			<members>
				<field>
					<name>ammoHits</name>
					<summary>Ammo hits.</summary>
				</field>
				<field>
					<name>ammoUsed</name>
					<summary>Ammo used.</summary>
				</field>
				<field>
					<name>distanceTraveled</name>
					<summary>Distance traveled.</summary>
				</field>
				<field>
					<name>healthPacksUsed</name>
					<summary>Health packs used.</summary>
				</field>
				<field>
					<name>damageTaken</name>
					<summary>Damage taken.</summary>
				</field>
				<field>
					<name>kills</name>
					<summary>Kills.</summary>
				</field>
				<field>
					<name>pickups</name>
					<summary>Pickups.</summary>
				</field>
				<field>
					<name>secrets</name>
					<summary>Secrets.</summary>
				</field>
				<field>
					<name>timeTaken</name>
					<summary>Time taken.</summary>
				</field>
			</members>
		</class>
		<class>
			<name>Objects.AIObject</name>
			<type>tenclass</type>
			<summary>AI object</summary>
			<members>
				<method>
					<name>AIObject:GetPosition</name>
					<summary>Get the object's position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>A copy of the object's position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:SetPosition</name>
					<summary>Set the object's position.</summary>
					<parameters>
						<parameter>
							<name>position</name>
							<type>Vec3</type>
							<description>The new position of the object.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>AIObject:GetRotationY</name>
					<summary>Get the object's Y-axis rotation.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>The object's Y-axis rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:SetRotationY</name>
					<summary>Set the object's Y-axis rotation.</summary>
					<parameters>
						<parameter>
							<name>rotation</name>
							<type>int</type>
							<description>The object's new Y-axis rotation.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>AIObject:GetName</name>
					<summary>Get the object's unique string identifier.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>The object's name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:SetName</name>
					<summary>Set the object's unique string identifier.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>The object's new name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>AIObject:GetRoom</name>
					<summary>Get the current room of the object.</summary>
					<returns>
						<return>
							<type>Objects.Room</type>
							<description>current room of the object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:GetRoomNumber</name>
					<summary>Get the current room number of the object.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Number representing the current room of the object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:SetRoomNumber</name>
					<summary>Set room number of the object.</summary>
					<description>This is used in conjunction with SetPosition to teleport the object to a new room.</description>
					<parameters>
						<parameter>
							<name>ID</name>
							<type>int</type>
							<description>The ID of the new room.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>AIObject:GetObjectID</name>
					<summary>Retrieve the object ID.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>A number representing the ID of the object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>AIObject:SetObjectID</name>
					<summary>Change the object ID.</summary>
					<description>This will change the type of AI object it is.
 Note that a baddy will gain the behaviour of the tile it's on _before_ said baddy is triggered.
 This means that changing the type of an AI object beneath a moveable will have no effect.
 Instead, this function can be used to change an object that the baddy isn't standing on.
 For example, you could have a pair of AI_GUARD objects, and change one or the other two
 AI_PATROL_1 based on whether the player has a certain item or not.</description>
					<parameters>
						<parameter>
							<name>ID</name>
							<type>Objects.ObjID</type>
							<description>the new ID.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Camera</name>
			<type>tenclass</type>
			<summary>Basic cameras that can point at Lara or at a CAMERA_TARGET.</summary>
			<members>
				<method>
					<name>Camera:GetPosition</name>
					<summary>Get the camera's position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Camera's position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Camera:SetPosition</name>
					<summary>Set the camera's position.</summary>
					<parameters>
						<parameter>
							<name>position</name>
							<type>Vec3</type>
							<description>The new position of the camera.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Camera:GetName</name>
					<summary>Get the camera's unique string identifier</summary>
					<returns>
						<return>
							<type>string</type>
							<description>the camera's name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Camera:SetName</name>
					<summary>Set the camera's name (its unique string identifier).</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>The camera's new name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Camera:GetRoom</name>
					<summary>Get the current room of the camera.</summary>
					<returns>
						<return>
							<type>Objects.Room</type>
							<description>Current room of the camera.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Camera:GetRoomNumber</name>
					<summary>Get the current room number of the camera.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Number representing the current room of the camera.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Camera:SetRoomNumber</name>
					<summary>Set room of camera.</summary>
					<description>This is used in conjunction with SetPosition to teleport the camera to a new room.</description>
					<parameters>
						<parameter>
							<name>ID</name>
							<type>int</type>
							<description>The ID of the new room.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Camera:Play</name>
					<summary>Activate the camera for the current game frame.</summary>
					<parameters>
						<parameter>
							<name>target</name>
							<type>Objects.Moveable</type>
							<optional>true</optional>
							<description>If you put a moveable, the camera will look at it. Otherwise, it will look at Lara.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.LaraObject</name>
			<type>tenclass</type>
			<summary>Class for player-only functions.</summary>
			<description>Do not try to create an object of this type. Use the built-in *Lara* variable instead.
 LaraObject inherits all the functions of @{Objects.Moveable|Moveable}.</description>
			<members>
				<method>
					<name>LaraObject:SetPoison</name>
					<summary>Set the player's poison value.</summary>
					<parameters>
						<parameter>
							<name>poison</name>
							<type>int</type>
							<optional>true</optional>
							<description>New poison value. __default: 0, max: 128__</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:GetPoison</name>
					<summary>Get the player's poison value.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Poison value.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:SetAir</name>
					<summary>Set the player's air value.</summary>
					<parameters>
						<parameter>
							<name>air</name>
							<type>int</type>
							<description>New air value. __max: 1800__</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:GetAir</name>
					<summary>Get the player's air value.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Air value.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:SetWet</name>
					<summary>Set the player's wetness value, causing drips.</summary>
					<parameters>
						<parameter>
							<name>wetness</name>
							<type>int</type>
							<description>New wetness value. __max: 255__</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:GetWet</name>
					<summary>Get the player's wetness value.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Wetness value.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:SetStamina</name>
					<summary>Set the player's stamina value.</summary>
					<parameters>
						<parameter>
							<name>New</name>
							<type>int</type>
							<description>stamina value. __max: 120__</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:GetStamina</name>
					<summary>Get the player's stamina value.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Stamina value.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetAirborne</name>
					<summary>Get the player's airborne status (set when jumping and falling).</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>True if airborne, otherwise false.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:SetAirborne</name>
					<summary>Set the player's airborne status.</summary>
					<parameters>
						<parameter>
							<name>airborne</name>
							<type>bool</type>
							<description>New airborne status.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:UndrawWeapon</name>
					<summary>Undraw a weapon if it is drawn and throw away a flare if currently holding one.</summary>
				</method>
				<method>
					<name>LaraObject:DiscardTorch</name>
					<summary>Discard a held torch.</summary>
				</method>
				<method>
					<name>LaraObject:GetHandStatus</name>
					<summary>Get the player's hand status.</summary>
					<returns>
						<return>
							<type>Objects.HandStatus</type>
							<description>Hand status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetWeaponType</name>
					<summary>Get the player's weapon type.</summary>
					<returns>
						<return>
							<type>Objects.WeaponType</type>
							<description>Current weapon type.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:SetWeaponType</name>
					<summary>Set the player's weapon type.</summary>
					<parameters>
						<parameter>
							<name>weaponType</name>
							<type>Objects.WeaponType</type>
							<description>New weapon type to set.</description>
						</parameter>
						<parameter>
							<name>activate</name>
							<type>bool</type>
							<description>If `true`, also draw the weapons or set torch lit. If `false`, keep weapons holstered or leave torch unlit.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:GetAmmoType</name>
					<summary>Get player weapon ammo type.</summary>
					<returns>
						<return>
							<type>Objects.AmmoType</type>
							<description>Player weapon ammo type.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetAmmoCount</name>
					<summary>Get current weapon's ammo count.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Current ammo count (-1 if infinite).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetVehicle</name>
					<summary>Get current vehicle, if it exists.</summary>
					<returns>
						<return>
							<type>Objects.Moveable</type>
							<description>Current vehicle (nil if no vehicle present).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetTarget</name>
					<summary>Get the player's current targeted moveable (if it exists).</summary>
					<returns>
						<return>
							<type>Objects.Moveable</type>
							<description>Target moveable (nil if the player is not currently targeting a moveable).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:GetInteractedMoveable</name>
					<summary>Get the player's current interacted moveable (if it exists).</summary>
					<returns>
						<return>
							<type>Objects.Moveable</type>
							<description>Interacted moveable (nil if the player is not interacting with a moveable).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:IsTorchLit</name>
					<summary>Check if a held torch is lit.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>True if lit, otherwise false (also false if there is no torch in hand).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>LaraObject:Interact</name>
					<summary>Align the player with a moveable object for interaction.</summary>
					<parameters>
						<parameter>
							<name>mov</name>
							<type>Objects.Moveable</type>
							<description>Moveable object to align the player with.</description>
						</parameter>
						<parameter>
							<name>animNumber</name>
							<type>int</type>
							<optional>true</optional>
							<defaultValue>197 (BUTTON_PUSH)</defaultValue>
							<description>The animation to play after alignment is complete.</description>
						</parameter>
						<parameter>
							<name>offset</name>
							<type>Vec3</type>
							<optional>true</optional>
							<defaultValue>Vec3(0, 0, 312)</defaultValue>
							<description>Relative position offset from the moveable.</description>
						</parameter>
						<parameter>
							<name>minOffsetConstraint</name>
							<type>Vec3</type>
							<optional>true</optional>
							<defaultValue>Vec3(-256, -512, 0)</defaultValue>
							<description>Minimum relative offset constraint.</description>
						</parameter>
						<parameter>
							<name>maxOffsetConstraint</name>
							<type>Vec3</type>
							<optional>true</optional>
							<defaultValue>Vec3(256, 0, 512)</defaultValue>
							<description>Maximum relative offset constraint.</description>
						</parameter>
						<parameter>
							<name>minRotConstraint</name>
							<type>Rotation</type>
							<optional>true</optional>
							<defaultValue>Rotation(-10, -40, -10)</defaultValue>
							<description>Minimum relative rotation constraint.</description>
						</parameter>
						<parameter>
							<name>maxRotConstraint</name>
							<type>Rotation</type>
							<optional>true</optional>
							<defaultValue>Rotation(10, 40, 10)</defaultValue>
							<description>Maximum relative rotation constraint.</description>
						</parameter>
						<parameter>
							<name>actionID</name>
							<type>Input.ActionID</type>
							<optional>true</optional>
							<defaultValue>Input.ActionID.ACTION</defaultValue>
							<description>Input action ID to trigger the alignment.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>LaraObject:TestInteraction</name>
					<summary>Test the player against a moveable object for interaction.</summary>
					<parameters>
						<parameter>
							<name>mov</name>
							<type>Objects.Moveable</type>
							<description>Moveable object to align the player with.</description>
						</parameter>
						<parameter>
							<name>minOffsetConstraint</name>
							<type>Vec3</type>
							<optional>true</optional>
							<defaultValue>Vec3(-256, -512, 0)</defaultValue>
							<description>Minimum relative offset constraint.</description>
						</parameter>
						<parameter>
							<name>maxOffsetConstraint</name>
							<type>Vec3</type>
							<optional>true</optional>
							<defaultValue>Vec3(256, 0, 512)</defaultValue>
							<description>Maximum relative offset constraint.</description>
						</parameter>
						<parameter>
							<name>minRotConstraint</name>
							<type>Rotation</type>
							<optional>true</optional>
							<defaultValue>Rotation(-10, -40, -10)</defaultValue>
							<description>Minimum relative rotation constraint.</description>
						</parameter>
						<parameter>
							<name>maxRotConstraint</name>
							<type>Rotation</type>
							<optional>true</optional>
							<defaultValue>Rotation(10, 40, 10)</defaultValue>
							<description>Maximum relative rotation constraint.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Returns true if the player is inside the specified bounds.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Moveable</name>
			<type>tenclass</type>
			<summary>Represents a moveable object in the game world.</summary>
			<description>Examples include the player, traps, enemies, doors, and pickups. See also @{Objects.LaraObject} for player-specific features.</description>
			<members>
				<method>
					<name>Moveable</name>
					<summary>Used to generate a new moveable dynamically at runtime.</summary>
					<description>For more information on each parameter, see the
associated getters and setters. If you do not know what to set for these,
most can just be ignored (see usage).</description>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>Object ID.</description>
						</parameter>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>Lua name.</description>
						</parameter>
						<parameter>
							<name>position</name>
							<type>Vec3</type>
							<description>Position in level.</description>
						</parameter>
						<parameter>
							<name>rotation</name>
							<type>Rotation</type>
							<optional>true</optional>
							<description>Rotation about x, y, and z axes.</description>
						</parameter>
						<parameter>
							<name>roomNumber</name>
							<type>int</type>
							<optional>true</optional>
							<description>The room number the moveable is in. Needed if you are dealing with overlapping rooms and need to force certain room number.</description>
						</parameter>
						<parameter>
							<name>animNumber</name>
							<type>int</type>
							<optional>true</optional>
							<description>Animation number.</description>
						</parameter>
						<parameter>
							<name>frameNumber</name>
							<type>int</type>
							<optional>true</optional>
							<description>Frame number.</description>
						</parameter>
						<parameter>
							<name>hp</name>
							<type>int</type>
							<optional>true</optional>
							<description>Hit points.</description>
						</parameter>
						<parameter>
							<name>OCB</name>
							<type>int</type>
							<optional>true</optional>
							<description>Object code bits.</description>
						</parameter>
						<parameter>
							<name>AIBits</name>
							<type>table</type>
							<optional>true</optional>
							<description>Table with six AI bits.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Objects.Moveable</type>
							<description>A new Moveable object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetObjectID</name>
					<summary>Retrieve the object ID from a moveable.</summary>
					<returns>
						<return>
							<type>Objects.ObjID</type>
							<description>A number representing the object ID of the moveable.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetObjectID</name>
					<summary>Change the moveable's object ID.</summary>
					<description>This will literally change the moveable.</description>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>The new ID.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetOnHit</name>
					<summary>Set the name of the function to be called when the moveable is shot by Lara.</summary>
					<description>Note that this will be triggered twice when shot with both pistols at once.</description>
					<parameters>
						<parameter>
							<name>function</name>
							<type>function</type>
							<description>Callback function in LevelFuncs hierarchy to call when moveable is shot.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetOnKilled</name>
					<summary>Set the name of the function to be called when the moveable is destroyed/killed.</summary>
					<description>Note that enemy death often occurs at the end of an animation, and not at the exact moment
 the enemy's HP becomes zero.</description>
					<parameters>
						<parameter>
							<name>function</name>
							<type>function</type>
							<description>Callback function in LevelFuncs hierarchy to call when moveable is killed.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetOnCollidedWithObject</name>
					<summary>Set the function to be called when this moveable collides with another moveable.</summary>
					<parameters>
						<parameter>
							<name>function</name>
							<type>function</type>
							<description>Callback function to be called (must be in LevelFuncs hierarchy). This function can take two arguments; these will store the two @{Moveable}s taking part in the collision.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetOnCollidedWithRoom</name>
					<summary>Set the function called when this moveable collides with room geometry (e.g.</summary>
					<description>a wall or floor). This function can take an argument that holds the @{Moveable} that collided with geometry.</description>
					<parameters>
						<parameter>
							<name>function</name>
							<type>function</type>
							<description>Callback function to be called (must be in LevelFuncs hierarchy).</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetName</name>
					<summary>Get the moveable's name (its unique string identifier).</summary>
					<description>This corresponds with the "Lua Name" field in a moveable's properties in Tomb Editor.</description>
					<returns>
						<return>
							<type>string</type>
							<description>The moveable's name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetName</name>
					<summary>Set the moveable's name (its unique string identifier).</summary>
					<description>It cannot be blank and cannot share a name with any other existing moveable.</description>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>The new moveable's name.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>true if name was successfully set, false otherwise (e.g. if another moveable has the name already).</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetPosition</name>
					<summary>Get the moveable's position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Moveable's position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetPosition</name>
					<summary>Set the moveable's position.</summary>
					<parameters>
						<parameter>
							<name>position</name>
							<type>Vec3</type>
							<description>The new position of the moveable.</description>
						</parameter>
						<parameter>
							<name>updateRoom</name>
							<type>bool</type>
							<optional>true</optional>
							<defaultValue>true</defaultValue>
							<description>Will room changes be automatically detected? Set to false if you are using overlapping rooms.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetJointPosition</name>
					<summary>Get the moveable's joint position with an optional relative offset.</summary>
					<parameters>
						<parameter>
							<name>jointIndex</name>
							<type>int</type>
							<description>Index of a joint to get position.</description>
						</parameter>
						<parameter>
							<name>offset</name>
							<type>Vec3</type>
							<optional>true</optional>
							<description>Offset relative to the joint.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>World position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetJointRotation</name>
					<summary>Get the moveable's joint rotation.</summary>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a joint to get rotation.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Rotation</type>
							<description>Moveable's joint rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetRotation</name>
					<summary>Get the moveable's rotation.</summary>
					<returns>
						<return>
							<type>Rotation</type>
							<description>Moveable's rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetScale</name>
					<summary>Get the moveable's visual scale.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Moveable's visual scale.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetRotation</name>
					<summary>Set the moveable's rotation.</summary>
					<parameters>
						<parameter>
							<name>rotation</name>
							<type>Rotation</type>
							<description>The moveable's new rotation.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetScale</name>
					<summary>Set the moveable's visual scale.</summary>
					<description>Does not affect collision.</description>
					<parameters>
						<parameter>
							<name>scale</name>
							<type>Vec3</type>
							<description>New visual scale.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetHP</name>
					<summary>Get current HP (hit points / health points).</summary>
					<returns>
						<return>
							<type>int</type>
							<description>The amount of HP the moveable currently has.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetHP</name>
					<summary>Set current HP (hit points / health points).</summary>
					<description>Clamped to [0, 32767] for "intelligent" entities (i.e. anything with AI); clamped to [-32767, 32767] otherwise.</description>
					<parameters>
						<parameter>
							<name>HP</name>
							<type>int</type>
							<description>The amount of HP to give the moveable.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetSlotHP</name>
					<summary>Get HP (hit points / health points) definded for that object ID.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>The moveable's slot default hit points.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetOCB</name>
					<summary>Get OCB (object code bit) of the moveable.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>The moveable's current OCB value.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetOCB</name>
					<summary>Set OCB (object code bit) of the moveable.</summary>
					<parameters>
						<parameter>
							<name>OCB</name>
							<type>int</type>
							<description>The new value for the moveable's OCB.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetEffect</name>
					<summary>Set the effect for this moveable.</summary>
					<parameters>
						<parameter>
							<name>effect</name>
							<type>Effects.EffectID</type>
							<description>Type of effect to assign.</description>
						</parameter>
						<parameter>
							<name>timeout</name>
							<type>float</type>
							<optional>true</optional>
							<description>Time (in seconds) after which effect turns off.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetCustomEffect</name>
					<summary>Set custom colored burn effect to moveable.</summary>
					<parameters>
						<parameter>
							<name>color1</name>
							<type>Color</type>
							<description>The primary color of the effect (also used for lighting).</description>
						</parameter>
						<parameter>
							<name>color2</name>
							<type>Color</type>
							<description>The secondary color of the effect.</description>
						</parameter>
						<parameter>
							<name>timeout</name>
							<type>float</type>
							<optional>true</optional>
							<description>Time (in seconds) after which effect turns off.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetEffect</name>
					<summary>Get current moveable effect.</summary>
					<returns>
						<return>
							<type>Effects.EffectID</type>
							<description>Effect type currently assigned.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetItemFlags</name>
					<summary>Get the value stored in ItemFlags[index].</summary>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of the ItemFlag, can be between 0 and 7.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>int</type>
							<description>The value contained in the ItemFlags[index].</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetItemFlags</name>
					<summary>Stores a value in ItemFlags[index].</summary>
					<parameters>
						<parameter>
							<name>value</name>
							<type>short</type>
							<description>Value to store in the moveable's ItemFlags[index].</description>
						</parameter>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of the ItemFlag where to store the value.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetLocationAI</name>
					<summary>Get the location value stored in the Enemy AI.</summary>
					<returns>
						<return>
							<type>short</type>
							<description>The value contained in the LocationAI of the creature.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetLocationAI</name>
					<summary>Updates the location in the enemy AI with the given value.</summary>
					<parameters>
						<parameter>
							<name>value</name>
							<type>short</type>
							<description>Value to store.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetColor</name>
					<summary>Get the moveable's color.</summary>
					<returns>
						<return>
							<type>Color</type>
							<description>Moveable's color.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetColor</name>
					<summary>Set the moveable's color.</summary>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>The new color of the moveable.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetAIBits</name>
					<summary>Get AIBits of a moveable.</summary>
					<description>This will return a table with six values, each corresponding to
 an active behaviour. If the moveable is in a certain AI mode, the table will
 have a *1* in the corresponding cell. Otherwise, the cell will hold
 a *0*.

	1 - Guard
	2 - Ambush
	3 - Patrol 1
	4 - Modify
	5 - Follow
	6 - Patrol 2</description>
					<returns>
						<return>
							<type>table</type>
							<description>A table of AI bits.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetAIBits</name>
					<summary>Set AIBits of a moveable.</summary>
					<description>Use this to force a moveable into a certain AI mode or modes, as if a certain nullmesh
 (or more than one) had suddenly spawned beneath their feet.</description>
					<parameters>
						<parameter>
							<name>bits</name>
							<type>table</type>
							<description>A table of AI bits.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetState</name>
					<summary>Retrieve the index of the current state.</summary>
					<description>This corresponds to the number shown in the item's state ID field in WadTool.</description>
					<returns>
						<return>
							<type>int</type>
							<description>The index of the active state.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetTargetState</name>
					<summary>Retrieve the index of the target state.</summary>
					<description>This corresponds to the state the moveable is trying to get into, which is sometimes different from the active state.</description>
					<returns>
						<return>
							<type>int</type>
							<description>The index of the target state.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetState</name>
					<summary>Set the moveable's state to the one specified by the given index.</summary>
					<description>Performs no bounds checking. *Ensure the number given is correct, else
 moveable may end up in corrupted animation state.*</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>The index of the desired state.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetAnimSlot</name>
					<summary>Retrieve the slot ID of the animation.</summary>
					<description>In certain cases, moveable may play animations from another object slot. Use this
 function when you need to identify such cases.</description>
					<returns>
						<return>
							<type>int</type>
							<description>Animation slot ID.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetAnim</name>
					<summary>Retrieve the index of the current animation.</summary>
					<description>This corresponds to the number shown in the item's animation list in WadTool.</description>
					<returns>
						<return>
							<type>int</type>
							<description>The index of the active animation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetAnim</name>
					<summary>Set the moveable's animation to the one specified by the given index.</summary>
					<description>Performs no bounds checking. *Ensure the number given is correct, else
 moveable may end up in corrupted animation state.*</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>The index of the desired animation.</description>
						</parameter>
						<parameter>
							<name>slot</name>
							<type>int</type>
							<optional>true</optional>
							<description>Slot ID of the desired anim (if omitted, moveable's own slot ID is used).</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetFrame</name>
					<summary>Retrieve frame number.</summary>
					<description>This is the current frame of the moveable's active animation.</description>
					<returns>
						<return>
							<type>int</type>
							<description>The current frame of the active animation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetVelocity</name>
					<summary>Get the moveable's velocity.</summary>
					<description>In most cases, only Z and Y components are used as forward and vertical velocity.
 In some cases, primarily NPCs, X component is used as side velocity.</description>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Current moveable velocity.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetVelocity</name>
					<summary>Set the moveable's velocity to specified value.</summary>
					<description>In most cases, only Z and Y components are used as forward and vertical velocity.
 In some cases, primarily NPCs, X component is used as side velocity.</description>
					<parameters>
						<parameter>
							<name>velocity</name>
							<type>Vec3</type>
							<description>Velocity represented as vector.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetFrame</name>
					<summary>Set frame number.</summary>
					<description>This will move the animation to the given frame.
 The number of frames in an animation can be seen under the heading "End frame" in
 the WadTool animation editor. If the animation has no frames, the only valid argument
 is -1.</description>
					<parameters>
						<parameter>
							<name>frame</name>
							<type>int</type>
							<description>The new frame number.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetEndFrame</name>
					<summary>Get the end frame number of the moveable's active animation.</summary>
					<description>This is the "End Frame" set in WADTool for the animation.()</description>
					<returns>
						<return>
							<type>int</type>
							<description>End frame number of the active animation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetActive</name>
					<summary>Determine whether the moveable is active or not.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>True if the moveable is active.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetHitStatus</name>
					<summary>Get the hit status of the moveable.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>true if the moveable was hit by something in the last gameplay frame, false otherwise.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetRoom</name>
					<summary>Get the current room of the moveable.</summary>
					<returns>
						<return>
							<type>Objects.Room</type>
							<description>Current room of the moveable.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetRoomNumber</name>
					<summary>Get the current room number of the moveable.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Number representing the current room of the moveable.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetRoomNumber</name>
					<summary>Set the room ID of a moveable.</summary>
					<description>Use this if not using SetPosition's automatic room update - for example, when dealing with overlapping rooms.</description>
					<parameters>
						<parameter>
							<name>roomID</name>
							<type>int</type>
							<description>New room's ID.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetStatus</name>
					<summary>Get the moveable's status.</summary>
					<returns>
						<return>
							<type>Objects.MoveableStatus</type>
							<description>Status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetStatus</name>
					<summary>Set the moveable's status.</summary>
					<parameters>
						<parameter>
							<name>status</name>
							<type>Objects.MoveableStatus</type>
							<description>The new status of the moveable.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetMeshCount</name>
					<summary>Get number of meshes for a particular moveable.</summary>
					<description>Returns number of meshes in an object.</description>
					<returns>
						<return>
							<type>int</type>
							<description>Number of meshes.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:GetMeshVisible</name>
					<summary>Get visibility state of a specified mesh of a moveable.</summary>
					<description>Returns true if specified mesh is visible on a moveable, and false
 if it is not visible.</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Visibility status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetMeshVisible</name>
					<summary>Makes specified mesh visible or invisible.</summary>
					<description>Use this to show or hide a specified mesh of a moveable.</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh.</description>
						</parameter>
						<parameter>
							<name>isVisible</name>
							<type>bool</type>
							<description>true if you want the mesh to be visible, false otherwise.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:ShatterMesh</name>
					<summary>Shatters specified mesh and makes it invisible.</summary>
					<description>Note that you can re-enable mesh later by using SetMeshVisible().</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh to shatter.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetMeshSwapped</name>
					<summary>Get state of specified mesh swap of a moveable.</summary>
					<description>Returns true if specified mesh is swapped on a moveable, and false if it is not swapped.</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Mesh swap status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SwapMesh</name>
					<summary>Set state of specified mesh swap of a moveable.</summary>
					<description>Use this to swap specified mesh of a moveable.</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh.</description>
						</parameter>
						<parameter>
							<name>objectID</name>
							<type>int</type>
							<description>ID of a slot to get meshswap from.</description>
						</parameter>
						<parameter>
							<name>swapIndex</name>
							<type>int</type>
							<optional>true</optional>
							<description>Index of a mesh from meshswap slot to use.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:UnswapMesh</name>
					<summary>Unset specified mesh swap of a moveable.</summary>
					<description>Use this to bring back original unswapped mesh.</description>
					<parameters>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of a mesh to unswap.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SwapSkinnedMesh</name>
					<summary>Swap skinned mesh of a moveable.</summary>
					<description>Use this to replace one skinned mesh with another.</description>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>int</type>
							<description>ID of a slot to get skinned meshswap from.</description>
						</parameter>
						<parameter>
							<name>swapIndex</name>
							<type>int</type>
							<optional>true</optional>
							<description>If set, swaps skinned mesh with bone mesh with a specified index.
 Use if you have several skinned meshes (e.g. outfits) in a single slot.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:UnswapSkinnedMesh</name>
					<summary>Unset skinned mesh swap of a moveable.</summary>
					<description>Use this to bring back original unswapped skinned mesh.</description>
				</method>
				<method>
					<name>Moveable:Enable</name>
					<summary>Enable the item, as if a trigger for it had been stepped on.</summary>
					<parameters>
						<parameter>
							<name>timeout</name>
							<type>float</type>
							<optional>true</optional>
							<description>Time (in seconds) after which moveable automatically disables.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:Disable</name>
					<summary>Disable the item, as if an antitrigger for it had been stepped on.</summary>
					<description>For example, it will close an open door or extinguish a flame emitter. Note that this will not trigger an OnKilled callback.</description>
				</method>
				<method>
					<name>Moveable:Explode</name>
					<summary>Explode this moveable.</summary>
					<description>Also kills and disables it.</description>
				</method>
				<method>
					<name>Moveable:Shatter</name>
					<summary>Shatter this moveable.</summary>
					<description>Also kills and disables it.</description>
				</method>
				<method>
					<name>Moveable:GetCollidable</name>
					<summary>Get the item's collision state.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Item's collision state.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:SetCollidable</name>
					<summary>Set the item's collision.</summary>
					<parameters>
						<parameter>
							<name>collidable</name>
							<type>bool</type>
							<description>true if the caller should be collidable, false if no collision should occur.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:SetVisible</name>
					<summary>Set the item's visibility.</summary>
					<description>An invisible item will have collision turned off, as if it no longer exists in the game world.</description>
					<parameters>
						<parameter>
							<name>visible</name>
							<type>bool</type>
							<description>true if the caller should become visible, false if it should become invisible.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:GetValid</name>
					<summary>Test if the moveable is in a valid state.</summary>
					<description>Indicates that it has not been destroyed through Lua or killed by Lara.</description>
					<returns>
						<return>
							<type>bool</type>
							<description>true if the moveable is still not destroyed.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Moveable:Destroy</name>
					<summary>Destroy the moveable.</summary>
					<description>This will mean it can no longer be used, except to re-initialize it with another moveable.</description>
				</method>
				<method>
					<name>Moveable:AttachObjCamera</name>
					<summary>Attach camera to a moveable.</summary>
					<parameters>
						<parameter>
							<name>mesh</name>
							<type>int</type>
							<description>Mesh of a moveable to use as a camera position.</description>
						</parameter>
						<parameter>
							<name>target</name>
							<type>Objects.Moveable</type>
							<description>Target moveable to attach camera to.</description>
						</parameter>
						<parameter>
							<name>targetMesh</name>
							<type>int</type>
							<description>Mesh of a target moveable to use as a camera target.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Moveable:AnimFromObject</name>
					<summary>Borrow animation from an object.</summary>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>Object ID to take animation and state ID from.</description>
						</parameter>
						<parameter>
							<name>animNumber</name>
							<type>int</type>
							<description>Animation from object.</description>
						</parameter>
						<parameter>
							<name>stateID</name>
							<type>int</type>
							<description>State from object.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Room</name>
			<type>tenclass</type>
			<summary>Room object.</summary>
			<members>
				<method>
					<name>Room:GetRoomNumber</name>
					<summary>Get the room's number.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Room number.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Room:GetName</name>
					<summary>Get the room's unique string identifier.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>Room name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Room:GetColor</name>
					<summary>Get the room's ambient light color.</summary>
					<returns>
						<return>
							<type>Color</type>
							<description>Ambient light color.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Room:GetReverbType</name>
					<summary>Get the room's reverb type.</summary>
					<returns>
						<return>
							<type>Objects.RoomReverb</type>
							<description>Reverb type.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Room:SetName</name>
					<summary>Set the room's unique string identifier.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>New name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Room:SetReverbType</name>
					<summary>Set the room's reverb type.</summary>
					<parameters>
						<parameter>
							<name>reverb</name>
							<type>Objects.RoomReverb</type>
							<description>Reverb type.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Room:SetFlag</name>
					<summary>Set the room's specified flag.</summary>
					<parameters>
						<parameter>
							<name>flagID</name>
							<type>Objects.RoomFlagID</type>
							<description>Room flag ID.</description>
						</parameter>
						<parameter>
							<name>value</name>
							<type>bool</type>
							<description>Boolean to set the flag to.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Room:GetFlag</name>
					<summary>Get the room's specified flag value (true or false).</summary>
					<parameters>
						<parameter>
							<name>flagID</name>
							<type>Objects.RoomFlagID</type>
							<description>Room flag ID.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Room:IsTagPresent</name>
					<summary>Check if the specified tag is set for the room.</summary>
					<parameters>
						<parameter>
							<name>tag</name>
							<type>string</type>
							<description>Text tag to check (case sensitive).</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Boolean of the tag's presence.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Room:GetActive</name>
					<summary>Check if the room is active.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Boolean of the room's active status.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Sink</name>
			<type>tenclass</type>
			<summary>Represents a sink object.</summary>
			<members>
				<method>
					<name>Sink:GetName</name>
					<summary>Get this sink's unique string identifier.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>Name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Sink:GetPosition</name>
					<summary>Get this sink's world position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>World position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Sink:GetStrength</name>
					<summary>Get this sink's strength.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Strength.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Sink:SetName</name>
					<summary>Set this sink's unique string identifier.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>New name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Sink:SetPosition</name>
					<summary>Set this sink's world position.</summary>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>New world position.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Sink:SetStrength</name>
					<summary>Set this sink's strength.</summary>
					<description>Higher numbers provide stronger currents. Clamped to the range [1, 32].</description>
					<parameters>
						<parameter>
							<name>strength</name>
							<type>int</type>
							<description>New strength.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.SoundSource</name>
			<type>tenclass</type>
			<summary>Sound source</summary>
			<members>
				<method>
					<name>SoundSource:GetPosition</name>
					<summary>Get the sound source's position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Sound source's position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>SoundSource:SetPosition</name>
					<summary>Set the sound source's position.</summary>
					<parameters>
						<parameter>
							<name>position</name>
							<type>Vec3</type>
							<description>The new position of the sound source.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>SoundSource:GetName</name>
					<summary>Get the sound source's unique string identifier.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>The sound source's name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>SoundSource:SetName</name>
					<summary>Set the sound source's unique string identifier.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>The sound source's new name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>SoundSource:GetSoundID</name>
					<summary>Get the sound source's sound ID.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>The ID of the sound.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>SoundSource:SetSoundID</name>
					<summary>Set the sound source's ID.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>int</type>
							<description>The sound source's new sound ID.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Static</name>
			<type>tenclass</type>
			<summary>Represents a static object in the game world.</summary>
			<members>
				<method>
					<name>Static:GetName</name>
					<summary>Get this static's unique string identifier.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>Name string.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetSlot</name>
					<summary>Get this static's slot ID.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Slot ID.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetPosition</name>
					<summary>Get this static's world position.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>World position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetRotation</name>
					<summary>Get this static's world rotation.</summary>
					<returns>
						<return>
							<type>Rotation</type>
							<description>World rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetScale</name>
					<summary>Get this static's world scale.</summary>
					<returns>
						<return>
							<type>float</type>
							<description>World scale.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetColor</name>
					<summary>Get this static's color.</summary>
					<returns>
						<return>
							<type>Color</type>
							<description>Color.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetHP</name>
					<summary>Get this static's hit points.</summary>
					<description>Used only with shatterable statics.</description>
					<returns>
						<return>
							<type>int</type>
							<description>Hit points.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetActive</name>
					<summary>Get this static's visibility status.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Status. true means visible, false otherwise.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetCollidable</name>
					<summary>Get this static's collision status.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Collision status. true if can be collided with, false otherwise.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:GetSolid</name>
					<summary>Get this static's solid collision status.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Solid Status. true if solid, false if soft.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Static:SetName</name>
					<summary>Set this static's unique identifier string.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>New name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetSlot</name>
					<summary>Set this static's slot ID.</summary>
					<parameters>
						<parameter>
							<name>slotID</name>
							<type>int</type>
							<description>New slot ID.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetPosition</name>
					<summary>Set this static's world position.</summary>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>New world position.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetRotation</name>
					<summary>Set this static's rotation.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>New rotation.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetScale</name>
					<summary>Set this static's world scale.</summary>
					<parameters>
						<parameter>
							<name>scale</name>
							<type>float</type>
							<description>New world scale.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetColor</name>
					<summary>Set this static's color.</summary>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>New color.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetHP</name>
					<summary>Set this static's hit points.</summary>
					<description>Used only with shatterable statics.</description>
					<parameters>
						<parameter>
							<name>hitPoints</name>
							<type>int</type>
							<description>New hit points.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetSolid</name>
					<summary>Set this static's solid collision status.</summary>
					<parameters>
						<parameter>
							<name>status</name>
							<type>bool</type>
							<description>New status, true is solid, false is soft.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:SetCollidable</name>
					<summary>Set this static's collision status.</summary>
					<parameters>
						<parameter>
							<name>collidable</name>
							<type>bool</type>
							<description>New collision status. true if can be collided with, false: no collision.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Static:Enable</name>
					<summary>Enable this static.</summary>
					<description>Used when previously shattered disabled manually.</description>
				</method>
				<method>
					<name>Static:Disable</name>
					<summary>Disable this static.</summary>
				</method>
				<method>
					<name>Static:Shatter</name>
					<summary>Shatter this static.</summary>
				</method>
			</members>
		</class>
		<class>
			<name>Objects.Volume</name>
			<type>tenclass</type>
			<summary>Activator volume.</summary>
			<members>
				<method>
					<name>Volume:GetName</name>
					<summary>Get the unique string identifier of this volume.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>Name.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:GetPosition</name>
					<summary>Get the position of this volume.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Position.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:GetRotation</name>
					<summary>Get the rotation of this volume.</summary>
					<returns>
						<return>
							<type>Rotation</type>
							<description>Rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:GetScale</name>
					<summary>Get this scale of this volume.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Scale.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:SetName</name>
					<summary>Set the unique string identifier of this volume.</summary>
					<parameters>
						<parameter>
							<name>name</name>
							<type>string</type>
							<description>New name.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Volume:SetPosition</name>
					<summary>Set the position of this volume.</summary>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec3</type>
							<description>New position.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Volume:SetRotation</name>
					<summary>Set the rotation of this volume.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>New rotation.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Volume:SetScale</name>
					<summary>Set the scale of the volume.</summary>
					<parameters>
						<parameter>
							<name>scale</name>
							<type>Vec3</type>
							<description>New scale.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>Volume:GetActive</name>
					<summary>Determine if this volume is active.</summary>
					<returns>
						<return>
							<type>bool</type>
							<description>Boolean representing active status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:IsMoveableInside</name>
					<summary>Determine if a moveable is inside this volume.</summary>
					<parameters>
						<parameter>
							<name>moveable</name>
							<type>Objects.Moveable</type>
							<description>Moveable to be checked for containment.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>bool</type>
							<description>Boolean representing containment status.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Volume:Enable</name>
					<summary>Enable this volume.</summary>
				</method>
				<method>
					<name>Volume:Disable</name>
					<summary>Disable this volume.</summary>
				</method>
				<method>
					<name>Volume:ClearActivators</name>
					<summary>Clear the activators for this volume, allowing it to trigger again.</summary>
				</method>
			</members>
		</class>
		<class>
			<name>Strings.DisplayString</name>
			<type>tenclass</type>
			<summary>A string appearing on the screen.</summary>
			<description>Can be used for subtitles and "2001, somewhere in Egypt"-style messages.

Uses screen-space coordinates, with x values specifying the number of pixels from the left of the window,
and y values specifying the number of pixels from the top of the window.

Since different players will have different resolutions, you should work in terms of percentages where possible,
and use @{Util.ScreenToPercent|ScreenToPercent} and @{Util.PercentToScreen|PercentToScreen}
when you need to use screen-space coordinates.</description>
			<members>
				<method>
					<name>DisplayString</name>
					<summary>Create a DisplayString.</summary>
					<description>For use in @{Strings.ShowString|ShowString} and @{Strings.HideString|HideString}.</description>
					<parameters>
						<parameter>
							<name>string</name>
							<type>string</type>
							<description>The string to display or key of the translated string.</description>
						</parameter>
						<parameter>
							<name>position</name>
							<type>Vec2</type>
							<description>Position of the string in pixel coordinates.</description>
						</parameter>
						<parameter>
							<name>scale</name>
							<type>float</type>
							<optional>true</optional>
							<defaultValue>1</defaultValue>
							<description>Size of the string, relative to the default size.</description>
						</parameter>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<optional>true</optional>
							<defaultValue>Color(255, 255, 255)</defaultValue>
							<description>The color of the text.</description>
						</parameter>
						<parameter>
							<name>translated</name>
							<type>bool</type>
							<optional>true</optional>
							<defaultValue>false</defaultValue>
							<description>If false or omitted, the input string argument will be displayed as is.
If true, the string argument will be treated as the key of a translated string specified in strings.lua.</description>
						</parameter>
						<parameter>
							<name>flags</name>
							<type>Strings.DisplayStringOption</type>
							<optional>true</optional>
							<description>Flags which affect visual representation of a string, such as shadow or alignment.</description>
						</parameter>
						<parameter>
							<name>area</name>
							<type>Vec2</type>
							<optional>true</optional>
							<defaultValue>Vec2(0, 0)</defaultValue>
							<description>Rectangular area in pixels to perform word wrapping.
No word wrapping will occur if this parameter is default or omitted.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>DisplayString</type>
							<description>A new DisplayString object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:GetColor</name>
					<summary>Get the display string's color.</summary>
					<returns>
						<return>
							<type>Color</type>
							<description>Display string's color.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:SetColor</name>
					<summary>Set the display string's color.</summary>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>The new color of the display string.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplayString:GetKey</name>
					<summary>Get the string key.</summary>
					<returns>
						<return>
							<type>string</type>
							<description>The string key.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:SetKey</name>
					<summary>Set the string key to use.</summary>
					<parameters>
						<parameter>
							<name>key</name>
							<type>string</type>
							<description>The new key for the display string.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplayString:GetScale</name>
					<summary>Get the scale of the string.</summary>
					<returns>
						<return>
							<type>float</type>
							<description>Scale.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:SetScale</name>
					<summary>Set the scale of the string.</summary>
					<parameters>
						<parameter>
							<name>scale</name>
							<type>float</type>
							<description>New scale of the string relative to the default size.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplayString:GetPosition</name>
					<summary>Get the position of the string.</summary>
					<description>Screen-space coordinates are returned.</description>
					<returns>
						<return>
							<type>Vec2</type>
							<description>pos Position in pixel coordinates.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:SetPosition</name>
					<summary>Set the position of the string.</summary>
					<description>Screen-space coordinates are expected.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec2</type>
							<description>New position in pixel coordinates.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplayString:GetArea</name>
					<summary>Get the word-wrapping area of the string.</summary>
					<description>Screen-space coordinates are returned. If `Vec2(0, 0)` is returned, it means there is no word wrapping for this string.</description>
					<returns>
						<return>
							<type>Vec2</type>
							<description>area Word-wrapping area in pixel coordinates.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplayString:SetArea</name>
					<summary>Set the word-wrapping area of the string.</summary>
					<description>Screen-space coordinates are expected. If set to `Vec2(0, 0)`, no word wrapping will occur.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec2</type>
							<description>New word-wrapping area in pixel coordinates.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplayString:SetFlags</name>
					<summary>Set the display string's flags.</summary>
					<parameters>
						<parameter>
							<name>table</name>
							<type>table</type>
							<description>The new table with display flags options.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Color</name>
			<type>tenprimitive</type>
			<summary>Represents an RGBA or RGB color.</summary>
			<description>Components are specified as values clamped to the range [0, 255].</description>
			<members>
				<field>
					<name>r</name>
					<summary>(int) Red component.</summary>
				</field>
				<field>
					<name>g</name>
					<summary>(int) Green component.</summary>
				</field>
				<field>
					<name>b</name>
					<summary>(int) Blue component.</summary>
				</field>
				<field>
					<name>a</name>
					<summary>(int) Alpha component (0 = invisible, 255 = opaque).</summary>
				</field>
				<method>
					<name>Color</name>
					<parameters>
						<parameter>
							<name>R</name>
							<type>int</type>
							<description>Red component.</description>
						</parameter>
						<parameter>
							<name>G</name>
							<type>int</type>
							<description>Green component.</description>
						</parameter>
						<parameter>
							<name>B</name>
							<type>int</type>
							<description>Blue component.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Color</type>
							<description>A new Color object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>__tostring</name>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>This color.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>string</type>
							<description>A string representing R, G, B, and A values.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Rotation</name>
			<type>tenprimitive</type>
			<summary>Represents a 3D rotation.</summary>
			<description>All angle components are in degrees, automatically clamped to the range [0, 360], excluding raw access.</description>
			<members>
				<field>
					<name>x</name>
					<summary>(float) Raw X angle component in degrees.</summary>
					<description>Does not automaticaly clamp to [0, 360].</description>
				</field>
				<field>
					<name>y</name>
					<summary>(float) Raw Y angle component in degrees.</summary>
					<description>Does not automaticaly clamp to [0, 360].</description>
				</field>
				<field>
					<name>z</name>
					<summary>(float) Raw Z angle component in degrees.</summary>
					<description>Does not automaticaly clamp to [0, 360].</description>
				</field>
				<method>
					<name>Rotation</name>
					<summary>Create a Rotation object.</summary>
					<parameters>
						<parameter>
							<name>x</name>
							<type>float</type>
							<description>X angle component in degrees.</description>
						</parameter>
						<parameter>
							<name>y</name>
							<type>float</type>
							<description>Y angle component in degrees.</description>
						</parameter>
						<parameter>
							<name>z</name>
							<type>float</type>
							<description>Z angle component in degrees.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Rotation</type>
							<description>A new Rotation object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Lerp</name>
					<summary>Get the linearly interpolated Rotation between this Rotation and the input Rotation according to the input alpha.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Interpolation target.</description>
						</parameter>
						<parameter>
							<name>alpha</name>
							<type>float</type>
							<description>Interpolation alpha in the range [0, 1].</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Rotation</type>
							<description>Linearly interpolated rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Direction</name>
					<summary>Get the normalized direction vector of this Rotation.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Normalized direction vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Signed</name>
					<summary>Get the signed version of this Rotation, clamped to [-180, 180].</summary>
					<returns>
						<return>
							<type>Rotation</type>
							<description>Signed rotation.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>__tostring</name>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>This Rotation.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>string</type>
							<description>A string showing the X, Y, and Z angle components of this Rotation.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Time</name>
			<type>tenprimitive</type>
			<summary>Represents a time value in game frames, with support for formatting to hours, minutes, seconds, and centiseconds (1/100th of a second).</summary>
			<members>
				<method>
					<name>Time</name>
					<summary>Create a Time object.</summary>
					<returns>
						<return>
							<type>Time</type>
							<description>A new Time object initialized to zero time.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Time</name>
					<summary>Create a Time object from a total game frame count (1 second = 30 frames).</summary>
					<parameters>
						<parameter>
							<name>gameFrames</name>
							<type>int</type>
							<description>Total game frame count.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Time</type>
							<description>A new Time object initialized with the given frame count.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Time</name>
					<summary>Create a Time object from a formatted string.</summary>
					<parameters>
						<parameter>
							<name>formattedTime</name>
							<type>string</type>
							<description>Time in the format "HH:MM:SS[.CC]", where [.CC] is centiseconds and is optional.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Time</type>
							<description>A new Time object parsed from the given string.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Time</name>
					<summary>Create a Time object from a time unit table (hours, minutes, seconds, centiseconds).</summary>
					<parameters>
						<parameter>
							<name>timeUnits</name>
							<type>table</type>
							<description>A time unit table in the format {HH, MM, SS, [CC]}, where [CC] is optional.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Time</type>
							<description>A new Time object initialized with the given values.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Time:GetFrameCount</name>
					<summary>Get the total game frame count.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Total number of game frames.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Time:GetTimeUnits</name>
					<summary>Get the time in hours, minutes, seconds, and centiseconds as a table.</summary>
					<returns>
						<return>
							<type>table</type>
							<description>A table in the format {HH, MM, SS, CC}.</description>
						</return>
					</returns>
				</method>
				<field>
					<name>h</name>
					<summary>(int) Hours component.</summary>
				</field>
				<field>
					<name>m</name>
					<summary>(int) Minutes component.</summary>
				</field>
				<field>
					<name>s</name>
					<summary>(int) Seconds component.</summary>
				</field>
				<field>
					<name>c</name>
					<summary>(int) Centiseconds component.</summary>
				</field>
				<method>
					<name>tostring</name>
					<summary>Convert this Time object to a formatted string.</summary>
					<parameters>
						<parameter>
							<name>this</name>
							<type>Time</type>
							<description>Time object.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>string</type>
							<description>A string showing time in "HH:MM:SS.CC" format.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Vec2</name>
			<type>tenprimitive</type>
			<summary>Represents a float-based 2D vector.</summary>
			<members>
				<field>
					<name>x</name>
					<summary>(float) X component.</summary>
				</field>
				<field>
					<name>y</name>
					<summary>(float) Y component.</summary>
				</field>
				<method>
					<name>Vec2</name>
					<summary>Create a Vec2 object.</summary>
					<parameters>
						<parameter>
							<name>x</name>
							<type>float</type>
							<description>X component.</description>
						</parameter>
						<parameter>
							<name>y</name>
							<type>float</type>
							<description>Y component.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>A new Vec2 object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec</name>
					<summary>Create a Vec2 object.</summary>
					<parameters>
						<parameter>
							<name>value</name>
							<type>float</type>
							<description>X and Z component.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>A new Vec2 object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Normalize</name>
					<summary>Get a copy of this Vec2 normalized to length 1.</summary>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Normalized vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Translate</name>
					<summary>Get a copy of this Vec2 translated in the input Vec2 direction by the input distance.</summary>
					<parameters>
						<parameter>
							<name>dir</name>
							<type>Vec2</type>
							<description>Direction vector. Normalized automatically to length 1.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Translate</name>
					<summary>Get a copy of this Vec2 translated in the direction of the input rotation in degrees by the input distance.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>float</type>
							<description>Rotation in degrees defining the direction.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Translate</name>
					<summary>Get a copy of this Vec2 translated by an offset, where the input relative offset Vec2 is rotated according to the input rotation in degrees.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>float</type>
							<description>Rotation in degrees rotating the input relative offset vector.</description>
						</parameter>
						<parameter>
							<name>relOffset</name>
							<type>Vec2</type>
							<description>Relative offset vector before rotation.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Rotate</name>
					<summary>Get a copy of this Vec2 rotated by the input rotation in degrees.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>float</type>
							<description>Rotation in degrees.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Rotated Vec2.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Lerp</name>
					<summary>Get the linearly interpolated Vec2 between this Vec2 and the input Vec2 according to the input interpolation alpha.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec2</type>
							<description>Interpolation target.</description>
						</parameter>
						<parameter>
							<name>alpha</name>
							<type>float</type>
							<description>Interpolation alpha in the range [0, 1].</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Linearly interpolated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Cross</name>
					<summary>Get the cross product of this Vec2 and the input Vec2.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec2</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Cross product.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Dot</name>
					<summary>Get the dot product of this Vec2 and the input Vec2.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec2</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>float</type>
							<description>Dot product.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Distance</name>
					<summary>Get the distance between this Vec2 and the input Vec2.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec2</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>float</type>
							<description>Distance.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec2:Length</name>
					<summary>Get the length of this Vec2.</summary>
					<returns>
						<return>
							<type>float</type>
							<description>Length.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>__tostring</name>
					<summary>Metafunction.</summary>
					<description>Use tostring(vector).</description>
					<parameters>
						<parameter>
							<name>This</name>
							<type>Vec2</type>
							<description>Vec2.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>string</type>
							<description>A string showing the X and Y components of the Vec2.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>Vec3</name>
			<type>tenprimitive</type>
			<summary>Represents a float-based 3D vector.</summary>
			<members>
				<field>
					<name>x</name>
					<summary>(float) X component.</summary>
				</field>
				<field>
					<name>y</name>
					<summary>(float) Y component.</summary>
				</field>
				<field>
					<name>z</name>
					<summary>(float) Z component.</summary>
				</field>
				<method>
					<name>Vec3</name>
					<summary>Create a Vec3 object.</summary>
					<parameters>
						<parameter>
							<name>x</name>
							<type>float</type>
							<description>X component.</description>
						</parameter>
						<parameter>
							<name>y</name>
							<type>float</type>
							<description>Y component.</description>
						</parameter>
						<parameter>
							<name>z</name>
							<type>float</type>
							<description>Z component.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>A new Vec3 object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3</name>
					<summary>Create a Vec3 object.</summary>
					<parameters>
						<parameter>
							<name>value</name>
							<type>float</type>
							<description>X, Y, and Z component.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>A new Vec3 object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Normalize</name>
					<summary>Get a copy of this Vec3 normalized to length 1.</summary>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Normalized vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Translate</name>
					<summary>Get a copy of this Vec3 translated in the input Vec3 direction by the input distance.</summary>
					<parameters>
						<parameter>
							<name>dir</name>
							<type>Vec3</type>
							<description>Direction vector. Normalized automatically to length 1.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Translate</name>
					<summary>Get a copy of this Vec3 translated in the direction of the input Rotation object by the input distance.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Rotation object defining the direction.</description>
						</parameter>
						<parameter>
							<name>dist</name>
							<type>float</type>
							<description>Distance.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Translate</name>
					<summary>Get a copy of this Vec3 translated by an offset, where the input relative offset Vec3 is rotated according to the input Rotation object.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Rotation object rotating the input relative offset vector.</description>
						</parameter>
						<parameter>
							<name>relOffset</name>
							<type>Vec3</type>
							<description>Relative offset vector before rotation.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Translated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Rotate</name>
					<summary>Get a copy of this Vec3 rotated by the input Rotation object.</summary>
					<parameters>
						<parameter>
							<name>rot</name>
							<type>Rotation</type>
							<description>Rotation object.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Rotated Vec3.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Lerp</name>
					<summary>Get the linearly interpolated Vec3 between this Vec3 and the input Vec3 according to the input interpolation alpha.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec3</type>
							<description>Interpolation target.</description>
						</parameter>
						<parameter>
							<name>alpha</name>
							<type>float</type>
							<description>Interpolation alpha in the range [0, 1].</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Linearly interpolated vector.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Cross</name>
					<summary>Get the cross product of this Vec3 and the input Vec3.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec3</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>Vec3</type>
							<description>Cross product.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Dot</name>
					<summary>Get the dot product of this Vec3 and the input Vec3.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec3</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>float</type>
							<description>Dot product.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Distance</name>
					<summary>Get the distance between this Vec3 and the input Vec3.</summary>
					<parameters>
						<parameter>
							<name>vector</name>
							<type>Vec3</type>
							<description>Input vector.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>float</type>
							<description>Distance.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>Vec3:Length</name>
					<summary>Get the length of this Vec3.</summary>
					<returns>
						<return>
							<type>float</type>
							<description>Length.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>__tostring</name>
					<summary>Metafunction.</summary>
					<description>Use tostring(vector).</description>
					<parameters>
						<parameter>
							<name>This</name>
							<type>Vec3</type>
							<description>Vec3.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>string</type>
							<description>A string showing the X, Y, and Z components of the Vec3.</description>
						</return>
					</returns>
				</method>
			</members>
		</class>
		<class>
			<name>View.DisplaySprite</name>
			<type>tenclass</type>
			<summary>Represents a display sprite.</summary>
			<members>
				<method>
					<name>DisplaySprite</name>
					<summary>Create a DisplaySprite object.</summary>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>ID of the sprite sequence object.</description>
						</parameter>
						<parameter>
							<name>index</name>
							<type>int</type>
							<description>Index of the sprite in the sequence.</description>
						</parameter>
						<parameter>
							<name>pos</name>
							<type>Vec2</type>
							<description>Display position in percent.</description>
						</parameter>
						<parameter>
							<name>rot</name>
							<type>float</type>
							<description>Rotation in degrees.</description>
						</parameter>
						<parameter>
							<name>scale</name>
							<type>Vec2</type>
							<description>Horizontal and vertical scale in percent. Scaling is interpreted by the DisplaySpriteEnum.ScaleMode passed to the Draw() function call.</description>
						</parameter>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<optional>true</optional>
							<defaultValue>Color(255, 255, 255)</defaultValue>
							<description>Color.</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>DisplaySprite</type>
							<description>A new DisplaySprite object.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite</name>
					<summary>Create a DisplaySprite object with a video image.</summary>
					<description>Video should be played using @{View.PlayVideo} function in a background mode. If no video is played, sprite will not show.</description>
					<parameters>
						<parameter>
							<name>pos</name>
							<type>Vec2</type>
							<description>Display position in percent.</description>
						</parameter>
						<parameter>
							<name>rot</name>
							<type>float</type>
							<description>Rotation in degrees.</description>
						</parameter>
						<parameter>
							<name>scale</name>
							<type>Vec2</type>
							<description>Horizontal and vertical scale in percent. Scaling is interpreted by the DisplaySpriteEnum.ScaleMode passed to the Draw() function call.</description>
						</parameter>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<optional>true</optional>
							<description>Color. __Default: Color(255, 255, 255, 255)__</description>
						</parameter>
					</parameters>
					<returns>
						<return>
							<type>DisplaySprite</type>
							<description>A new DisplaySprite object with attached video image.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetObjectID</name>
					<summary>Get the object ID of the sprite sequence object used by the display sprite.</summary>
					<returns>
						<return>
							<type>Objects.ObjID</type>
							<description>Sprite sequence object ID.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetSpriteID</name>
					<summary>Get the sprite ID in the sprite sequence object used by the display sprite.</summary>
					<returns>
						<return>
							<type>int</type>
							<description>Sprite ID in the sprite sequence object. Value __-1__ means that it is a background video, played using @{View.PlayVideo}.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetPosition</name>
					<summary>Get the display position of the display sprite in percent.</summary>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Display position in percent.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetRotation</name>
					<summary>Get the rotation of the display sprite in degrees.</summary>
					<returns>
						<return>
							<type>float</type>
							<description>Rotation in degrees.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetScale</name>
					<summary>Get the horizontal and vertical scale of the display sprite in percent.</summary>
					<returns>
						<return>
							<type>Vec2</type>
							<description>Horizontal and vertical scale in percent.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:GetColor</name>
					<summary>Get the color of the display sprite.</summary>
					<returns>
						<return>
							<type>Color</type>
							<description>Color.</description>
						</return>
					</returns>
				</method>
				<method>
					<name>DisplaySprite:SetObjectID</name>
					<summary>Set the sprite sequence object ID used by the display sprite.</summary>
					<parameters>
						<parameter>
							<name>objectID</name>
							<type>Objects.ObjID</type>
							<description>New sprite sequence object ID.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:SetSpriteID</name>
					<summary>Set the sprite ID in the sprite sequence object used by the display sprite.</summary>
					<parameters>
						<parameter>
							<name>spriteID</name>
							<type>int</type>
							<description>New sprite ID in the sprite sequence object.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:SetPosition</name>
					<summary>Set the display position of the display sprite in percent.</summary>
					<parameters>
						<parameter>
							<name>position</name>
							<type>Vec2</type>
							<description>New display position in percent.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:SetRotation</name>
					<summary>Set the rotation of the display sprite in degrees.</summary>
					<parameters>
						<parameter>
							<name>rotation</name>
							<type>float</type>
							<description>New rotation in degrees.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:SetScale</name>
					<summary>Set the horizontal and vertical scale of the display sprite in percent.</summary>
					<parameters>
						<parameter>
							<name>scale</name>
							<type>float</type>
							<description>New horizontal and vertical scale in percent.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:SetColor</name>
					<summary>Set the color of the display sprite.</summary>
					<parameters>
						<parameter>
							<name>color</name>
							<type>Color</type>
							<description>New color.</description>
						</parameter>
					</parameters>
				</method>
				<method>
					<name>DisplaySprite:Draw</name>
					<summary>Draw the display sprite in display space for the current frame.</summary>
					<parameters>
						<parameter>
							<name>priority</name>
							<type>int</type>
							<optional>true</optional>
							<defaultValue>0</defaultValue>
							<description>Draw priority. Can be thought of as a layer, with higher values having precedence.
 Negative values will draw sprite above strings, while positive values will draw it under.</description>
						</parameter>
						<parameter>
							<name>alignMode</name>
							<type>View.AlignMode</type>
							<optional>true</optional>
							<defaultValue>View.AlignMode.CENTER</defaultValue>
							<description>Align mode interpreting an offset from the sprite's position.</description>
						</parameter>
						<parameter>
							<name>scaleMode</name>
							<type>View.ScaleMode</type>
							<optional>true</optional>
							<defaultValue>View.ScaleMode.FIT</defaultValue>
							<description>Scale mode interpreting the display sprite's horizontal and vertical scale.</description>
						</parameter>
						<parameter>
							<name>blendMode</name>
							<type>Effects.BlendID</type>
							<optional>true</optional>
							<defaultValue>Effects.BlendID.ALPHABLEND</defaultValue>
							<description>Blend mode.</description>
						</parameter>
					</parameters>
				</method>
			</members>
		</class>
		<class>
			<name>Flow.AnimSettings</name>
			<type>tenclass</type>
			<description>These settings determine whether a specific moveset is available in-game.</description>
			<members>
				<field>
					<name>crawlExtended</name>
					<summary>(bool) Extended crawl moveset.</summary>
					<description>When enabled, player will be able to traverse across one-click steps in crawlspaces.</description>
				</field>
				<field>
					<name>crouchRoll</name>
					<summary>(bool) Crouch roll.</summary>
					<description>When enabled, player can perform crawlspace roll by pressing sprint key.</description>
				</field>
				<field>
					<name>crawlspaceSwandive</name>
					<summary>(bool) Crawlspace dive.</summary>
					<description>When enabled, player will be able to swandive into crawlspaces.</description>
				</field>
				<field>
					<name>overhangClimb</name>
					<summary>(bool) Overhang climbing.</summary>
					<description>Enables overhang climbing feature. Currently does not work.</description>
				</field>
				<field>
					<name>slideExtended</name>
					<summary>(bool) Extended slide mechanics.</summary>
					<description>If enabled, player will be able to change slide direction with controls. Currently does not work.</description>
				</field>
				<field>
					<name>sprintJump</name>
					<summary>(bool) Sprint jump.</summary>
					<description>If enabled, player will be able to perform extremely long jump when sprinting.</description>
				</field>
				<field>
					<name>ledgeJumps</name>
					<summary>(bool) Ledge jumps.</summary>
					<description>If this setting is enabled, player will be able to jump upwards while hanging on the ledge.</description>
				</field>
				<field>
					<name>poseTimeout</name>
					<summary>(int) Pose timeout.</summary>
					<description>If this setting is larger than 0, idle standing pose animation will be performed after given timeout (in seconds).</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.FlareSettings</name>
			<type>tenclass</type>
			<description>These settings change appearance and behaviour of a flare.</description>
			<members>
				<field>
					<name>color</name>
					<summary>(Color) Flare color.</summary>
					<description>Flare color. Used for sparks and lensflare coloring as well.</description>
				</field>
				<field>
					<name>offset</name>
					<summary>(Vec3) Muzzle offset.</summary>
					<description>A relative muzzle offset where light and particle effects originate from.</description>
				</field>
				<field>
					<name>range</name>
					<summary>(int) Light range.</summary>
					<description>Flare light radius or range. Represented in "clicks" equal to 256 world units.</description>
				</field>
				<field>
					<name>timeout</name>
					<summary>(int) Burn timeout.</summary>
					<description>Flare burn timeout. Flare will stop working after given timeout (specified in seconds).</description>
				</field>
				<field>
					<name>pickupCount</name>
					<summary>(int) Default flare pickup count.</summary>
					<description>Specifies amount of flares that you get when you pick up a box of flares.</description>
				</field>
				<field>
					<name>lensflareBrightness</name>
					<summary>(float) Lens flare brightness.</summary>
					<description>Brightness multiplier. Specifies how bright lens flare is in relation to light (on a range from 0 to 1).</description>
				</field>
				<field>
					<name>sparks</name>
					<summary>(bool) Toggle spark effect.</summary>
					<description>Spark effect. Determines whether flare generates sparks when burning.</description>
				</field>
				<field>
					<name>smoke</name>
					<summary>(bool) Toggle smoke effect.</summary>
					<description>Smoke effect. Determines whether flare generates smoke when burning.</description>
				</field>
				<field>
					<name>muzzleGlow</name>
					<summary>(bool) Toggle muzzle glow effect.</summary>
					<description>Glow effect. Determines whether flare generates glow when burning.</description>
				</field>
				<field>
					<name>flicker</name>
					<summary>(bool) Toggle flicker effect.</summary>
					<description>Light and lensflare flickering. When turned off, flare light will be constant.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.HairSettings</name>
			<type>tenclass</type>
			<description>This is a table of braid object settings. &lt;br&gt; Table consists of three entries, with first one representing classic Lara braid, and 2 and 3 representing left and right young Lara braids respectively. Therefore, if you want to access classic Lara braid settings, use `settings.Hair[1]`, and so on.</description>
			<members>
				<field>
					<name>rootMesh</name>
					<summary>(int) Root mesh to which hair object will attach to.</summary>
					<description>Index of a root mesh to which hair will attach. Root mesh may be different for each hair object.</description>
				</field>
				<field>
					<name>offset</name>
					<summary>(Vec3) Relative braid offset to a headmesh. Not used with skinned hair mesh.</summary>
					<description>Specifies how braid is positioned in relation to a headmesh.</description>
				</field>
				<field>
					<name>indices</name>
					<summary>(table) Braid connection indices. Not used with skinned hair mesh.</summary>
					<description>A list of headmesh's vertex connection indices. Each index corresponds to nearest braid rootmesh vertex. Amount of indices is unlimited.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.WeaponSettings</name>
			<type>tenclass</type>
			<description>This is a table of weapon settings, with several parameters available for every weapon. Access particular weapon's settings by using @{Objects.WeaponType} as an index for this table, e.g. `settings.Weapons[Flow.WeaponType.PISTOLS]`.</description>
			<members>
				<field>
					<name>accuracy</name>
					<summary>(float) Shooting accuracy.</summary>
					<description>Determines accuracy range in angles (smaller angles mean higher accuracy). Applicable only for firearms.</description>
				</field>
				<field>
					<name>targetingDistance</name>
					<summary>(float) Targeting distance.</summary>
					<description>Specifies maximum targeting distance in world units (1 block = 1024 world units) for a given weapon.</description>
				</field>
				<field>
					<name>interval</name>
					<summary>(float) Shooting interval.</summary>
					<description>Specifies an interval (in frames), after which Lara is able to shoot again. Not applicable for backholster weapons.</description>
				</field>
				<field>
					<name>damage</name>
					<summary>(int) Damage.</summary>
					<description>Amount of hit points taken for every hit.</description>
				</field>
				<field>
					<name>alternateDamage</name>
					<summary>(int) Alternate damage.</summary>
					<description>For crossbow, specifies damage for explosive ammo.</description>
				</field>
				<field>
					<name>waterLevel</name>
					<summary>(int) Water level.</summary>
					<description>Specifies water depth, at which Lara will put weapons back into holsters, indicating it's not possible to use it in water.</description>
				</field>
				<field>
					<name>pickupCount</name>
					<summary>(int) Default ammo pickup count.</summary>
					<description>Amount of ammo which is given with every ammo pickup for this weapon.</description>
				</field>
				<field>
					<name>flashColor</name>
					<summary>(Color) Gunflash color.</summary>
					<description>specifies the color of the gunflash.</description>
				</field>
				<field>
					<name>flashRange</name>
					<summary>(int) Gunflash range.</summary>
					<description>specifies the range of the gunflash.</description>
				</field>
				<field>
					<name>flashDuration</name>
					<summary>(int) Gunflash duration.</summary>
					<description>specifies the duration of a gunflash effect.</description>
				</field>
				<field>
					<name>smoke</name>
					<summary>(bool) Gun smoke.</summary>
					<description>if set to true, indicates that weapon emits gun smoke.</description>
				</field>
				<field>
					<name>shell</name>
					<summary>(bool) Gun shell.</summary>
					<description>If set to true, indicates that weapon emits gun shell. Applicable only for firearms.</description>
				</field>
				<field>
					<name>muzzleFlash</name>
					<summary>(bool) Display muzzle flash.</summary>
					<description>specifies whether muzzle flash should be displayed or not.</description>
				</field>
				<field>
					<name>muzzleGlow</name>
					<summary>(bool) Display muzzle glow.</summary>
					<description>specifies whether muzzle glow should be displayed or not.</description>
				</field>
				<field>
					<name>colorizeMuzzleFlash</name>
					<summary>(bool) Colorize muzzle flash.</summary>
					<description>specifies whether muzzle flash should be tinted with the same color as gunflash color.</description>
				</field>
				<field>
					<name>muzzleOffset</name>
					<summary>(Vec3) Muzzle offset.</summary>
					<description>specifies offset for spawning muzzle gunflash effects.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.SystemSettings</name>
			<type>tenclass</type>
			<description>Global system settings that is not directly related to gameplay.</description>
			<members>
				<field>
					<name>errorMode</name>
					<summary>(ErrorMode) How should the application respond to script errors?</summary>
					<description>Error mode to use.</description>
				</field>
				<field>
					<name>multithreaded</name>
					<summary>(bool) Use multithreading in certain calculations. &lt;br&gt;</summary>
					<description>When set to `true`, some performance-critical calculations will be performed in parallel, which can give a significant performance boost. Don't disable unless you have problems with launching or using TombEngine.</description>
				</field>
				<field>
					<name>fastReload</name>
					<summary>(bool) Can the game utilize the fast reload feature? &lt;br&gt;</summary>
					<description>When set to `true`, the game will attempt to perform fast savegame reloading if current level is the same as the level loaded from the savegame. It will not work if the level timestamp or checksum has changed (i.e. level was updated). If set to `false`, this functionality is turned off.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.GraphicsSettings</name>
			<type>tenclass</type>
			<description>These settings are used to enable or disable certain graphics features.</description>
			<members>
				<field>
					<name>skinning</name>
					<summary>(bool) Enable skinning.</summary>
					<description>If enabled, skinning will be used for animated objects with skinned mesh. Disable to force classic TR workflow.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.PhysicsSettings</name>
			<type>tenclass</type>
			<description>Here you will find various settings for game world physics.</description>
			<members>
				<field>
					<name>gravity</name>
					<summary>(float) Global world gravity.</summary>
					<description>Specifies global gravity. Mostly affects Lara and several other objects.</description>
				</field>
				<field>
					<name>swimVelocity</name>
					<summary>(float) Swim velocity.</summary>
					<description>Specifies swim velocity for Lara. Affects both surface and underwater.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.HudSettings</name>
			<type>tenclass</type>
			<description>These settings determine visibility of particular in-game HUD elements.</description>
			<members>
				<field>
					<name>statusBars</name>
					<summary>(bool) Toggle in-game status bars visibility.</summary>
					<description>If disabled, all status bars (health, air, stamina) will be hidden.</description>
				</field>
				<field>
					<name>loadingBar</name>
					<summary>(bool) Toggle loading bar visibility.</summary>
					<description>If disabled, loading bar will be invisible in game.</description>
				</field>
				<field>
					<name>speedometer</name>
					<summary>(bool) Toggle speedometer visibility.</summary>
					<description>If disabled, speedometer will be invisible in game.</description>
				</field>
				<field>
					<name>pickupNotifier</name>
					<summary>(bool) Toggle pickup notifier visibility.</summary>
					<description>If disabled, pickup notifier will be invisible in game.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.CameraSettings</name>
			<type>tenclass</type>
			<description>Parameters to customize camera and everything related to it.</description>
			<members>
				<field>
					<name>binocularLightColor</name>
					<summary>(Color) Determines highlight color in binocular mode.</summary>
					<description>Color of highlight, when player presses action. Zero color means there will be no highlight.</description>
				</field>
				<field>
					<name>lasersightLightColor</name>
					<summary>(Color) Determines highlight color in lasersight mode.</summary>
					<description>Lasersight highlight color. Zero color means there will be no highlight.</description>
				</field>
				<field>
					<name>objectCollision</name>
					<summary>(bool) Specify whether camera can collide with objects.</summary>
					<description>When enabled, camera will collide with moveables and statics. Disable for TR4-like camera behaviour.</description>
				</field>
			</members>
		</class>
		<class>
			<name>Flow.Settings</name>
			<type>tenclass</type>
			<description>Global engine settings which don't fall into particular category or can't be assigned to a specific object. Can be accessed using @{Flow.SetSettings} and @{Flow.GetSettings} functions.</description>
			<members>
				<field>
					<name>Animations</name>
					<type>Flow.AnimSettings</type>
					<summary>These settings determine whether a specific moveset is available in-game.</summary>
					<description>These settings determine whether a specific moveset is available in-game.</description>
				</field>
				<field>
					<name>Camera</name>
					<type>Flow.CameraSettings</type>
					<summary>Parameters to customize camera and everything related to it.</summary>
					<description>Parameters to customize camera and everything related to it.</description>
				</field>
				<field>
					<name>Flare</name>
					<type>Flow.FlareSettings</type>
					<summary>These settings change appearance and behaviour of a flare.</summary>
					<description>These settings change appearance and behaviour of a flare.</description>
				</field>
				<field>
					<name>Graphics</name>
					<type>Flow.GraphicsSettings</type>
					<summary>These settings are used to enable or disable certain graphics features.</summary>
					<description>These settings are used to enable or disable certain graphics features.</description>
				</field>
				<field>
					<name>Hair</name>
					<type>HairSettings[]</type>
					<summary>This is a table of braid object settings. &lt;br&gt; Table consists of three entries, with first one representing classic Lara braid, and 2 and 3 representing left and right young Lara braids respectively. Therefore, if you want to access classic Lara braid settings, use `settings.Hair[1]`, and so on.</summary>
					<description>This is a table of braid object settings. &lt;br&gt; Table consists of three entries, with first one representing classic Lara braid, and 2 and 3 representing left and right young Lara braids respectively. Therefore, if you want to access classic Lara braid settings, use `settings.Hair[1]`, and so on.</description>
				</field>
				<field>
					<name>Hud</name>
					<type>Flow.HudSettings</type>
					<summary>These settings determine visibility of particular in-game HUD elements.</summary>
					<description>These settings determine visibility of particular in-game HUD elements.</description>
				</field>
				<field>
					<name>Physics</name>
					<type>Flow.PhysicsSettings</type>
					<summary>Here you will find various settings for game world physics.</summary>
					<description>Here you will find various settings for game world physics.</description>
				</field>
				<field>
					<name>System</name>
					<type>Flow.SystemSettings</type>
					<summary>Global system settings that is not directly related to gameplay.</summary>
					<description>Global system settings that is not directly related to gameplay.</description>
				</field>
				<field>
					<name>Weapons</name>
					<type>{ [WeaponType]: WeaponSettings }</type>
					<summary>This is a table of weapon settings, with several parameters available for every weapon. Access particular weapon's settings by using @{Objects.WeaponType} as an index for this table, e.g. `settings.Weapons[Flow.WeaponType.PISTOLS]`.</summary>
					<description>This is a table of weapon settings, with several parameters available for every weapon. Access particular weapon's settings by using @{Objects.WeaponType} as an index for this table, e.g. `settings.Weapons[Flow.WeaponType.PISTOLS]`.</description>
				</field>
			</members>
		</class>
	</classes>
	<enums>
		<enum>
			<name>Collision.MaterialType</name>
			<summary>Constants for material types.</summary>
			<description>Corresponds to Tomb Editor texture sound material types.
 To be used with @{Collision.Probe.GetFloorMaterialType} and @{Collision.Probe.GetCeilingMaterialType}.</description>
			<values>
				<value>
					<name>MUD</name>
					<summary>Mud material type.</summary>
				</value>
				<value>
					<name>SNOW</name>
					<summary>Snow material type.</summary>
				</value>
				<value>
					<name>SAND</name>
					<summary>Sand material type.</summary>
				</value>
				<value>
					<name>GRAVEL</name>
					<summary>Gravel material type.</summary>
				</value>
				<value>
					<name>ICE</name>
					<summary>Ice material type.</summary>
				</value>
				<value>
					<name>WATER</name>
					<summary>Water material type.</summary>
				</value>
				<value>
					<name>STONE</name>
					<summary>Stone material type.</summary>
				</value>
				<value>
					<name>WOOD</name>
					<summary>Wood material type.</summary>
				</value>
				<value>
					<name>METAL</name>
					<summary>Metal material type.</summary>
				</value>
				<value>
					<name>MARBLE</name>
					<summary>Marble material type.</summary>
				</value>
				<value>
					<name>GRASS</name>
					<summary>Grass material type.</summary>
				</value>
				<value>
					<name>CONCRETE</name>
					<summary>Concrete material type.</summary>
				</value>
				<value>
					<name>OLD_WOOD</name>
					<summary>Old wood material type.</summary>
				</value>
				<value>
					<name>OLD_METAL</name>
					<summary>Old metal material type.</summary>
				</value>
				<value>
					<name>CUSTOM_1</name>
					<summary>Custom material type 1.</summary>
				</value>
				<value>
					<name>CUSTOM_2</name>
					<summary>Custom material type 2.</summary>
				</value>
				<value>
					<name>CUSTOM_3</name>
					<summary>Custom material type 3.</summary>
				</value>
				<value>
					<name>CUSTOM_4</name>
					<summary>Custom material type 4.</summary>
				</value>
				<value>
					<name>CUSTOM_5</name>
					<summary>Custom material type 5.</summary>
				</value>
				<value>
					<name>CUSTOM_6</name>
					<summary>Custom material type 6.</summary>
				</value>
				<value>
					<name>CUSTOM_7</name>
					<summary>Custom material type 7.</summary>
				</value>
				<value>
					<name>CUSTOM_8</name>
					<summary>Custom material type 8.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Effects.BlendID</name>
			<summary>Constants for blend mode IDs.</summary>
			<description>All blending modes except `OPAQUE`, `ADDITIVE` and `ALPHA_BLEND` will use depth sorting for applicable polygons.
 This may reduce engine performance, so it is preferable to minimize usage of other blending modes.</description>
			<values>
				<value>
					<name>OPAQUE</name>
					<summary>No transparency.</summary>
				</value>
				<value>
					<name>ALPHA_TEST</name>
					<summary>So called "magenta transparency", every pixel can be either fully transparent or opaque.</summary>
				</value>
				<value>
					<name>ADDITIVE</name>
					<summary>Standard additive blending.</summary>
				</value>
				<value>
					<name>NO_DEPTH_TEST</name>
					<summary>No depth test blending.</summary>
				</value>
				<value>
					<name>SUBTRACTIVE</name>
					<summary>Subtractive blending, with brighter texture areas making everything darker behind them.</summary>
				</value>
				<value>
					<name>WIREFRAME</name>
					<summary>Wireframe mode.</summary>
				</value>
				<value>
					<name>EXCLUDE</name>
					<summary>Produces "inversion" effect.</summary>
				</value>
				<value>
					<name>SCREEN</name>
					<summary>Similar to `ADDITIVE`, but without excessive overbright.</summary>
				</value>
				<value>
					<name>LIGHTEN</name>
					<summary>Similar to `SCREEN`, but with a little different blending formula.</summary>
				</value>
				<value>
					<name>ALPHA_BLEND</name>
					<summary>True alpha blending.</summary>
					<description>Should be used for textures with gradually changing alpha values.</description>
				</value>
			</values>
		</enum>
		<enum>
			<name>Effects.EffectID</name>
			<summary>Constants for effect IDs.</summary>
			<description>To be used with @{Objects.Moveable.SetEffect} and @{Objects.Moveable.GetEffect} functions.</description>
			<values>
				<value>
					<name>NONE</name>
					<summary>No effect.</summary>
				</value>
				<value>
					<name>FIRE</name>
					<summary>Fire effect.</summary>
				</value>
				<value>
					<name>SPARKS</name>
					<summary>Sparks effect.</summary>
				</value>
				<value>
					<name>SMOKE</name>
					<summary>Smoke effect.</summary>
				</value>
				<value>
					<name>ELECTRIC_IGNITE</name>
					<summary>Electric ignite effect.</summary>
				</value>
				<value>
					<name>RED_IGNITE</name>
					<summary>Red ignite effect.</summary>
				</value>
				<value>
					<name>CUSTOM</name>
					<summary>Custom effect.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Effects.StreamerFeatherMode</name>
			<summary>Constants for feather modes.</summary>
			<description>To be used with @{Effects.EmitStreamer} function.</description>
			<values>
				<value>
					<name>NONE</name>
					<summary>No feather effect.</summary>
				</value>
				<value>
					<name>CENTER</name>
					<summary>Center feather effect.</summary>
				</value>
				<value>
					<name>LEFT</name>
					<summary>Left feather effect.</summary>
				</value>
				<value>
					<name>RIGHT</name>
					<summary>Right feather effect.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Effects.ParticleAnimationType</name>
			<summary>Constants for particle animation type constants.</summary>
			<description>To be used with @{Effects.EmitAdvancedParticle} function.</description>
			<values>
				<value>
					<name>LOOP</name>
					<summary>Frames loop sequentially.</summary>
				</value>
				<value>
					<name>ONE_SHOT</name>
					<summary>Frames play once and freeze on the last frame.</summary>
				</value>
				<value>
					<name>BACK_AND_FORTH</name>
					<summary>Frames bounce back and forth.</summary>
				</value>
				<value>
					<name>LIFE_TIME_SPREAD</name>
					<summary>Frames are distributed over the particle's lifetime.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.ErrorMode</name>
			<summary>Constants for error modes.</summary>
			<description>To be used in @{Flow.Settings.System.errorMode} setting.
 &lt;br&gt;
 In all of these modes, an *unrecoverable* error will boot you to the title level. If the title level itself
 has an unrecoverable error, the game will close.</description>
			<values>
				<value>
					<name>SILENT</name>
					<summary>Do nothing when a recoverable script error is hit.</summary>
					<description>&lt;br&gt;
 Think _very_ carefully before using this setting.
 These error modes are here to help you to keep your scripts working properly,
 but if you opt to ignore errors, you won't be alerted if you've misused a function or passed an invalid argument.</description>
				</value>
				<value>
					<name>WARN</name>
					<summary>Print to the log file and continue running the application when a recoverable script error is hit.</summary>
					<description>Choose this one if booting to the title level is too much for you.</description>
				</value>
				<value>
					<name>TERMINATE</name>
					<summary>Print to the log file and return to the title level when any script error is hit.</summary>
					<description>This is the one you will want to go for if you want to know _immediately_ if something has gone wrong.</description>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.FreezeMode</name>
			<summary>Constants for freeze modes.</summary>
			<description>To be used with @{Flow.GetFreezeMode} and @{Flow.SetFreezeMode} functions.</description>
			<values>
				<value>
					<name>NONE</name>
					<summary>Normal in-game operation.</summary>
				</value>
				<value>
					<name>FULL</name>
					<summary>Game is completely frozen, as in pause or inventory menus.</summary>
				</value>
				<value>
					<name>SPECTATOR</name>
					<summary>Game is completely frozen, but with ability to control camera.</summary>
				</value>
				<value>
					<name>PLAYER</name>
					<summary>Game is completely frozen, but with ability to control player.</summary>
					<description>Experimental.</description>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.GameStatus</name>
			<summary>Constants for game statuses.</summary>
			<description>To be used with @{Flow.GetGameStatus} function.</description>
			<values>
				<value>
					<name>NORMAL</name>
					<summary>Normal game status.</summary>
				</value>
				<value>
					<name>NEW_GAME</name>
					<summary>New game status.</summary>
				</value>
				<value>
					<name>LOAD_GAME</name>
					<summary>Load game status.</summary>
				</value>
				<value>
					<name>EXIT_TO_TITLE</name>
					<summary>Exit to title status.</summary>
				</value>
				<value>
					<name>EXIT_GAME</name>
					<summary>Exit game status.</summary>
				</value>
				<value>
					<name>LARA_DEAD</name>
					<summary>Player dead status.</summary>
				</value>
				<value>
					<name>LEVEL_COMPLETE</name>
					<summary>Level complete status.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.ItemAction</name>
			<summary>Constants for item actions.</summary>
			<description>To be used with @{Flow.InventoryItem} class.</description>
			<values>
				<value>
					<name>USE</name>
					<summary>Use the item.</summary>
				</value>
				<value>
					<name>EQUIP</name>
					<summary>Equip the item.</summary>
					<description>Used only with weapons.</description>
				</value>
				<value>
					<name>EXAMINE</name>
					<summary>Examine the item.</summary>
					<description>Used only with examine objects.</description>
				</value>
				<value>
					<name>COMBINE</name>
					<summary>Combine the item with another item.</summary>
					<description>Used only with combineable objects.</description>
				</value>
				<value>
					<name>SEPARATE</name>
					<summary>Separate items.</summary>
					<description>Used only with objects that were combined before.</description>
				</value>
				<value>
					<name>LOAD</name>
					<summary>Load game.</summary>
				</value>
				<value>
					<name>SAVE</name>
					<summary>Save game.</summary>
				</value>
				<value>
					<name>STATISTICS</name>
					<summary>Show statistics screen.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_SHOTGUN</name>
					<summary>Choose ammo type for the shotgun.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_CROSSBOW</name>
					<summary>Choose ammo type for the crossbow.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_GRENADEGUN</name>
					<summary>Choose ammo type for the grenade launcher.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_UZI</name>
					<summary>Choose ammo type for the Uzi.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_PISTOLS</name>
					<summary>Choose ammo type for the pistols.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_REVOLVER</name>
					<summary>Choose ammo type for the revolver.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_HK</name>
					<summary>Choose ammo type for the HK gun.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_HARPOON</name>
					<summary>Choose ammo type for the harpoon gun.</summary>
				</value>
				<value>
					<name>CHOOSE_AMMO_ROCKET</name>
					<summary>Choose ammo type for the rocket launcher.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.LaraType</name>
			<summary>Constants for player types.</summary>
			<values>
				<value>
					<name>Normal</name>
					<summary>Normal Lara.</summary>
				</value>
				<value>
					<name>Young</name>
					<summary>Young Lara.</summary>
				</value>
				<value>
					<name>Bunhead</name>
					<summary>Bunhead Lara.</summary>
				</value>
				<value>
					<name>Catsuit</name>
					<summary>Catsuit Lara.</summary>
				</value>
				<value>
					<name>Divesuit</name>
					<summary>Divesuit Lara.</summary>
				</value>
				<value>
					<name>Invisible</name>
					<summary>Invisible Lara.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Flow.WeatherType</name>
			<summary>Constants for weather types.</summary>
			<values>
				<value>
					<name>None</name>
					<summary>No weather.</summary>
				</value>
				<value>
					<name>Rain</name>
					<summary>Rain weather.</summary>
				</value>
				<value>
					<name>Snow</name>
					<summary>Snow weather.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Input.ActionID</name>
			<summary>Constants for action key IDs.</summary>
			<description>Contains mapped action IDs, raw keyboard input IDs, and raw mouse input IDs.
 To be used with @{Input.IsKeyHit}, @{Input.IsKeyHeld}, and other similar functions.</description>
			<values>
				<value>
					<name>FORWARD</name>
					<summary>Forward action.</summary>
				</value>
				<value>
					<name>BACK</name>
					<summary>Back action.</summary>
				</value>
				<value>
					<name>LEFT</name>
					<summary>Left action.</summary>
				</value>
				<value>
					<name>RIGHT</name>
					<summary>Right action.</summary>
				</value>
				<value>
					<name>STEP_LEFT</name>
					<summary>Step left action.</summary>
				</value>
				<value>
					<name>STEP_RIGHT</name>
					<summary>Step right action.</summary>
				</value>
				<value>
					<name>WALK</name>
					<summary>Walk action.</summary>
				</value>
				<value>
					<name>SPRINT</name>
					<summary>Sprint action.</summary>
				</value>
				<value>
					<name>CROUCH</name>
					<summary>Crouch action.</summary>
				</value>
				<value>
					<name>JUMP</name>
					<summary>Jump action.</summary>
				</value>
				<value>
					<name>ROLL</name>
					<summary>Roll action.</summary>
				</value>
				<value>
					<name>ACTION</name>
					<summary>Action key.</summary>
				</value>
				<value>
					<name>DRAW</name>
					<summary>Draw weapon action.</summary>
				</value>
				<value>
					<name>LOOK</name>
					<summary>Look action.</summary>
				</value>
				<value>
					<name>ACCELERATE</name>
					<summary>Accelerate action.</summary>
				</value>
				<value>
					<name>REVERSE</name>
					<summary>Reverse action.</summary>
				</value>
				<value>
					<name>FASTER</name>
					<summary>Faster action.</summary>
				</value>
				<value>
					<name>SLOWER</name>
					<summary>Slower action.</summary>
				</value>
				<value>
					<name>BRAKE</name>
					<summary>Brake action.</summary>
				</value>
				<value>
					<name>FIRE</name>
					<summary>Fire action.</summary>
				</value>
				<value>
					<name>FLARE</name>
					<summary>Flare action.</summary>
				</value>
				<value>
					<name>SMALL_MEDIPACK</name>
					<summary>Small medipack action.</summary>
				</value>
				<value>
					<name>LARGE_MEDIPACK</name>
					<summary>Large medipack action.</summary>
				</value>
				<value>
					<name>PREVIOUS_WEAPON</name>
					<summary>Previous weapon action.</summary>
				</value>
				<value>
					<name>NEXT_WEAPON</name>
					<summary>Next weapon action.</summary>
				</value>
				<value>
					<name>WEAPON_1</name>
					<summary>Weapon 1 action.</summary>
				</value>
				<value>
					<name>WEAPON_2</name>
					<summary>Weapon 2 action.</summary>
				</value>
				<value>
					<name>WEAPON_3</name>
					<summary>Weapon 3 action.</summary>
				</value>
				<value>
					<name>WEAPON_4</name>
					<summary>Weapon 4 action.</summary>
				</value>
				<value>
					<name>WEAPON_5</name>
					<summary>Weapon 5 action.</summary>
				</value>
				<value>
					<name>WEAPON_6</name>
					<summary>Weapon 6 action.</summary>
				</value>
				<value>
					<name>WEAPON_7</name>
					<summary>Weapon 7 action.</summary>
				</value>
				<value>
					<name>WEAPON_8</name>
					<summary>Weapon 8 action.</summary>
				</value>
				<value>
					<name>WEAPON_9</name>
					<summary>Weapon 9 action.</summary>
				</value>
				<value>
					<name>WEAPON_10</name>
					<summary>Weapon 10 action.</summary>
				</value>
				<value>
					<name>SELECT</name>
					<summary>Select action.</summary>
				</value>
				<value>
					<name>DESELECT</name>
					<summary>Deselect action.</summary>
				</value>
				<value>
					<name>PAUSE</name>
					<summary>Pause action.</summary>
				</value>
				<value>
					<name>INVENTORY</name>
					<summary>Inventory action.</summary>
				</value>
				<value>
					<name>SAVE</name>
					<summary>Save action.</summary>
				</value>
				<value>
					<name>LOAD</name>
					<summary>Load action.</summary>
				</value>
				<value>
					<name>A</name>
					<summary>Keyboard A key.</summary>
				</value>
				<value>
					<name>B</name>
					<summary>Keyboard B key.</summary>
				</value>
				<value>
					<name>C</name>
					<summary>Keyboard C key.</summary>
				</value>
				<value>
					<name>D</name>
					<summary>Keyboard D key.</summary>
				</value>
				<value>
					<name>E</name>
					<summary>Keyboard E key.</summary>
				</value>
				<value>
					<name>F</name>
					<summary>Keyboard F key.</summary>
				</value>
				<value>
					<name>G</name>
					<summary>Keyboard G key.</summary>
				</value>
				<value>
					<name>H</name>
					<summary>Keyboard H key.</summary>
				</value>
				<value>
					<name>I</name>
					<summary>Keyboard I key.</summary>
				</value>
				<value>
					<name>J</name>
					<summary>Keyboard J key.</summary>
				</value>
				<value>
					<name>K</name>
					<summary>Keyboard K key.</summary>
				</value>
				<value>
					<name>L</name>
					<summary>Keyboard L key.</summary>
				</value>
				<value>
					<name>M</name>
					<summary>Keyboard M key.</summary>
				</value>
				<value>
					<name>N</name>
					<summary>Keyboard N key.</summary>
				</value>
				<value>
					<name>O</name>
					<summary>Keyboard O key.</summary>
				</value>
				<value>
					<name>P</name>
					<summary>Keyboard P key.</summary>
				</value>
				<value>
					<name>Q</name>
					<summary>Keyboard Q key.</summary>
				</value>
				<value>
					<name>R</name>
					<summary>Keyboard R key.</summary>
				</value>
				<value>
					<name>S</name>
					<summary>Keyboard S key.</summary>
				</value>
				<value>
					<name>T</name>
					<summary>Keyboard T key.</summary>
				</value>
				<value>
					<name>U</name>
					<summary>Keyboard U key.</summary>
				</value>
				<value>
					<name>V</name>
					<summary>Keyboard V key.</summary>
				</value>
				<value>
					<name>W</name>
					<summary>Keyboard W key.</summary>
				</value>
				<value>
					<name>X</name>
					<summary>Keyboard X key.</summary>
				</value>
				<value>
					<name>Y</name>
					<summary>Keyboard Y key.</summary>
				</value>
				<value>
					<name>Z</name>
					<summary>Keyboard Z key.</summary>
				</value>
				<value>
					<name>NUM1</name>
					<summary>Keyboard 1 key.</summary>
				</value>
				<value>
					<name>NUM2</name>
					<summary>Keyboard 2 key.</summary>
				</value>
				<value>
					<name>NUM3</name>
					<summary>Keyboard 3 key.</summary>
				</value>
				<value>
					<name>NUM4</name>
					<summary>Keyboard 4 key.</summary>
				</value>
				<value>
					<name>NUM5</name>
					<summary>Keyboard 5 key.</summary>
				</value>
				<value>
					<name>NUM6</name>
					<summary>Keyboard 6 key.</summary>
				</value>
				<value>
					<name>NUM7</name>
					<summary>Keyboard 7 key.</summary>
				</value>
				<value>
					<name>NUM8</name>
					<summary>Keyboard 8 key.</summary>
				</value>
				<value>
					<name>NUM9</name>
					<summary>Keyboard 9 key.</summary>
				</value>
				<value>
					<name>NUM0</name>
					<summary>Keyboard 0 key.</summary>
				</value>
				<value>
					<name>RETURN</name>
					<summary>Return/Enter key.</summary>
				</value>
				<value>
					<name>ESCAPE</name>
					<summary>Escape key.</summary>
				</value>
				<value>
					<name>BACKSPACE</name>
					<summary>Backspace key.</summary>
				</value>
				<value>
					<name>TAB</name>
					<summary>Tab key.</summary>
				</value>
				<value>
					<name>SPACE</name>
					<summary>Space key.</summary>
				</value>
				<value>
					<name>HOME</name>
					<summary>Home key.</summary>
				</value>
				<value>
					<name>END</name>
					<summary>End key.</summary>
				</value>
				<value>
					<name>DELETE</name>
					<summary>Delete key.</summary>
				</value>
				<value>
					<name>MINUS</name>
					<summary>Minus key.</summary>
				</value>
				<value>
					<name>EQUALS</name>
					<summary>Equals key.</summary>
				</value>
				<value>
					<name>BRACKET_LEFT</name>
					<summary>Left bracket key.</summary>
				</value>
				<value>
					<name>BRACKET_RIGHT</name>
					<summary>Right bracket key.</summary>
				</value>
				<value>
					<name>BACKSLASH</name>
					<summary>Backslash key.</summary>
				</value>
				<value>
					<name>SEMICOLON</name>
					<summary>Semicolon key.</summary>
				</value>
				<value>
					<name>APOSTROPHE</name>
					<summary>Apostrophe key.</summary>
				</value>
				<value>
					<name>COMMA</name>
					<summary>Comma key.</summary>
				</value>
				<value>
					<name>PERIOD</name>
					<summary>Period key.</summary>
				</value>
				<value>
					<name>SLASH</name>
					<summary>Slash key.</summary>
				</value>
				<value>
					<name>ARROW_UP</name>
					<summary>Arrow up key.</summary>
				</value>
				<value>
					<name>ARROW_DOWN</name>
					<summary>Arrow down key.</summary>
				</value>
				<value>
					<name>ARROW_LEFT</name>
					<summary>Arrow left key.</summary>
				</value>
				<value>
					<name>ARROW_RIGHT</name>
					<summary>Arrow right key.</summary>
				</value>
				<value>
					<name>CTRL</name>
					<summary>Control key.</summary>
				</value>
				<value>
					<name>SHIFT</name>
					<summary>Shift key.</summary>
				</value>
				<value>
					<name>ALT</name>
					<summary>Alt key.</summary>
				</value>
				<value>
					<name>MOUSE_CLICK_LEFT</name>
					<summary>Mouse left click.</summary>
				</value>
				<value>
					<name>MOUSE_CLICK_MIDDLE</name>
					<summary>Mouse middle click.</summary>
				</value>
				<value>
					<name>MOUSE_CLICK_RIGHT</name>
					<summary>Mouse right click.</summary>
				</value>
				<value>
					<name>MOUSE_SCROLL_UP</name>
					<summary>Mouse scroll up.</summary>
				</value>
				<value>
					<name>MOUSE_SCROLL_DOWN</name>
					<summary>Mouse scroll down.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Input.AxisID</name>
			<summary>Constants for analog axis IDs.</summary>
			<description>To be used with @{Input.GetAnalogAxisValue}.</description>
			<values>
				<value>
					<name>MOVE</name>
					<summary>Analog axis configured for player's movement.</summary>
				</value>
				<value>
					<name>CAMERA</name>
					<summary>Analog axis configured for camera movement.</summary>
				</value>
				<value>
					<name>MOUSE</name>
					<summary>Raw mouse input analog axis.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.AmmoType</name>
			<summary>Constants for player weapon ammo types.</summary>
			<description>To be used with @{Objects.LaraObject.GetAmmoType} function.</description>
			<values>
				<value>
					<name>PISTOLS</name>
					<summary>Pistol ammo.</summary>
				</value>
				<value>
					<name>REVOLVER</name>
					<summary>Revolver ammo.</summary>
				</value>
				<value>
					<name>UZI</name>
					<summary>Uzi ammo.</summary>
				</value>
				<value>
					<name>SHOTGUN_NORMAL</name>
					<summary>Normal shotgun shells.</summary>
				</value>
				<value>
					<name>SHOTGUN_WIDE</name>
					<summary>Wide spread shotgun shells.</summary>
				</value>
				<value>
					<name>HK</name>
					<summary>HK ammo.</summary>
				</value>
				<value>
					<name>CROSSBOW_BOLT_NORMAL</name>
					<summary>Normal crossbow bolts.</summary>
				</value>
				<value>
					<name>CROSSBOW_BOLT_POISON</name>
					<summary>Poison crossbow bolts.</summary>
				</value>
				<value>
					<name>CROSSBOW_BOLT_EXPLOSIVE</name>
					<summary>Explosive crossbow bolts.</summary>
				</value>
				<value>
					<name>GRENADE_NORMAL</name>
					<summary>Normal grenades.</summary>
				</value>
				<value>
					<name>GRENADE_FRAG</name>
					<summary>Fragmentation grenades.</summary>
				</value>
				<value>
					<name>GRENADE_FLASH</name>
					<summary>Flash grenades.</summary>
				</value>
				<value>
					<name>HARPOON</name>
					<summary>Harpoon ammunition.</summary>
				</value>
				<value>
					<name>ROCKET</name>
					<summary>Rocket ammunition.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.HandStatus</name>
			<summary>Constants for player hand statuses.</summary>
			<description>To be used with @{Objects.LaraObject.GetAmmoType} function.</description>
			<values>
				<value>
					<name>FREE</name>
					<summary>Hand is free.</summary>
				</value>
				<value>
					<name>BUSY</name>
					<summary>Hand is busy.</summary>
				</value>
				<value>
					<name>WEAPON_DRAW</name>
					<summary>Hand is drawing weapon.</summary>
				</value>
				<value>
					<name>WEAPON_UNDRAW</name>
					<summary>Hand is undrawing weapon.</summary>
				</value>
				<value>
					<name>WEAPON_READY</name>
					<summary>Hand has weapon ready.</summary>
				</value>
				<value>
					<name>SPECIAL</name>
					<summary>Hand is in special state.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.WeaponType</name>
			<summary>Constants for weapon types.</summary>
			<description>To be used with @{Objects.LaraObject.GetWeaponType} and @{Objects.LaraObject.SetWeaponType} functions.
 &lt;br&gt;
 Note that this table also contains the flare and torch, as they are internally counted as "weapons" in the engine.</description>
			<values>
				<value>
					<name>NONE</name>
					<summary>No weapon.</summary>
				</value>
				<value>
					<name>PISTOLS</name>
					<summary>Pistols.</summary>
				</value>
				<value>
					<name>UZIS</name>
					<summary>Uzi submachine guns.</summary>
				</value>
				<value>
					<name>REVOLVER</name>
					<summary>Revolver.</summary>
				</value>
				<value>
					<name>SHOTGUN</name>
					<summary>Shotgun.</summary>
				</value>
				<value>
					<name>HK</name>
					<summary>HK MP5.</summary>
				</value>
				<value>
					<name>CROSSBOW</name>
					<summary>Crossbow.</summary>
				</value>
				<value>
					<name>FLARE</name>
					<summary>Flare.</summary>
				</value>
				<value>
					<name>TORCH</name>
					<summary>Torch.</summary>
				</value>
				<value>
					<name>GRENADE_LAUNCHER</name>
					<summary>Grenade launcher.</summary>
				</value>
				<value>
					<name>HARPOON_GUN</name>
					<summary>Harpoon gun.</summary>
				</value>
				<value>
					<name>ROCKET_LAUNCHER</name>
					<summary>Rocket launcher.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.MoveableStatus</name>
			<summary>Constants for moveable statuses.</summary>
			<description>To be used with @{Objects.Moveable.GetStatus} and @{Objects.Moveable.SetStatus} functions.</description>
			<values>
				<value>
					<name>INACTIVE</name>
					<summary>Moveable is inactive (was never activated).</summary>
				</value>
				<value>
					<name>ACTIVE</name>
					<summary>Moveable is active.</summary>
				</value>
				<value>
					<name>DEACTIVATED</name>
					<summary>Moveable is deactivated (was previously active and later deactivated).</summary>
				</value>
				<value>
					<name>INVISIBLE</name>
					<summary>Moveable is invisible.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.ObjID</name>
			<summary>Constants for object IDs.</summary>
			<values>
				<value>
					<name>LARA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_EXTRA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PISTOLS_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UZI_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOTGUN_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>REVOLVER_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HK_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GRENADE_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROCKET_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HARPOON_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLARE_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SKIN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SKIN_JOINTS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SCREAM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_CROSSBOW_LASER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_REVOLVER_LASER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_HOLSTERS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_HOLSTERS_PISTOLS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_HOLSTERS_UZIS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_HOLSTERS_REVOLVER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SPEECH_HEAD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SPEECH_HEAD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SPEECH_HEAD3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_SPEECH_HEAD4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ACTOR1_SPEECH_HEAD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ACTOR1_SPEECH_HEAD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ACTOR2_SPEECH_HEAD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ACTOR2_SPEECH_HEAD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_BINOCULARS_MESH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_EXTRA_MESH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_EXTRA_MESH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_WATER_MESH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_PETROL_MESH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_DIRT_MESH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_CROWBAR_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_TORCH_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HAIR_PRIMARY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HAIR_SECONDARY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SNOWMOBILE_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SNOWMOBILE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>QUAD_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>QUAD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPEEDBOAT_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPEEDBOAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KAYAK_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KAYAK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UPV_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UPV</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MINECART_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MINECART</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>JEEP_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>JEEP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MOTORBIKE_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MOTORBIKE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RUBBER_BOAT_LARA_ANIMS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RUBBER_BOAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_BIGGUN_ANIM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIGGUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>VEHICLE_SMASHABLE_FLOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>VEHICLE_SMASHABLE_WALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WOLF</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BEAR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>APE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMALL_SPIDER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIG_SPIDER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROW</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TIGER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>EAGLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAPTOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TYRANNOSAUR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COBRA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MONKEY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WHALE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COMPSOGNATHUS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FISH_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIG_RAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROCODILE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPHINX</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WILD_BOAR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HARPY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIG_SCORPION</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMALL_SCORPION</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BABOON_NORMAL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BABOON_INV</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BABOON_SILENT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LITTLE_BEETLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LOCUSTS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHARK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HUSKIE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOG</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BATS_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RATS_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPIDERS_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LION</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOBERMAN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HAMMERHEAD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROCODILE_GOD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LOCUSTS_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SCUBA_HARPOON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SCUBA_DIVER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GOON_SILENCER1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GOON_SILENCER2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GOON_SILENCER3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BARRACUDA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WORKER_SHOTGUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WORKER_MACHINEGUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WORKER_DUAL_REVOLVER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WORKER_FLAMETHROWER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MONK1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MONK2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KNIFETHROWER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KNIFETHROWER_KNIFE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MERCENARY_UZI</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MERCENARY_AUTOPISTOLS1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MERCENARY_AUTOPISTOLS2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SNOWMOBILE_GUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SNOWMOBILE_DRIVER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLAMETHROWER_BADDY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRIBESMAN_WITH_AX</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRIBESMAN_WITH_DARTS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MP_WITH_STICK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MP_WITH_GUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BADDY1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BADDY2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SAS_CAIRO</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SAS_DYING</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SAS_CAPTAIN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SAS_DRAG_BLOKE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUIDE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>VON_CROY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TROOPS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SAS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWAT_PLUS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUARD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUARD_LASER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARSON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PIERRE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MAFIA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MAFIA2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUARD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUARD3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GLADIATOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CYBORG</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SNIPER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CHEF</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KOLD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WINGED_MUMMY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CENTAUR_MUTANT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOPPELGANGER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>NATLA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GIANT_MUTANT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PROJ_SHARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PROJ_BOMB</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>YETI</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIRDMONSTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MARCO_BARTOLI</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DRAGON_FRONT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DRAGON_BACK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DRAGON_BONE_FRONT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DRAGON_BONE_BACK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPHERE_OF_DOOM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPHERE_OF_DOOM2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPHERE_OF_DOOM3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COWBOY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPEAR_GUARDIAN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPEAR_GUARDIAN_STATUE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWORD_GUARDIAN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWORD_GUARDIAN_STATUE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHIVA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHIVA_STATUE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WILLARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CIVVY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MUTANT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIZARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TONY_BOSS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TONY_BOSS_FLAME</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUNA_BOSS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SOPHIA_LEIGH_BOSS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASER_BOLT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SKELETON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MUMMY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ENEMY_JEEP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HORSE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HORSEMAN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DEMIGOD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DEMIGOD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DEMIGOD3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SETHA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KNIGHT_TEMPLAR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AHMET</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIG_BEETLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>JEAN_YVES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRAITH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRAITH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRAITH3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRAITH4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_DOUBLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HYDRA</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASERHEAD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SCIENTIST</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MERCENARY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WILLOWISP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVISIBLE_GHOST</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>REAPER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BROWN_BEAST</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ATTACK_SUB</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>IMP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>IMP_ROCK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUNSHIP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AUTO_GUN_VCI</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROMAN_GOD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROMAN_GOD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LAGOON_WITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BOSS_SHIELD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BOSS_EXPLOSION_SHOCKWAVE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BOSS_EXPLOSION_RING</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CLAW_MUTANT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WASP_MUTANT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TWIN_AUTO_GUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SKATEBOARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SKATEBOARD_KID</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WINSTON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEAL_MUTANT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPRINGBOARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROLLING_SPINDLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DISK_SHOOTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DISK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WALL_MOUNTED_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STATUE_WITH_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COG</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPIKEBALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLOOR_4BLADES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CEILING_4BLADES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CATWALK_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SETH_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PLINTH_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SLICER_DICER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIRD_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CHAIN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PLOUGH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STARGATE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPIKY_FLOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPIKY_WALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SPIKY_CEILING</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TEETH_SPIKES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>JOBY_SPIKES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SENTRY_GUN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MAPPER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MOVING_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELEMENT_PUZZLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIGHTING_CONDUCTOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HAMMER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>OBELISK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WHEEL_OF_FORTUNE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GAME_PIECE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GAME_PIECE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GAME_PIECE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAISING_COG</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MINE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SCALES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROME_HAMMER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLAME</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLAME_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLAME_EMITTER2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLAME_EMITTER3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BURNING_ROOTS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROPE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FIREROPE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>POLEROPE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRICAL_CABLES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BURNING_FLOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DARTS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DART_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HOMING_DART_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FALLING_CEILING</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FALLING_BLOCK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FALLING_BLOCK2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CRUMBLING_FLOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRAPDOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRAPDOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRAPDOOR3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLOOR_TRAPDOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLOOR_TRAPDOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CEILING_TRAPDOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CEILING_TRAPDOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SCALING_TRAPDOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROLLINGBALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROLLINGBARREL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PROPELLER_H</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PROPELLER_V</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ONEBLOCK_PLATFORM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TWOBLOCK_PLATFORM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAISING_BLOCK1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAISING_BLOCK2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAISING_BLOCK3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>RAISING_BLOCK4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRECKING_BALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ZIPLINE_HANDLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TORPEDO</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CHAFF</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRIC_FENCE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIFT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TIGHT_ROPE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PARALLEL_BARS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>XRAY_CONTROLLER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PORTAL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GEN_SLOT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GEN_SLOT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GEN_SLOT3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GEN_SLOT4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEARCH_OBJECT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEARCH_OBJECT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEARCH_OBJECT3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEARCH_OBJECT4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SARCOPHAGUS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ENEMY_PIECE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>EXPANDING_PLATFORM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SQUISHY_BLOCK_HORIZONTAL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SQUISHY_BLOCK_VERTICAL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASER_BEAM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MINE_DETECTOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MAP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SECRET_MAP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SETH_DOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HORUS_STATUE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STATUE_PLINTH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CLASSIC_ROLLING_BALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BIG_ROLLING_BALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHABLE_OBJECT_CLIMBABLE_10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRAIN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>EXPLOSION</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DAMOCLES_SWORD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRIC_CLEANER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SLAMMING_DOORS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWINGING_BLADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRIC_BALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRIC_BALL_IMPACT_POINT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>THOR_HAMMER_HANDLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>THOR_HAMMER_HEAD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MOVING_LASER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM3</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM4</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM5</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM6</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM7</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM8</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM9</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM10</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM11</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM12</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM13</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM14</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM15</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM16</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM1_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM1_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM2_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM2_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM3_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM3_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM4_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM4_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM5_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM5_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM6_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM6_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM7_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM7_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM8_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM8_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM9_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM9_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM10_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM10_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM11_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM11_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM12_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM12_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM13_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM13_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM14_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM14_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM15_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM15_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM16_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_ITEM16_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM3</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM4</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM5</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM6</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM7</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM8</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM9</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM10</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM11</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM12</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM13</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM14</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM15</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM16</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM1_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM1_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM2_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM2_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM3_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM3_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM4_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM4_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM5_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM5_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM6_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM6_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM7_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM7_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM8_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM8_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM9_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM9_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM10_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM10_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM11_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM11_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM12_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM12_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM13_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM13_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM14_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM14_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM15_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM15_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM16_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>KEY_ITEM16_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM3</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM4</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM5</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM6</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM7</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM8</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM9</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM10</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM11</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM12</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM13</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM14</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM15</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM16</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM1_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM1_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM2_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM2_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM3_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM3_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM4_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM4_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM5_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM5_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM6_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM6_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM7_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM7_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM8_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM8_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM9_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM9_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM10_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM10_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM11_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM11_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM12_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM12_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM13_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM13_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM14_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM14_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM15_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM15_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM16_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PICKUP_ITEM16_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE3</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE4</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE5</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE6</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE7</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE8</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE1_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE1_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE2_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE2_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE3_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE3_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE4_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE4_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE5_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE5_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE6_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE6_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE7_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE7_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE8_COMBO1</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>EXAMINE8_COMBO2</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_HOLE16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUZZLE_DONE16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KEY_HOLE16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN1_EMPTY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN1_1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN1_2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN1_3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_EMPTY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERSKIN2_5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HAMMER_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROWBAR_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>BURNING_TORCH_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CLOCKWORK_BEETLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CLOCKWORK_BEETLE_COMBO1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CLOCKWORK_BEETLE_COMBO2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SWITCH_TYPE16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOOT_SWITCH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOOT_SWITCH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOOT_SWITCH3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOOT_SWITCH4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AIRLOCK_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_WALL_SWITCH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_WALL_SWITCH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_CEILING_SWITCH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_CEILING_SWITCH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TURN_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COG_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LEVER_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>JUMP_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROWBAR_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PULLEY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CROWDOVE_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MINECART_SWITCH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE17</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE18</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE19</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE20</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE21</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE22</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE23</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE24</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE25</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE26</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE27</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE28</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE29</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOOR_TYPE30</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIFT_DOORS1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIFT_DOORS2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHPULL_DOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHPULL_DOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHPULL_DOOR3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PUSHPULL_DOOR4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KICK_DOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KICK_DOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KICK_DOOR3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KICK_DOOR4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_DOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_DOOR2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_DOOR3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>UNDERWATER_DOOR4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOUBLE_DOORS1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOUBLE_DOORS2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOUBLE_DOORS3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOUBLE_DOORS4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEQUENCE_DOOR1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEQUENCE_SWITCH1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEQUENCE_SWITCH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SEQUENCE_SWITCH3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STEEL_DOOR</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GOD_HEAD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BREAKABLE_WALL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PISTOLS_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PISTOLS_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>UZI_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>UZI_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>SHOTGUN_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>SHOTGUN_AMMO1_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>SHOTGUN_AMMO2_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>REVOLVER_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>REVOLVER_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_AMMO1_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_AMMO2_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_AMMO3_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>CROSSBOW_BOLT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HK_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>HK_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>GRENADE_GUN_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>GRENADE_AMMO1_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>GRENADE_AMMO2_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>GRENADE_AMMO3_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>GRENADE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ROCKET_LAUNCHER_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>ROCKET_LAUNCHER_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>ROCKET</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HARPOON_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>HARPOON_AMMO_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>HARPOON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GOLDROSE_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>BIGMEDI_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>SMALLMEDI_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>LASERSIGHT_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>BINOCULARS_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>SILENCER_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>FLARE_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>FLARE_INV_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>COMPASS_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>DIARY_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>STOPWATCH_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>MEMCARD_LOAD_INV_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>MEMCARD_SAVE_INV_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PC_LOAD_INV_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>PC_SAVE_INV_ITEM</name>
					<summary>Pickup constant.</summary>
				</value>
				<value>
					<name>DIARY_OPEN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVENTORY_PASSPORT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVENTORY_SUNGLASSES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVENTORY_KEYS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVENTORY_HEADPHONES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>INVENTORY_PHOTO</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMOKE_EMITTER_WHITE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMOKE_EMITTER_BLACK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMOKE_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>EARTHQUAKE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BUBBLES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALLMIST</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUNSHELL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SHOTGUNSHELL</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUN_FLASH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>GUN_FLASH2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>COLOR_LIGHT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BLINKING_LIGHT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PULSE_LIGHT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STROBE_LIGHT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ELECTRICAL_LIGHT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LENS_FLARE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ENERGY_BUBBLES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>PLANET_EFFECT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BUTTERFLY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_GUARD</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_AMBUSH</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_PATROL1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_MODIFY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_FOLLOW</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_PATROL2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_X1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>AI_X2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LARA_START_POS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TELEPORTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LIFT_TELEPORTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASER_BARRIER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>STEAM_LASERS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FLOOR_LASERS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>KILL_ALL_TRIGGERS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>TRIGGER_TRIGGERER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HIGH_OBJECT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>EMBER_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SMASH_OBJECT16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BODY_PART</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CAMERA_TARGET</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALLSS1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALLSS2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FISHTANK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>DOPPELGANGER_ORIGIN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>CORPSE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WRAITH_TRAP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>WATERFALL_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>FIREFLY_EMITTER</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_BADDY1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_BADDY2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_MAFIA2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_IMP</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_HITMAN</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_ROMAN_GOD1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_ROMAN_GOD2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_MONKEY_MEDIPACK</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_MONKEY_KEY</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>MESHSWAP_WINSTON_ARMY_OUTFIT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING5</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING6</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING7</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING8</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING9</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING10</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING11</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING12</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING13</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING14</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING15</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING16</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING17</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING18</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING19</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING20</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING21</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING22</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING23</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING24</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING25</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING26</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING27</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING28</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING29</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING30</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING31</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING32</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING33</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING34</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING35</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING36</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING37</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING38</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING39</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING40</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING41</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING42</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING43</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING44</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING45</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING46</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING47</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING48</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING49</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING50</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING51</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING52</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING53</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING54</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING55</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING56</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING57</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING58</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING59</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING60</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING61</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING62</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING63</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING64</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING65</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING66</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING67</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING68</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING69</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING70</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING71</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING72</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING73</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING74</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING75</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING76</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING77</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING78</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING79</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING80</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING81</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING82</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING83</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING84</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING85</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING86</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING87</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING88</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING89</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING90</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING91</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING92</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING93</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING94</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING95</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING96</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING97</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING98</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING99</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING100</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING101</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING102</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING103</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING104</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING105</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING106</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING107</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING108</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING109</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING110</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING111</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING112</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING113</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING114</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING115</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING116</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING117</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING118</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING119</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING120</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING121</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING122</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING123</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING124</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING125</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING126</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING127</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>ANIMATING128</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASERHEAD_BASE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASERHEAD_TENTACLE</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_FLAT</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_TILT1</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_TILT2</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_TILT3</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_TILT4</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BRIDGE_CUSTOM</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>HORIZON</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>SKY_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>DEFAULT_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>MISC_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>CUSTOM_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>FIRE_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SMOKE_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SPARK_SPRITE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>DRIP_SPRITE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>EXPLOSION_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>MOTORBOAT_FOAM_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>RUBBER_BOAT_WAVE_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SKIDOO_SNOW_TRAIL_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>KAYAK_PADDLE_TRAIL_SPRITE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>KAYAK_WAKE_SPRTIES</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>BINOCULAR_GRAPHICS</name>
					<summary>Generic constant.</summary>
				</value>
				<value>
					<name>LASERSIGHT_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>CAUSTIC_TEXTURES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>BAR_BORDER_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>HEALTH_BAR_TEXTURE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>AIR_BAR_TEXTURE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>DASH_BAR_TEXTURE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SFX_BAR_TEXTURE</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>WATERFALL_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>FIREFLY_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>CROSSHAIR_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SPEEDOMETER_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>CUSTOM_BAR_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>CUSTOM_AMMO_GRAPHICS</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>DIARY_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>DIARY_ENTRY_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>SNOW_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
				<value>
					<name>RAIN_SPRITES</name>
					<summary>Sprite constant.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.RoomFlagID</name>
			<summary>Constants for room flag IDs.</summary>
			<description>Corresponds to room flags in Tomb Editor. To be used with @{Objects.Room.SetFlag} and @{Objects.Room.GetFlag} functions.</description>
			<values>
				<value>
					<name>WATER</name>
					<summary>Water room flag.</summary>
				</value>
				<value>
					<name>QUICKSAND</name>
					<summary>Quicksand room flag.</summary>
				</value>
				<value>
					<name>SKYBOX</name>
					<summary>Skybox room flag.</summary>
				</value>
				<value>
					<name>WIND</name>
					<summary>Wind room flag.</summary>
				</value>
				<value>
					<name>COLD</name>
					<summary>Cold room flag.</summary>
				</value>
				<value>
					<name>DAMAGE</name>
					<summary>Damage room flag.</summary>
				</value>
				<value>
					<name>NOLENSFLARE</name>
					<summary>No lens flare room flag.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Objects.RoomReverb</name>
			<summary>Constants for room reverb types.</summary>
			<description>Corresponds to room reverb setting set in Tomb Editor. To be used with @{Objects.Room.GetReverbType} and @{Objects.Room.SetReverbType} functions.</description>
			<values>
				<value>
					<name>OUTSIDE</name>
					<summary>Outdoor / open environment reverb.</summary>
				</value>
				<value>
					<name>SMALL</name>
					<summary>Small room reverb.</summary>
				</value>
				<value>
					<name>MEDIUM</name>
					<summary>Medium room reverb.</summary>
				</value>
				<value>
					<name>LARGE</name>
					<summary>Large room reverb.</summary>
				</value>
				<value>
					<name>PIPE</name>
					<summary>Pipe / tunnel reverb.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Sound.SoundTrackType</name>
			<summary>Constants for the type of the audio tracks.</summary>
			<description>To be used with sound track functions, such as @{Sound.PlayAudioTrack} and @{Sound.StopAudioTrack}.</description>
			<values>
				<value>
					<name>ONESHOT</name>
					<summary>Used for one-time music tracks.</summary>
				</value>
				<value>
					<name>LOOPED</name>
					<summary>Used for looped ambience or music.</summary>
				</value>
				<value>
					<name>VOICE</name>
					<summary>Used for dialogs.</summary>
					<description>Also supports subtitles, set by @{Sound.GetCurrentSubtitle} function.</description>
				</value>
			</values>
		</enum>
		<enum>
			<name>Strings.DisplayStringOption</name>
			<summary>Constants for Display String Options.</summary>
			<description>To be used with @{Strings.DisplayString} class.</description>
			<values>
				<value>
					<name>CENTER</name>
					<summary>Sets the horizontal origin point to the center of the string.</summary>
				</value>
				<value>
					<name>SHADOW</name>
					<summary>Gives the string a drop shadow effect.</summary>
				</value>
				<value>
					<name>RIGHT</name>
					<summary>Sets the horizontal origin point to the right side of the string.</summary>
				</value>
				<value>
					<name>BLINK</name>
					<summary>Blinks the string.</summary>
				</value>
				<value>
					<name>VERTICAL_CENTER</name>
					<summary>Sets the vertical origin point of the multiline string to the center.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>Util.LogLevel</name>
			<summary>Constants for LogLevel IDs.</summary>
			<description>To be used with @{Util.PrintLog} function.</description>
			<values>
				<value>
					<name>INFO</name>
					<summary>Only information messages will be shown.</summary>
				</value>
				<value>
					<name>WARNING</name>
					<summary>Non-critical warnings and information messages will be shown.</summary>
				</value>
				<value>
					<name>ERROR</name>
					<summary>Critical errors, non-critical warnings and information messages will be shown.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>View.AlignMode</name>
			<summary>Constants for sprite align modes.</summary>
			<description>To be used with @{Strings.DisplayString} class.</description>
			<values>
				<value>
					<name>CENTER</name>
					<summary>Center alignment.</summary>
				</value>
				<value>
					<name>CENTER_TOP</name>
					<summary>Center top alignment.</summary>
				</value>
				<value>
					<name>CENTER_BOTTOM</name>
					<summary>Center bottom alignment.</summary>
				</value>
				<value>
					<name>CENTER_LEFT</name>
					<summary>Center left alignment.</summary>
				</value>
				<value>
					<name>CENTER_RIGHT</name>
					<summary>Center right alignment.</summary>
				</value>
				<value>
					<name>TOP_LEFT</name>
					<summary>Top left alignment.</summary>
				</value>
				<value>
					<name>TOP_RIGHT</name>
					<summary>Top right alignment.</summary>
				</value>
				<value>
					<name>BOTTOM_LEFT</name>
					<summary>Bottom left alignment.</summary>
				</value>
				<value>
					<name>BOTTOM_RIGHT</name>
					<summary>Bottom right alignment.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>View.CameraType</name>
			<summary>Constants for the type of the Camera.</summary>
			<description>To be used with @{View.GetCameraType} function.</description>
			<values>
				<value>
					<name>NORMAL</name>
					<summary>Standard in-game camera when weapons are holstered.</summary>
				</value>
				<value>
					<name>COMBAT</name>
					<summary>In-game camera when weapons are unholstered.</summary>
				</value>
				<value>
					<name>FIXED</name>
					<summary>Classic fixed camera.</summary>
				</value>
				<value>
					<name>LOOK</name>
					<summary>Look camera.</summary>
				</value>
				<value>
					<name>FLYBY</name>
					<summary>Flyby or tracking camera.</summary>
				</value>
				<value>
					<name>BINOCULARS</name>
					<summary>Binocular camera.</summary>
				</value>
				<value>
					<name>LASERSIGHT</name>
					<summary>Lasersight camera.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>View.PostProcessMode</name>
			<summary>Constants for the post-process effects to apply.</summary>
			<description>To be used with @{View.SetPostProcessMode} function.</description>
			<values>
				<value>
					<name>NONE</name>
					<summary>No postprocess effect.</summary>
				</value>
				<value>
					<name>MONOCHROME</name>
					<summary>Black &amp; white effect.</summary>
				</value>
				<value>
					<name>NEGATIVE</name>
					<summary>Negative image effect.</summary>
				</value>
				<value>
					<name>EXCLUSION</name>
					<summary>Similar to negative effect, but with different color operation.</summary>
				</value>
			</values>
		</enum>
		<enum>
			<name>View.ScaleMode</name>
			<summary>Constants for display sprite scale modes.</summary>
			<description>To be used with @{View.DisplaySprite} class.</description>
			<values>
				<value>
					<name>FIT</name>
					<summary>Image will proportionally fit the whole image into the sprite surface.</summary>
				</value>
				<value>
					<name>FILL</name>
					<summary>Image will scale up proportionally and crop to fill all sprite surface.</summary>
				</value>
				<value>
					<name>STRETCH</name>
					<summary>Image will stretch according to sprite dimensions, not taking aspect ratio into consideration.</summary>
				</value>
			</values>
		</enum>
	</enums>
</api>